<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冯天鹤&#39;s Blog</title>
  
  <subtitle>「不忘初心方得始终」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fengtianhe.cn/"/>
  <updated>2019-11-07T02:22:22.706Z</updated>
  <id>http://fengtianhe.cn/</id>
  
  <author>
    <name>冯天鹤</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript Text Different</title>
    <link href="http://fengtianhe.cn/Javascript-textDifferent/"/>
    <id>http://fengtianhe.cn/Javascript-textDifferent/</id>
    <published>2019-11-07T02:18:37.000Z</published>
    <updated>2019-11-07T02:22:22.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>实现工商信息变更样式</p></blockquote><p>效果图：<br><img src="/images/js_text_diff.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">diff</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> oldStr = <span class="string">'技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售新鲜蔬菜、新鲜水果、文化用品、工艺品、日用品、厨房用具；零售电子产品。依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。'</span></span><br><span class="line"><span class="keyword">let</span> newStr = <span class="string">'销售食品。技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售文化用品、工艺品、日用品、厨房用具、销售食品以及依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。'</span></span><br><span class="line">       <span class="comment">// 通过符号分割成数组</span></span><br><span class="line"><span class="keyword">let</span> oldStrArr = oldStr.split(<span class="regexp">/[、；，。]/</span>)</span><br><span class="line"><span class="keyword">let</span> diffNewStr = newStr</span><br><span class="line">       <span class="comment">// 将完全相同的部分替换掉</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> oldStrArr)&#123;</span><br><span class="line">diffNewStr = diffNewStr.replace(key, <span class="string">''</span>)</span><br><span class="line">&#125;</span><br><span class="line">       <span class="comment">// 去除新字符串中替换掉的空字符串</span></span><br><span class="line"><span class="keyword">let</span> diffNewArr = diffNewStr.split(<span class="regexp">/[、；，。]/</span>).filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;<span class="keyword">return</span> !!item&#125;)</span><br><span class="line"><span class="keyword">let</span> strWithDiff = <span class="string">''</span></span><br><span class="line">       <span class="comment">// 将新的字符串中不同的部分标红</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> addStr <span class="keyword">of</span> diffNewArr)&#123;</span><br><span class="line">strWithDiff = newStr.replace(addStr, <span class="string">`&lt;span style="color:red"&gt;<span class="subst">$&#123;addStr&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> strWithDiff</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;实现工商信息变更样式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;/images/js_text_diff.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;
      
    
    </summary>
    
    
      <category term="Javascript" scheme="http://fengtianhe.cn/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative-组件React-Native-Camera</title>
    <link href="http://fengtianhe.cn/ReactNative-%E7%BB%84%E4%BB%B6react-native-camera/"/>
    <id>http://fengtianhe.cn/ReactNative-组件react-native-camera/</id>
    <published>2019-09-09T03:28:27.000Z</published>
    <updated>2019-11-07T01:56:39.303Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ReactNative版本-lt-0-60-0"><a href="#ReactNative版本-lt-0-60-0" class="headerlink" title="ReactNative版本 &lt; 0.60.0"></a>ReactNative版本 &lt; 0.60.0</h3><h4 id="1-1、安装-react-native-camera-2-9-0-版本"><a href="#1-1、安装-react-native-camera-2-9-0-版本" class="headerlink" title="1.1、安装  `react-native-camera@2.9.0` 版本"></a>1.1、安装  <a href="mailto:`react-native-camera@2.9.0">`react-native-camera@2.9.0</a>` 版本</h4><p>将 <code>missingDimensionStrategy &#39;react-native-camera&#39;, &#39;general&#39;</code> 加入到 android/app/build.gradle 中<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        missingDimensionStrategy <span class="string">'react-native-camera'</span>, <span class="string">'mlkit'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="1-2、修改-android-build-gradle-中的-classpath"><a href="#1-2、修改-android-build-gradle-中的-classpath" class="headerlink" title="1.2、修改 android/build.gradle 中的 classpath"></a>1.2、修改 <code>android/build.gradle</code> 中的 classpath</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    ext &#123;</span><br><span class="line">        buildToolsVersion = <span class="string">"28.0.3"</span></span><br><span class="line">        minSdkVersion = <span class="number">16</span></span><br><span class="line">        compileSdkVersion = <span class="number">28</span></span><br><span class="line">        targetSdkVersion = <span class="number">28</span></span><br><span class="line">        supportLibVersion = <span class="string">"28.0.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="comment">// 注意这里的版本</span></span><br><span class="line">        <span class="keyword">classpath</span>(<span class="string">'com.android.tools.build:gradle:3.3.0'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            <span class="comment">// All of React Native (JS, Obj-C sources, Android binaries) is installed from npm</span></span><br><span class="line">            url <span class="string">"$rootDir/../node_modules/react-native/android"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3、修改-android-gradle-wrapper-gradle-wrapper-properties-中的-gradle-version"><a href="#1-3、修改-android-gradle-wrapper-gradle-wrapper-properties-中的-gradle-version" class="headerlink" title="1.3、修改 android/gradle/wrapper/gradle-wrapper.properties 中的 gradle version"></a>1.3、修改 android/gradle/wrapper/gradle-wrapper.properties 中的 gradle version</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">distributionUrl=https\<span class="symbol">://services</span>.gradle.org/distributions/gradle-<span class="number">4.10</span>.<span class="number">1</span>-all.zip</span><br></pre></td></tr></table></figure><h4 id="1-4、修改打包配置-app-build-gradle"><a href="#1-4、修改打包配置-app-build-gradle" class="headerlink" title="1.4、修改打包配置 app/build.gradle"></a>1.4、修改打包配置 <code>app/build.gradle</code></h4><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">android</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/proguard/androidx-annotations.pro'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="使用react-native-camera扫码"><a href="#使用react-native-camera扫码" class="headerlink" title="使用react-native-camera扫码"></a>使用react-native-camera扫码</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React from <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> &#123;RNCamera&#125; from <span class="string">"react-native-camera"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Animated, Easing, Modal, Platform, StyleSheet, Text, Vibration, View&#125; from <span class="string">'react-native'</span></span><br><span class="line"><span class="keyword">import</span> PropType from <span class="string">'prop-types'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Sound = require(<span class="string">'react-native-sound'</span>);</span><br><span class="line">Sound.setCategory(<span class="string">'Playback'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scanner</span> <span class="title">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  static propTypes = &#123;</span><br><span class="line">    visible: PropType.bool.isRequired,</span><br><span class="line">    onClose: PropType.func.isRequired,</span><br><span class="line">    onScanSuccess: PropType.func</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span> (props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      moveAnim: new Animated.Value(<span class="number">0</span>),</span><br><span class="line">      code: <span class="string">''</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount () &#123;</span><br><span class="line">    <span class="keyword">this</span>.startAnimation();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  startAnimation = () =&gt; &#123;</span><br><span class="line">    <span class="keyword">this</span>.state.moveAnim.setValue(<span class="number">0</span>);</span><br><span class="line">    Animated.timing(</span><br><span class="line">      <span class="keyword">this</span>.state.moveAnim,</span><br><span class="line">      &#123;</span><br><span class="line">        toValue: <span class="number">-200</span>,</span><br><span class="line">        duration: <span class="number">5000</span>,</span><br><span class="line">        easing: Easing.linear</span><br><span class="line">      &#125;</span><br><span class="line">    ).start(() =&gt; <span class="keyword">this</span>.startAnimation());</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//  识别二维码</span></span><br><span class="line">  onBarCodeRead = (result) =&gt; &#123;</span><br><span class="line">    const &#123;<span class="keyword">data</span>&#125; = result;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">data</span> &amp;&amp; !<span class="keyword">this</span>.state.code) &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;code: <span class="keyword">data</span>&#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 扫码提示音</span></span><br><span class="line">      <span class="keyword">var</span> whoosh = new Sound(<span class="string">'scanner.mp3'</span>, Sound.MAIN_BUNDLE, (error) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          console.log(<span class="string">'failed to load the sound'</span>, error);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// loaded successfully</span></span><br><span class="line">        console.log(<span class="string">'duration in seconds: '</span> + whoosh.getDuration() + <span class="string">'number of channels: '</span> + whoosh.getNumberOfChannels());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Play the sound with an onEnd callback</span></span><br><span class="line">        whoosh.play((success) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            whoosh.pause()</span><br><span class="line">            console.log(<span class="string">'scan qr result =&gt; '</span>, <span class="keyword">data</span>)</span><br><span class="line">            <span class="keyword">this</span>.props.onScanSuccess &amp;&amp; <span class="keyword">this</span>.props.onScanSuccess(<span class="keyword">data</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            console.log(<span class="string">'playback failed due to audio decoding errors'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      whoosh.setNumberOfLoops(<span class="number">1</span>);</span><br><span class="line">      whoosh.release();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//手机振动</span></span><br><span class="line">      <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">        Vibration.vibrate(<span class="number">100</span>, <span class="literal">false</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Vibration.vibrate([<span class="number">0</span>, <span class="number">100</span>], <span class="literal">false</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render () &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Modal</span><br><span class="line">        visible=&#123;<span class="keyword">this</span>.props.visible&#125;</span><br><span class="line">        onRequestClose=&#123;<span class="keyword">this</span>.props.onClose&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">          &lt;RNCamera</span><br><span class="line">            ref=&#123;ref =&gt; &#123;</span><br><span class="line">              <span class="keyword">this</span>.camera = ref;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            style=&#123;styles.preview&#125;</span><br><span class="line">            type=&#123;RNCamera.Constants.Type.back&#125;</span><br><span class="line">            flashMode=&#123;RNCamera.Constants.FlashMode.on&#125;</span><br><span class="line">            onBarCodeRead=&#123;<span class="keyword">this</span>.onBarCodeRead&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;View style=&#123;styles.rectangleContainer&#125;&gt;</span><br><span class="line">              &lt;View style=&#123;styles.rectangle&#125;/&gt;</span><br><span class="line">              &lt;Animated.View style=&#123;[</span><br><span class="line">                styles.border,</span><br><span class="line">                &#123;transform: [&#123;translateY: <span class="keyword">this</span>.state.moveAnim&#125;]&#125;]&#125;/&gt;</span><br><span class="line">              &lt;Text style=&#123;styles.rectangleText&#125;&gt;将二维码/条码放入框内，即可自动扫描&lt;/Text&gt;</span><br><span class="line">            &lt;/View&gt;</span><br><span class="line">          &lt;/RNCamera&gt;</span><br><span class="line">        &lt;/View&gt;</span><br><span class="line">      &lt;/Modal&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    flexDirection: <span class="string">'row'</span>,</span><br><span class="line">    width: <span class="string">'100%'</span>,</span><br><span class="line">    height: <span class="string">'100%'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  preview: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    justifyContent: <span class="string">'flex-end'</span>,</span><br><span class="line">    alignItems: <span class="string">'center'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangleContainer: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    alignItems: <span class="string">'center'</span>,</span><br><span class="line">    justifyContent: <span class="string">'center'</span>,</span><br><span class="line">    backgroundColor: <span class="string">'transparent'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangle: &#123;</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    borderWidth: <span class="number">1</span>,</span><br><span class="line">    borderColor: <span class="string">'#00FF00'</span>,</span><br><span class="line">    backgroundColor: <span class="string">'transparent'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangleText: &#123;</span><br><span class="line">    flex: <span class="number">0</span>,</span><br><span class="line">    color: <span class="string">'#fff'</span>,</span><br><span class="line">    marginTop: <span class="number">10</span></span><br><span class="line">  &#125;,</span><br><span class="line">  border: &#123;</span><br><span class="line">    flex: <span class="number">0</span>,</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">2</span>,</span><br><span class="line">    backgroundColor: <span class="string">'#00FF00'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">export <span class="keyword">default</span> Scanner</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ReactNative版本-lt-0-60-0&quot;&gt;&lt;a href=&quot;#ReactNative版本-lt-0-60-0&quot; class=&quot;headerlink&quot; title=&quot;ReactNative版本 &amp;lt; 0.60.0&quot;&gt;&lt;/a&gt;ReactNative版本 &amp;
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="ReactNative" scheme="http://fengtianhe.cn/tags/ReactNative/"/>
    
      <category term="node_modules" scheme="http://fengtianhe.cn/tags/node-modules/"/>
    
  </entry>
  
  <entry>
    <title>PHP-Composer国内镜像</title>
    <link href="http://fengtianhe.cn/PHP-Composer%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
    <id>http://fengtianhe.cn/PHP-Composer国内镜像/</id>
    <published>2019-08-14T03:31:26.000Z</published>
    <updated>2019-11-07T01:56:39.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="加速原理"><a href="#加速原理" class="headerlink" title="加速原理"></a>加速原理</h3><hr><p>Composer 安装时候会向国外的 Packagist 服务器发送请求，因为众所周知的原因，国内请求国外服务器，有时会出现不稳定甚至不可用的情况。</p><p>镜像加速就是把国外的数据缓存到国内的服务器上，Composer 客户端只需配置服务器为国内的服务器，即可从国内服务器上下载，稳定性会有很高的提升。</p><h3 id="要点一：全量与非全量镜像"><a href="#要点一：全量与非全量镜像" class="headerlink" title="要点一：全量与非全量镜像"></a>要点一：全量与非全量镜像</h3><hr><p>Composer 安装扩展包的时候，一般会发起两种请求：</p><p>JSON 请求 —— 扩展包元信息，包括 zip 包的下载链接；<br>Zip 包请求 —— 扩展包源码压缩包。<br>全量镜像指的是以上两种请求都使用国内服务器加速。而非全量服务器一般只缓存 JSON 数据。</p><h3 id="要点二、更新时间"><a href="#要点二、更新时间" class="headerlink" title="要点二、更新时间"></a>要点二、更新时间</h3><hr><p>当一个 PHP 扩展包从 GitHub 上发布新版本的时候，Packagist.org 上会接收到回调并记录新版本的信息。与 GitHub 的回调相比，国内镜像只能通过主动请求 Packagist.org 的方式来获取更新的扩展包版本。</p><p>更新时间指的是国内镜像服务器更新请求的频率，意味着当你在 GitHub 上发布了新版本，此新版本需要多长时间才能在国内的镜像服务器上出现。</p><p>故更新时间越短越好。</p><h3 id="阿里云-Composer-全量镜像（推荐）"><a href="#阿里云-Composer-全量镜像（推荐）" class="headerlink" title="阿里云 Composer 全量镜像（推荐）"></a>阿里云 Composer 全量镜像（推荐）</h3><hr><p>镜像类型：全量镜像<br>更新时间：1 分钟<br>镜像地址：<a href="https://mirrors.aliyun.com/composer/">https://mirrors.aliyun.com/composer/</a><br>官方地址：<a href="https://developer.aliyun.com/composer">https://developer.aliyun.com/composer</a><br>镜像说明：阿里云 CDN 加速，更新速度快，推荐使用</p><h3 id="安畅网络镜像"><a href="#安畅网络镜像" class="headerlink" title="安畅网络镜像"></a>安畅网络镜像</h3><hr><p>镜像类型：全量镜像<br>更新时间：1 分钟<br>镜像地址：<a href="https://php.cnpkg.org">https://php.cnpkg.org</a><br>官方地址：<a href="https://php.cnpkg.org/">https://php.cnpkg.org/</a><br>镜像说明：此 Composer 镜像由安畅网络赞助，目前支持元数据、下载包全量代理。</p><h3 id="交通大学镜像"><a href="#交通大学镜像" class="headerlink" title="交通大学镜像"></a>交通大学镜像</h3><hr><p>镜像类型：非全量镜像<br>镜像地址：<a href="https://packagist.mirrors.sjtug.sjtu.edu.c...\">https://packagist.mirrors.sjtug.sjtu.edu.c...\</a><br>官方地址：<a href="https://mirrors.sjtug.sjtu.edu.cn/packagis...\">https://mirrors.sjtug.sjtu.edu.cn/packagis...\</a><br>镜像说明：上海交通大学提供的 composer 镜像，稳定、快速、现代的镜像服务，推荐使用。</p><h3 id="Laravel-China-镜像（deprecated）"><a href="#Laravel-China-镜像（deprecated）" class="headerlink" title="Laravel China 镜像（deprecated）"></a>Laravel China 镜像（deprecated）</h3><hr><p>镜像类型：全量镜像<br>更新时间：10 分钟<br>镜像地址：<a href="https://packagist.laravel-china.org">https://packagist.laravel-china.org</a><br>官方地址：镜像详情<br>镜像说明：Laravel China 社区镜像，将于 2019 年 9 月 4 号停用。详见：博客：Laravel China 镜像完成历史使命，将于两个月后停用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;加速原理&quot;&gt;&lt;a href=&quot;#加速原理&quot; class=&quot;headerlink&quot; title=&quot;加速原理&quot;&gt;&lt;/a&gt;加速原理&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;Composer 安装时候会向国外的 Packagist 服务器发送请求，因为众所周知的原因，国内请求国外服务器，
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="Composer" scheme="http://fengtianhe.cn/tags/Composer/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-图片工具-生成微信分享图片</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7-%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB%E5%9B%BE%E7%89%87/"/>
    <id>http://fengtianhe.cn/PHP工具函数-图片工具-生成微信分享图片/</id>
    <published>2019-08-13T11:45:06.000Z</published>
    <updated>2019-11-07T01:56:39.288Z</updated>
    
    <content type="html"><![CDATA[<p>先上效果图<br><img src="/images/20190813-1.jpeg" alt="微信分享自定义图片"></p><p>用到的函数<br><code>getimagesize()</code><br><code>imagecreatetruecolor()</code><br><code>imagecreatefromjpeg()</code><br><code>imagecopyresized()</code><br><code>imagecreatefrompng()</code><br><code>imagealphablending()</code><br><code>imagesavealpha()</code><br><code>imagecopy()</code><br><code>imagecolorallocate()</code><br><code>imagettftext()</code></p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取远程图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $file</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $from</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file</span><span class="params">($file, $from)</span> </span>&#123;</span><br><span class="line">    file_put_contents(sys_get_temp_dir() . <span class="string">"/"</span> . $file, file_get_contents($from));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 合成图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_merge_image</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 将两个远程的图片存到本地临时文件夹</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;get_file(<span class="string">'egg'</span>, <span class="string">'https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'</span>);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;get_file(<span class="string">'date'</span>, <span class="string">'http://cm-images.cainiaoshicai.cn/wxminiapp/image/pricecontainer.png'</span>);</span><br><span class="line"></span><br><span class="line">    $bannerimg = sys_get_temp_dir() . <span class="string">'/egg'</span>;</span><br><span class="line">    $bottom = sys_get_temp_dir() . <span class="string">'/date'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取图片原式</span></span><br><span class="line">    <span class="keyword">list</span>($width, $height) = getimagesize($bannerimg);</span><br><span class="line">    <span class="comment">// 创建微信5:4的画布</span></span><br><span class="line">    $thumb = imagecreatetruecolor(<span class="number">800</span>, <span class="number">640</span>);</span><br><span class="line"></span><br><span class="line">    $image_1 = imagecreatefromjpeg($bannerimg);</span><br><span class="line">    <span class="comment">// 改变背景图大小 并画到画布上</span></span><br><span class="line">    imagecopyresized($thumb, $image_1, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">640</span>, $width, $height);</span><br><span class="line"></span><br><span class="line">    $image_2 = imagecreatefrompng($bottom);</span><br><span class="line"></span><br><span class="line">    imagealphablending($thumb, <span class="keyword">true</span>);</span><br><span class="line">    imagesavealpha($thumb, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 将底部图片 放到图片上</span></span><br><span class="line">    imagecopy($thumb, $image_2, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">160</span>, <span class="number">800</span>, <span class="number">800</span>);</span><br><span class="line"></span><br><span class="line">    $textColor = imagecolorallocate($thumb, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    $black = imagecolorallocate($thumb, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 往图片上写文字 *.otf *.ttf 都是字体文件</span></span><br><span class="line">    imagettftext($thumb, <span class="number">40</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">600</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'￥'</span>);</span><br><span class="line">    imagettftext($thumb, <span class="number">60</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">600</span>, $textColor, sys_get_temp_dir() . <span class="string">'b.ttf'</span>, <span class="string">'23.50'</span>);</span><br><span class="line"></span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">330</span>, <span class="number">596</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'￥'</span> . number_format(<span class="string">'23.50'</span> * <span class="number">1.2</span>, <span class="number">2</span>));</span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">335</span>, <span class="number">592</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'————'</span>);</span><br><span class="line"></span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">570</span>, <span class="number">600</span>, $black, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'销量20076'</span>);</span><br><span class="line">    <span class="comment">// 输出图片格式的响应</span></span><br><span class="line">    header(<span class="string">'Content-type: image/png;charset=utf-8'</span>);</span><br><span class="line">    <span class="comment">// 生成图片 第二个参数可以传本地路径</span></span><br><span class="line">    imagepng($thumb);</span><br><span class="line">    <span class="comment">// 销毁图片</span></span><br><span class="line">    imagedestroy($thumb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取图片拓展名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_image_extension</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;autoRender = <span class="keyword">false</span>;</span><br><span class="line">    print_r(getimagesize(<span class="string">'https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先上效果图&lt;br&gt;&lt;img src=&quot;/images/20190813-1.jpeg&quot; alt=&quot;微信分享自定义图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;用到的函数&lt;br&gt;&lt;code&gt;getimagesize()&lt;/code&gt;&lt;br&gt;&lt;code&gt;imagecreatetruecolor()&lt;
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="图片函数" scheme="http://fengtianhe.cn/tags/%E5%9B%BE%E7%89%87%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android-自动编译版本号</title>
    <link href="http://fengtianhe.cn/Android-%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    <id>http://fengtianhe.cn/Android-自动编译版本号/</id>
    <published>2019-07-25T07:28:48.000Z</published>
    <updated>2019-11-07T01:56:39.277Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>又开始总结搬砖经验了:<br>在使用ReactNative开发App的时候，在编译时总忘记修改版本号，懒惰的我又开始考虑使用脚本解决我的问题😈</p></blockquote><p>首先我们要看下版本号在哪？<br>ReactNative在编译的时候会读取<code>{项目目录}/android/app/build.gradle</code>下的defaultConfig<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.xxxx"</span></span><br><span class="line">        minSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.minSdkVersion</span></span><br><span class="line">        targetSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.targetSdkVersion</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">'1.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在每次编译的时候 都要修改<code>versionCode</code>和<code>versionName</code><br>懒惰得我找了度娘，大家一致认为使用git tag 和 git commit count来自动化版本号</p><hr><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h3 id="定义获取版本号方法"><a href="#定义获取版本号方法" class="headerlink" title="定义获取版本号方法"></a>定义获取版本号方法</h3><p>在<code>{项目目录}/android/app/build.gradle</code>中android上方定义方法(前提是当前项目有git tag)<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSelfDefinedVersion</span></span>(<span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cmd</span> </span>= <span class="symbol">'git</span> describe --tags'</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gitTag</span> </span>= cmd.execute().text.trim()</span><br><span class="line"></span><br><span class="line">    <span class="type">Process</span> process = <span class="string">"git rev-list --count HEAD"</span>.execute()</span><br><span class="line">    process.waitFor()</span><br><span class="line">    int commitCount = process.getText().toInteger()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"code"</span>.equals(<span class="class"><span class="keyword">type</span>)) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commitCount</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"name"</span>.equals(<span class="class"><span class="keyword">type</span>)) </span>&#123;</span><br><span class="line">        <span class="type">String</span> today = <span class="keyword">new</span> <span class="type">Date</span>().format(<span class="string">"yyMMdd"</span>)</span><br><span class="line">        process = <span class="string">"git describe --always"</span>.execute()</span><br><span class="line">        process.waitFor()</span><br><span class="line">        <span class="type">String</span> sha1 = process.getText().trim()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"$gitTag.$commitCount.$today.$sha1"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="使用函数获取版本号"><a href="#使用函数获取版本号" class="headerlink" title="使用函数获取版本号"></a>使用函数获取版本号</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.xxxx"</span></span><br><span class="line">        minSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.minSdkVersion</span></span><br><span class="line">        targetSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.targetSdkVersion</span></span><br><span class="line">        versionCode getSelfDefinedVersion(<span class="string">'code'</span>) <span class="comment">// 改这里</span></span><br><span class="line">        versionName getSelfDefinedVersion(<span class="string">'name'</span>) <span class="comment">// 改这里</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改输出文件名"><a href="#修改输出文件名" class="headerlink" title="修改输出文件名"></a>修改输出文件名</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">android.applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    variant.outputs.all &#123; output -&gt;</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">outputFile</span></span> = output.outputFile</span><br><span class="line">        if (outputFile != null &amp;&amp; outputFile.name.endsWith(<span class="string">'.apk'</span>)) &#123;</span><br><span class="line">            /<span class="regexp">/这里修改apk文件名</span></span><br><span class="line"><span class="regexp">            def fileName = "xxxxx-$&#123;defaultConfig.versionCode&#125;-$&#123;defaultConfig.versionName&#125;.apk"</span></span><br><span class="line"><span class="regexp">            outputFileName = fileName</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="编译结果"><a href="#编译结果" class="headerlink" title="编译结果"></a>编译结果</h3><p>在<code>android/app/build/generated/source/buildConfig/release/com/xxx/BuildConfig.java</code><br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> class BuildConfig &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">boolean</span> DEBUG = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> APPLICATION_ID = <span class="string">"com.cnmanager"</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> BUILD_TYPE = <span class="string">"release"</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> FLAVOR = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> VERSION_CODE = <span class="number">15</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> VERSION_NAME = <span class="string">"v1.0.15.190725.5487385"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>在有大版本更新的时候需要改git tag所以我又写了个shell脚本来确认修改git tag<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">currGitTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"当前tag <span class="variable">$currGitTag</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'是否有大版本变更？(y/n)(默认：n):'</span></span><br><span class="line"><span class="built_in">read</span> USER_CONFIRM_VERSION</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"y"</span> ]] || [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"Y"</span> ]] || [[ -z <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"请输入git tag版本"</span></span><br><span class="line">    <span class="built_in">read</span> USER_INPUT_TAG</span><br><span class="line"></span><br><span class="line">    git tag <span class="variable">$&#123;USER_INPUT_TAG&#125;</span></span><br><span class="line">    git push --tags</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">commitCount=`git rev-list --count HEAD`</span><br><span class="line">latestTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)</span><br><span class="line">currDate=`date +%y%m%d`</span><br><span class="line"><span class="comment">#gitShort=`git describe --always`</span></span><br><span class="line">versionName=<span class="string">"<span class="variable">$latestTag</span>.<span class="variable">$commitCount</span>.<span class="variable">$currDate</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"编译版本为：<span class="variable">$versionName</span>"</span></span><br><span class="line"><span class="built_in">read</span> CONFIRM</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> android &amp;&amp; ./gradlew assembleRelease</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;又开始总结搬砖经验了:&lt;br&gt;在使用ReactNative开发App的时候，在编译时总忘记修改版本号，懒惰的我又开始考虑使用脚本解决我的问题😈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们要看下版本号在哪？&lt;br&gt;ReactNative在编
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="项目发布" scheme="http://fengtianhe.cn/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="ReactNative" scheme="http://fengtianhe.cn/tags/ReactNative/"/>
    
      <category term="Android" scheme="http://fengtianhe.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>小程序-贝塞尔曲线加入购物车动效</title>
    <link href="http://fengtianhe.cn/%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%85%A5%E8%B4%AD%E7%89%A9%E8%BD%A6%E5%8A%A8%E6%95%88/"/>
    <id>http://fengtianhe.cn/小程序-贝塞尔曲线加入购物车动效/</id>
    <published>2019-07-13T07:53:24.000Z</published>
    <updated>2019-11-07T01:56:39.309Z</updated>
    
    <content type="html"><![CDATA[<p>首先上个效果图<br><img src="/images/wx-miniprogram-bezier.gif" alt="JAVA相关环境变量"></p><p>在工具目录下创建算法文件 /utils/bezier.js</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 贝塞尔曲线</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> sx 起始点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> sy 起始点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cx 控制点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cy 控制点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex 结束点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ey 结束点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> part 将起始点到控制点的线段分成的份数，数值越高，计算出的曲线越精确</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 贝塞尔曲线坐标</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  bezier: <span class="function"><span class="keyword">function</span> <span class="params">(points, part)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sx = points[<span class="number">0</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> sy = points[<span class="number">0</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">let</span> cx = points[<span class="number">1</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> cy = points[<span class="number">1</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">let</span> ex = points[<span class="number">2</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> ey = points[<span class="number">2</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">var</span> bezier_points = [];</span><br><span class="line">    <span class="comment">// 起始点到控制点的x和y每次的增量</span></span><br><span class="line">    <span class="keyword">var</span> changeX1 = (cx - sx) / part;</span><br><span class="line">    <span class="keyword">var</span> changeY1 = (cy - sy) / part;</span><br><span class="line">    <span class="comment">// 控制点到结束点的x和y每次的增量</span></span><br><span class="line">    <span class="keyword">var</span> changeX2 = (ex - cx) / part;</span><br><span class="line">    <span class="keyword">var</span> changeY2 = (ey - cy) / part;</span><br><span class="line">    <span class="comment">//循环计算</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= part; i++) &#123;</span><br><span class="line">      <span class="comment">// 计算两个动点的坐标</span></span><br><span class="line">      <span class="keyword">var</span> qx1 = sx + changeX1 * i;</span><br><span class="line">      <span class="keyword">var</span> qy1 = sy + changeY1 * i;</span><br><span class="line">      <span class="keyword">var</span> qx2 = cx + changeX2 * i;</span><br><span class="line">      <span class="keyword">var</span> qy2 = cy + changeY2 * i;</span><br><span class="line">      <span class="comment">// 计算得到此时的一个贝塞尔曲线上的点</span></span><br><span class="line">      <span class="keyword">var</span> lastX = qx1 + (qx2 - qx1) * i / part;</span><br><span class="line">      <span class="keyword">var</span> lastY = qy1 + (qy2 - qy1) * i / part;</span><br><span class="line">      <span class="comment">// 保存点坐标</span></span><br><span class="line">      <span class="keyword">var</span> point = &#123;&#125;;</span><br><span class="line">      point[<span class="string">'x'</span>] = lastX;</span><br><span class="line">      point[<span class="string">'y'</span>] = lastY;</span><br><span class="line">      bezier_points.push(point);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(bezier_points)</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="string">'bezier_points'</span>: bezier_points</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用的页面中 定义 小圆点<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 加入购物车动态小图标 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"good_box"</span> <span class="attr">hidden</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;hide_good_box&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">style</span>=<span class="string">"left: </span></span></span><span class="template-variable">&#123;&#123;bus_x&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px; top: </span></span></span><span class="template-variable">&#123;&#123;bus_y&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">.good_box &#123;</span></span><br><span class="line"><span class="xml">width: 30rpx;</span></span><br><span class="line"><span class="xml">height: 30rpx;</span></span><br><span class="line"><span class="xml">position: fixed;</span></span><br><span class="line"><span class="xml">border-radius: 50%;</span></span><br><span class="line"><span class="xml">overflow: hidden;</span></span><br><span class="line"><span class="xml">left: 50%;</span></span><br><span class="line"><span class="xml">top: 50%;</span></span><br><span class="line"><span class="xml">z-index: 99;</span></span><br><span class="line"><span class="xml">background: #b02c41;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure></p><p>在js文件中定义data<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hide_good_box:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">bus_x:</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line"><span class="attr">bus_y:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>点击事件  bindtap 执行 touchOnGoods 就可以<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">touchOnGoods: function(e) &#123;</span><br><span class="line">    <span class="comment">// 如果good_box正在运动</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.<span class="keyword">data</span>.hide_good_box) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.finger = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 运动的终点位置</span></span><br><span class="line">    <span class="keyword">this</span>.busPos = &#123;</span><br><span class="line">      x: <span class="number">337</span>,</span><br><span class="line">      y: <span class="number">527</span></span><br><span class="line">    &#125;;</span><br><span class="line">    let topPoint = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.finger[<span class="string">'x'</span>] = e.touches[<span class="string">"0"</span>].clientX;</span><br><span class="line">    <span class="keyword">this</span>.finger[<span class="string">'y'</span>] = e.touches[<span class="string">"0"</span>].clientY;</span><br><span class="line">    console.log(<span class="string">'finger =&gt; '</span>, <span class="keyword">this</span>.finger)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.finger[<span class="string">'y'</span>] &lt; <span class="keyword">this</span>.busPos[<span class="string">'y'</span>]) &#123;</span><br><span class="line">      topPoint[<span class="string">'y'</span>] = <span class="keyword">this</span>.finger[<span class="string">'y'</span>] - <span class="number">150</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      topPoint[<span class="string">'y'</span>] = <span class="keyword">this</span>.busPos[<span class="string">'y'</span>] - <span class="number">150</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    topPoint[<span class="string">'x'</span>] = Math.abs(<span class="keyword">this</span>.finger[<span class="string">'x'</span>] - <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) / <span class="number">2</span>;</span><br><span class="line">    console.log(<span class="string">'top point =&gt; '</span>, topPoint)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.finger[<span class="string">'x'</span>] &gt; <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) &#123;</span><br><span class="line">      topPoint[<span class="string">'x'</span>] = (<span class="keyword">this</span>.finger[<span class="string">'x'</span>] - <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) / <span class="number">2</span> + <span class="keyword">this</span>.busPos[<span class="string">'x'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      topPoint[<span class="string">'x'</span>] = (<span class="keyword">this</span>.busPos[<span class="string">'x'</span>] - <span class="keyword">this</span>.finger[<span class="string">'x'</span>]) / <span class="number">2</span> + <span class="keyword">this</span>.finger[<span class="string">'x'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(<span class="string">'bus point =&gt; '</span>, <span class="keyword">this</span>.busPos)</span><br><span class="line">    <span class="keyword">this</span>.linePos = bezier.bezier([<span class="keyword">this</span>.finger, topPoint, <span class="keyword">this</span>.busPos], <span class="number">20</span>);</span><br><span class="line">    <span class="keyword">this</span>.startAnimation();</span><br><span class="line">  &#125;,</span><br><span class="line">  startAnimation: function() &#123;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="number">0</span>,</span><br><span class="line">      that = <span class="keyword">this</span>,</span><br><span class="line">      bezier_points = that.linePos[<span class="string">'bezier_points'</span>],</span><br><span class="line">      len = bezier_points.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      hide_good_box: <span class="literal">false</span>,</span><br><span class="line">      bus_x: that.finger[<span class="string">'x'</span>],</span><br><span class="line">      bus_y: that.finger[<span class="string">'y'</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.timer = setInterval(function() &#123;</span><br><span class="line">      index++;</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        bus_x: bezier_points[index][<span class="string">'x'</span>],</span><br><span class="line">        bus_y: bezier_points[index][<span class="string">'y'</span>]</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (index &gt;= len) &#123;</span><br><span class="line">        clearInterval(that.timer);</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          hide_good_box: <span class="literal">true</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">20</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>最后记得在<code>onHide</code>中销毁定时器<code>this.timer</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先上个效果图&lt;br&gt;&lt;img src=&quot;/images/wx-miniprogram-bezier.gif&quot; alt=&quot;JAVA相关环境变量&quot;&gt;&lt;/p&gt;
&lt;p&gt;在工具目录下创建算法文件 /utils/bezier.js&lt;/p&gt;
&lt;figure class=&quot;highlig
      
    
    </summary>
    
      <category term="wxminiprogram" scheme="http://fengtianhe.cn/categories/wxminiprogram/"/>
    
    
      <category term="小程序" scheme="http://fengtianhe.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="特效" scheme="http://fengtianhe.cn/tags/%E7%89%B9%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-数组工具-多字段分组</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7-%E5%A4%9A%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84/"/>
    <id>http://fengtianhe.cn/PHP工具函数-数组工具-多字段分组/</id>
    <published>2019-03-29T10:08:35.000Z</published>
    <updated>2019-11-07T01:56:39.289Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">array_group_by</span><span class="params">($arr, $key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($arr)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">        $grouped = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $value) &#123;</span><br><span class="line">            $grouped[$value[$key]][] = $value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Recursively build a nested grouping if more parameters are supplied</span></span><br><span class="line">        <span class="comment">// Each grouped array value is grouped according to the next sequential key</span></span><br><span class="line">        <span class="keyword">if</span> (func_num_args() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            $args = func_get_args();</span><br><span class="line">            <span class="keyword">foreach</span> ($grouped <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                $parms = array_merge([$value], array_slice($args, <span class="number">2</span>, func_num_args()));</span><br><span class="line">                $grouped[$key] = call_user_func_array(<span class="string">'array_group_by'</span>, $parms);</span><br><span class="line">                <span class="comment">// 上面是当前方法作为全局方法使用，下面是吧方法写在类中的使用 详见 call_user_func_array()</span></span><br><span class="line">                <span class="comment">// $grouped[$key] = call_user_func_array([$this, 'array_group_by'], $parms);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $grouped;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="数组函数" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vue 项目部署</title>
    <link href="http://fengtianhe.cn/Vue-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>http://fengtianhe.cn/Vue-项目部署/</id>
    <published>2019-03-26T10:55:36.000Z</published>
    <updated>2019-11-07T01:56:39.305Z</updated>
    
    <content type="html"><![CDATA[<p>首先要配置服务器ssh免密登录</p><p>deploy.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#获取环境名</span></span><br><span class="line">env=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ x<span class="variable">$1</span> != x ];<span class="keyword">then</span></span><br><span class="line">    env=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    env=<span class="string">'prod'</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取当前分支名</span></span><br><span class="line">curr_branch=`git symbolic-ref --short -q HEAD`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前工作分支 =&gt; '</span><span class="variable">$&#123;curr_branch&#125;</span><span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'读取配置文件:'</span></span><br><span class="line">deploy_branch=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_branch<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_host=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_host<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_port=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_port<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_user=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_user<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_path=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_path<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_bak_path=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_bak_path<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_script=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_script<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'分支 =&gt; '</span><span class="variable">$&#123;deploy_branch&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'地址 =&gt; '</span><span class="variable">$&#123;deploy_host&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'端口 =&gt; '</span><span class="variable">$&#123;deploy_port&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'用户 =&gt; '</span><span class="variable">$&#123;deploy_user&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'路径 =&gt; '</span><span class="variable">$&#123;deploy_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'备份路径 =&gt; '</span><span class="variable">$&#123;deploy_bak_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'脚本 =&gt; '</span><span class="variable">$&#123;deploy_script&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'储存当前修改'</span></span><br><span class="line">git stash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'切换到需发布的分支 =&gt; '</span><span class="variable">$&#123;deploy_branch&#125;</span></span><br><span class="line">git checkout <span class="variable">$deploy_branch</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'编译项目'</span></span><br><span class="line">npm run <span class="variable">$&#123;deploy_script&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'备份老版本'</span></span><br><span class="line">curr_datetime=`date +%Y%m%d%H%M%S`</span><br><span class="line">ssh <span class="variable">$&#123;deploy_user&#125;</span>@<span class="variable">$&#123;deploy_host&#125;</span> -p <span class="variable">$&#123;deploy_port&#125;</span> <span class="string">"mv <span class="variable">$deploy_path</span> <span class="variable">$deploy_bak_path</span>/bak_<span class="variable">$curr_datetime</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'上传新版本'</span></span><br><span class="line">scp -P <span class="variable">$&#123;deploy_port&#125;</span> -r ./dist/ <span class="variable">$&#123;deploy_user&#125;</span>@<span class="variable">$&#123;deploy_host&#125;</span>:<span class="variable">$&#123;deploy_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'切回工作分支 =&gt; '</span><span class="variable">$&#123;curr_branch&#125;</span></span><br><span class="line">git checkout <span class="variable">$curr_branch</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'释放修改'</span></span><br><span class="line">git stash pop</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'部署成功'</span></span><br></pre></td></tr></table></figure></p><p>deploy.conf<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alpha_branch</span>=alpha</span><br><span class="line"><span class="attr">alpha_host</span>=xxxx</span><br><span class="line"><span class="attr">alpha_port</span>=xxxx</span><br><span class="line"><span class="attr">alpha_user</span>=xxxx</span><br><span class="line"><span class="attr">alpha_path</span>=xxxxx</span><br><span class="line"><span class="attr">alpha_bak_path</span>=xxxxx</span><br><span class="line"><span class="attr">alpha_script</span>=build_alpha</span><br><span class="line"></span><br><span class="line"><span class="attr">test_branch</span>=测试环境分支名</span><br><span class="line"><span class="attr">test_host</span>=测试环境机器ip</span><br><span class="line"><span class="attr">test_user</span>=测试环境机器用户</span><br><span class="line"><span class="attr">test_path</span>=测试环境项目路径</span><br><span class="line"></span><br><span class="line"><span class="attr">preview_branch</span>=preview</span><br><span class="line"><span class="attr">preview_host</span>=xxxx</span><br><span class="line"><span class="attr">preview_port</span>=xxxx</span><br><span class="line"><span class="attr">preview_user</span>=xxxx</span><br><span class="line"><span class="attr">preview_path</span>=xxxx</span><br><span class="line"><span class="attr">preview_bak_path</span>=xxxx</span><br><span class="line"><span class="attr">preview_script</span>=build_preview</span><br><span class="line"></span><br><span class="line"><span class="attr">prod_branch</span>=master</span><br><span class="line"><span class="attr">prod_host</span>=xxxx</span><br><span class="line"><span class="attr">prod_port</span>=xxxx</span><br><span class="line"><span class="attr">prod_user</span>=xxxx</span><br><span class="line"><span class="attr">prod_path</span>=xxxx</span><br><span class="line"><span class="attr">prod_bak_path</span>=xxxx</span><br><span class="line"><span class="attr">prod_script</span>=build</span><br></pre></td></tr></table></figure></p><p>使用 <code>sh deploy.sh [prefix]</code></p><p>xxx_script 是在webpack中用不同的build 配置文件打包的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先要配置服务器ssh免密登录&lt;/p&gt;
&lt;p&gt;deploy.sh&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="项目发布" scheme="http://fengtianhe.cn/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="vue" scheme="http://fengtianhe.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-时间工具-判断时间是否在同一周</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%97%B6%E9%97%B4%E5%B7%A5%E5%85%B7-%E5%88%A4%E6%96%AD%E6%97%B6%E9%97%B4%E6%98%AF%E5%90%A6%E5%9C%A8%E5%90%8C%E4%B8%80%E5%91%A8/"/>
    <id>http://fengtianhe.cn/PHP工具函数-时间工具-判断时间是否在同一周/</id>
    <published>2019-03-15T11:25:21.000Z</published>
    <updated>2019-11-07T01:56:39.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PHP判断两个时间是否在同一周"><a href="#PHP判断两个时间是否在同一周" class="headerlink" title="PHP判断两个时间是否在同一周"></a>PHP判断两个时间是否在同一周</h3><blockquote><p>业务场景：<br>  公司需要获取上周的汇总数据，由于放到redis中需要判断数据是否过期或者可用</p></blockquote><p>想法：判断第一个时间的时间戳 是否是第二个时间所在周的时间戳的 区间内</p><blockquote><p>利用strtotime(‘monday’)方法取到下周一 strtotime(‘monday -7 day’) 则取到本周一<br>  利用strtotime(‘sunday’)方法取到本周日</p></blockquote><p>存在问题：由于php代码的每周第一天是从周日开始的 所以如果今天是周一的话 <code>strtotime(&#39;monday -7 day&#39;)</code> 获取的就是上周一<br>Fix: 利用date(‘w’) 判断今天是周一的话，开始时间就加一周</p><p>上完整代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">time_in_same_week</span><span class="params">($preDate, $afterDate)</span> </span>&#123;</span><br><span class="line">    $flag = <span class="keyword">false</span>;<span class="comment">//默认不是同一周</span></span><br><span class="line">    $preTime = strtotime($preDate);</span><br><span class="line">    $afterTime = strtotime($afterDate);</span><br><span class="line"></span><br><span class="line">    $week = date(<span class="string">'w'</span>, $afterTime);</span><br><span class="line">    <span class="comment">//        echo $week . PHP_EOL;</span></span><br><span class="line">    $mintime = strtotime(<span class="string">'monday -7 day'</span>, $afterTime) + ($week == <span class="number">1</span> ? <span class="number">7</span> * <span class="number">3600</span> * <span class="number">24</span> : <span class="number">0</span>);<span class="comment">//一周开始时间; 解决今天的下周一是今天(如果今天是周一就会出现这个情况)</span></span><br><span class="line">    <span class="comment">//        echo '一周开始时间'.date('Y-m-d', $mintime).PHP_EOL;</span></span><br><span class="line">    $maxtime = strtotime(<span class="string">'sunday'</span>, $afterTime);<span class="comment">//一周结束时间</span></span><br><span class="line">    <span class="comment">//        echo '一周结束时间'.date('Y-m-d', $maxtime).PHP_EOL;</span></span><br><span class="line">    <span class="keyword">if</span> ($preTime &gt;= $mintime &amp;&amp; $preTime &lt;= $maxtime) &#123;<span class="comment">//同一周</span></span><br><span class="line">        $flag = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PHP判断两个时间是否在同一周&quot;&gt;&lt;a href=&quot;#PHP判断两个时间是否在同一周&quot; class=&quot;headerlink&quot; title=&quot;PHP判断两个时间是否在同一周&quot;&gt;&lt;/a&gt;PHP判断两个时间是否在同一周&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;业务场景：
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="时间函数" scheme="http://fengtianhe.cn/tags/%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>分析Haproxy日志</title>
    <link href="http://fengtianhe.cn/%E5%88%86%E6%9E%90Haproxy%E6%97%A5%E5%BF%97/"/>
    <id>http://fengtianhe.cn/分析Haproxy日志/</id>
    <published>2019-03-05T11:23:33.000Z</published>
    <updated>2019-11-07T01:56:39.306Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我使用的是Ubuntu机器</p></blockquote><h3 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h3><ul><li>【可选】安装JDK <code>sudo apt install openjdk-8-jdk-headless</code>（如果本机有请跳过）（如果没有 使用java命令 ,系统会提示用什么命令安装）</li></ul><p><img src="/images/201903051953.jpg" alt="ubuntu 无 java 提示"></p><ul><li>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Elasticsearch OSS 版本</li><li><p>【可选】配置JAVA环境变量（如果本机有请跳过,就用jdk1.8 不要用其他版本）</p><pre><code>命令一：which java命令二：ls -lrt /usr/bin/java命令三：ls -lrt /etc/alternatives/java最后将会得出这样的目录 /usr/lib/jvm/java-8-openjdk-amd64(每个人不一样，以实际情况为准)</code></pre></li><li><p>【可选】配置环境变量，执行命令 vi /etc/profile；然后进入编辑模式，在文件的最后添加下面的配置</p><pre><code>JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jreCLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHPATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></pre></li><li><p>执行命令 source /etc/profile 使用环境变量生效</p></li><li><p>在 usr 下创建 elasticsearch 目录 <code>sudo mkdir /usr/elasticsearch</code></p></li><li><p>tar -zxvf 下载下来的 elasticsearch-oss-x.x.x.tar.gz 放到 /usr/elasticsearch 下</p></li><li><p>【可选】创建ES用户和组（创建elsearch用户组及elsearch用户），因为使用root用户执行ES程序，将会出现错误；所以这里需要创建单独的用户去执行ES 文件；命令如下（如果存在普通用户就不用新建了）</p><pre><code>命令一：groupadd elsearch命令二：useradd elsearch -g elsearch命令三：chown -R elsearch:elsearch /usr/elasticsearch  该命令是更改该文件夹下所属的用户组的权限</code></pre></li><li><p>在<code>/usr/elasticsearch</code>中创建ES数据文件和日志文件</p><pre><code>命令一：mkdir -p data (修改所属权限)命令二：mkdir -p logs (修改所属权限)</code></pre></li><li><p>修改 <code>/usr/elasticsearch/config/elasticsearch.yml</code> 文件 （可以使用默认）</p></li><li><p>使用 <code>/usr/elasticsearch/bin/elasticsearch -d</code> 用后台启动</p></li><li><p>测试是否启动成功</p></li></ul><p><img src="/images/201903060941.jpg" alt="测试elasticsearch是否启动成功"></p><hr><h3 id="安装Logstash"><a href="#安装Logstash" class="headerlink" title="安装Logstash"></a>安装Logstash</h3><blockquote><p>Logstash是一个开源的服务器端数据处理管道，可以同时从多个数据源获取数据，并对其进行转换，然后将其发送到你最喜欢的“存储”。（当然，我们最喜欢的是Elasticsearch）</p></blockquote><p><img src="/images/201903060941.jpg" alt="logstash 工作原理"></p><ul><li><p>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Logstash 并解压</p></li><li><p>配置logstash</p></li><li><p>在logstash下运行 <code>./bin/logstash -f 自定义配置文件路径</code> 启动logstash</p></li><li><p>tail 日志 显示Non-zero metrics in the last 30s字样就启动成功了</p></li></ul><p>ps: 无知的我一直在tail 生成的日志，其实已经写进去了，只不过没有日志，可能修改日志级别就好了</p><hr><h3 id="安装Filebeat"><a href="#安装Filebeat" class="headerlink" title="安装Filebeat"></a>安装Filebeat</h3><ul><li>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Filebeat OSS 并解压</li></ul><p>（使用<code>getconf LONG_BIT</code>查看ubuntu位数）</p><ul><li><p>修改yml配置文件，将output转为logstash的。(如果配置文件看着乱，可以自己再写一个 filebeat -e -c 配置文件路径)</p></li><li><p>启动对haproxy 和 logstash的支持</p><pre><code>./filebeat modules enable haproxy./filebeat modules enable logstash</code></pre></li></ul><hr><h3 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h3><ul><li><p>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Kiana OSS 并解压</p></li><li><p>然后到kibana安装目录的config下，编辑kibana.yml配置文件，(可以使用默认)</p></li><li><p><code>./bin/kibana &amp;</code> 启动然后输入exit就后台启动了</p></li><li><p>浏览器 <code>127.0.0.1:5601</code> 打开kibana控制台</p></li></ul><hr><h3 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h3><p>GET 请求 elasticsearch服务器/_search 查看是否有数据</p><hr><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="如何切换kibana控制台的数据源"><a href="#如何切换kibana控制台的数据源" class="headerlink" title="如何切换kibana控制台的数据源"></a>如何切换kibana控制台的数据源</h4><blockquote><p>二货的我用自带的测试数据打开了，在 左侧 Management -&gt; Index Patterns -&gt; create index pattern<br>输入index-name 下一步创建，再切回面板就好了</p></blockquote><h4 id="汉化Kibana界面"><a href="#汉化Kibana界面" class="headerlink" title="汉化Kibana界面"></a>汉化Kibana界面</h4><blockquote><p>奶奶的，不光二，英语还不好。算了 汉化吧</p></blockquote><pre><code>wget -c  https://codeload.github.com/anbai-inc/Kibana_Hanization/zip/master -O Kibana_Hanization-master.zip下载并解压执行汉化命令 `python main.py ~/kibana-6.6.1-linux-x86_64/`重启kibana(汉化只能解决部分问题，重要的还是学英语吧)</code></pre><hr><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我使用的是Ubuntu机器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装Elasticsearch&quot;&gt;&lt;a href=&quot;#安装Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;安装Elasticsearc
      
    
    </summary>
    
      <category term="server" scheme="http://fengtianhe.cn/categories/server/"/>
    
    
      <category term="Haproxy" scheme="http://fengtianhe.cn/tags/Haproxy/"/>
    
      <category term="Logstash" scheme="http://fengtianhe.cn/tags/Logstash/"/>
    
      <category term="Filebeat" scheme="http://fengtianhe.cn/tags/Filebeat/"/>
    
  </entry>
  
  <entry>
    <title>PHP扩展-Redis</title>
    <link href="http://fengtianhe.cn/PHP%E6%89%A9%E5%B1%95-Redis/"/>
    <id>http://fengtianhe.cn/PHP扩展-Redis/</id>
    <published>2019-03-04T01:39:23.000Z</published>
    <updated>2019-11-07T01:56:39.302Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><p>在<a href="https://redis.io/">redis.io</a>下载lts版本源码</p><p>编译源码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf redis-xxxx.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> redis-xxxx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make PREFIX=/usr/<span class="built_in">local</span>/redis install</span></span><br></pre></td></tr></table></figure></p><p>配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /usr/<span class="built_in">local</span>/redis/etc/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp redis.conf /usr/<span class="built_in">local</span>/redis/etc/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/bin/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span></span><br></pre></td></tr></table></figure></p><p>修改一下配置<br>redis以守护进程的方式运行<br>no表示不以守护进程的方式运行(会占用一个终端)<br><code>daemonize yes</code></p><hr><h3 id="安装php扩展"><a href="#安装php扩展" class="headerlink" title="安装php扩展"></a>安装php扩展</h3><p>我的服务器是php5.6 我选用的phpredis 是 2.2.8 版本<br>首先下载扩展<a href="http://pecl.php.net/package/redis">PECL</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf redis-2.2.8.tgz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> redis-2.2.8</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> phpize <span class="comment">#用phpize生成configure配置文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --with-php-config=/usr/bin/php-config <span class="comment">#配置</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make  <span class="comment">#编译</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make install  <span class="comment">#安装</span></span></span><br></pre></td></tr></table></figure><h2 id="然后会提示一个目录，通过php-i-grep-php-ini-查找PHP配置文件，然后将redis-so添加到扩展列表中"><a href="#然后会提示一个目录，通过php-i-grep-php-ini-查找PHP配置文件，然后将redis-so添加到扩展列表中" class="headerlink" title="然后会提示一个目录，通过php -i | grep php.ini 查找PHP配置文件，然后将redis.so添加到扩展列表中"></a>然后会提示一个目录，通过<code>php -i | grep php.ini</code> 查找PHP配置文件，然后将redis.so添加到扩展列表中</h2><h3 id="应用php扩展"><a href="#应用php扩展" class="headerlink" title="应用php扩展"></a>应用php扩展</h3><h4 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h4><p>平滑重启apache(不会对当前启动的程序产生影响)<br><code>apachectl -k graceful</code></p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><p>Nginx 是通过php-fpm加载的扩展</p><p>php 5.3.3 以后的php-fpm 不再支持 php-fpm 以前具有的 /Data/apps/php7/sbin/php-fpm(start|stop|reload)等命令，所以不要再看这种老掉牙的命令了，需要使用信号控制</p><p>master进程可以理解以下信号</p><p>INT, TERM 立刻终止<br>QUIT 平滑终止<br>USR1 重新打开日志文件<br>USR2 平滑重载所有worker进程并重新载入配置和二进制模块</p><p>一个简单直接的重启方法：</p><p>先查看php-fpm的master进程号<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ ps aux|grep php-fpm</span><br><span class="line">root      1565  0.0  0.6 499908  6596 ?        Ss   Feb27   0:10 php-fpm: master process (/etc/php-fpm.conf)</span><br><span class="line">apache    1566  0.0  3.1 503588 32176 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1567  0.0  3.0 503552 31080 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1568  0.0  3.1 502880 31868 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1569  0.0  3.1 504372 32196 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1570  0.0  2.8 503556 28844 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1963  0.0  3.0 503040 31192 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    5390  0.0  2.7 503540 28556 ?        S    Feb28   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    5657  0.0  2.8 503568 29400 ?        S    Mar01   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    7421  0.0  2.6 503308 26968 ?        S    Mar01   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">root     23263  0.0  0.0 103264   844 pts/1    S+   11:28   0:00 grep php-fpm</span><br><span class="line"></span><br><span class="line">$ kill -USR2 1565 #重启php-fpm</span><br><span class="line">$ ps aux|grep php-fpm #重新看下进程号</span><br><span class="line">root     23275  0.0  0.6 499908  6560 ?        Ss   11:30   0:00 php-fpm: master process (/etc/php-fpm.conf)</span><br><span class="line">apache   23276  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23277  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23278  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23279  0.0  0.5 499908  5672 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23280  0.0  0.5 499908  5672 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">root     23282  0.0  0.0 103264   844 pts/1    S+   11:30   0:00 grep php-fpm</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装Redis&quot;&gt;&lt;a href=&quot;#安装Redis&quot; class=&quot;headerlink&quot; title=&quot;安装Redis&quot;&gt;&lt;/a&gt;安装Redis&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://redis.io/&quot;&gt;redis.io&lt;/a&gt;下载lts版本源码
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="PHP扩展" scheme="http://fengtianhe.cn/tags/PHP%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Git命令</title>
    <link href="http://fengtianhe.cn/Git%E5%91%BD%E4%BB%A4/"/>
    <id>http://fengtianhe.cn/Git命令/</id>
    <published>2019-02-26T15:49:37.000Z</published>
    <updated>2019-11-07T01:56:39.278Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Git大小写"><a href="#Git大小写" class="headerlink" title="Git大小写"></a>Git大小写</h3><p>默认git忽略大小写<br><code>git config core.ignorecase false</code> //当前仓库关闭忽略<br><code>git config core.ignorecase false --global</code> //全局仓库关闭忽略</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Git大小写&quot;&gt;&lt;a href=&quot;#Git大小写&quot; class=&quot;headerlink&quot; title=&quot;Git大小写&quot;&gt;&lt;/a&gt;Git大小写&lt;/h3&gt;&lt;p&gt;默认git忽略大小写&lt;br&gt;&lt;code&gt;git config core.ignorecase false&lt;/
      
    
    </summary>
    
      <category term="others" scheme="http://fengtianhe.cn/categories/others/"/>
    
    
      <category term="Git" scheme="http://fengtianhe.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Android 发布部署限制</title>
    <link href="http://fengtianhe.cn/Android-%E5%8F%91%E5%B8%83%E9%83%A8%E7%BD%B2%E9%99%90%E5%88%B6/"/>
    <id>http://fengtianhe.cn/Android-发布部署限制/</id>
    <published>2019-02-25T09:11:30.000Z</published>
    <updated>2019-11-07T01:56:39.276Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于进入创业公司，没有一套完整的开发流程，每个人都有不同的开发方式，导致线上出线bug<br>  Bug原因：由于android项目，发布部署的分支没有被限制导致用户使用了开发分支的版本。<br>  解决：在编译脚本中添加限制</p></blockquote><p>脚本中使用git 的 tag 和appVersionName 限制了编译版本，以供参考，具体业务具体修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"编译正式版本！编译过程中会出现很多信息，请确认："</span></span><br><span class="line"></span><br><span class="line">curr_branch=`git symbolic-ref --short -q HEAD`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"当前分支：<span class="variable">$curr_branch</span>"</span></span><br><span class="line">build_branch=<span class="string">'master'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$curr_branch</span>"</span> != <span class="string">"<span class="variable">$build_branch</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"当前不是master分支，不编译"</span></span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#xargs 实现 trim 功能</span></span><br><span class="line">latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)</span><br><span class="line"><span class="comment">#读取AndroidManifest文件第6行versionName配置</span></span><br><span class="line">app_version=`sed -n <span class="string">"6p"</span> ./CainiaoCRM/src/main/AndroidManifest.xml | sed -e <span class="string">'s/android:versionName=\"\(.*\)\"&gt;/\1/'</span> | xargs`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"最新tag：<span class="variable">$latest_tag</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"当前app编译版本：<span class="variable">$app_version</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$latest_tag</span>"</span> != <span class="string">"<span class="variable">$app_version</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment">#确认版本号</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"当前App编译版本和Tag版本不同，是否继续编译(y/n)："</span></span><br><span class="line">    <span class="built_in">read</span> USER_CONFIRM_VERSION</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"n"</span> ]] || [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"N"</span> ]] || [[ -z <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"结束编译"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#创建Tag</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"当前App编译版本和Tag版本不同，是否创建新版本Tag(y/n)："</span></span><br><span class="line">    <span class="built_in">read</span> USER_CONFIRM_CREATE_TAG</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$USER_CONFIRM_CREATE_TAG</span>"</span> = <span class="string">"n"</span> ]] || [[ <span class="string">"<span class="variable">$USER_CONFIRM_CREATE_TAG</span>"</span> = <span class="string">"N"</span> ]] || [[ -z <span class="string">"<span class="variable">$USER_CONFIRM_CREATE_TAG</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"结束编译"</span></span><br><span class="line">        <span class="built_in">exit</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        git push origin <span class="variable">$&#123;app_version&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"开始编译...."</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;由于进入创业公司，没有一套完整的开发流程，每个人都有不同的开发方式，导致线上出线bug&lt;br&gt;  Bug原因：由于android项目，发布部署的分支没有被限制导致用户使用了开发分支的版本。&lt;br&gt;  解决：在编译脚本中添加限制&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="项目发布" scheme="http://fengtianhe.cn/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="ReactNative" scheme="http://fengtianhe.cn/tags/ReactNative/"/>
    
      <category term="Android" scheme="http://fengtianhe.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>开发工具-Terminal配色方案</title>
    <link href="http://fengtianhe.cn/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7-terminal%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88/"/>
    <id>http://fengtianhe.cn/开发工具-terminal配色方案/</id>
    <published>2018-06-12T09:49:05.000Z</published>
    <updated>2019-11-07T01:56:39.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MAC下Iterm2配色方案"><a href="#MAC下Iterm2配色方案" class="headerlink" title="MAC下Iterm2配色方案"></a>MAC下Iterm2配色方案</h2><h3 id="1-编辑bash-profile文件"><a href="#1-编辑bash-profile文件" class="headerlink" title="1.编辑bash_profile文件"></a>1.编辑bash_profile文件</h3><p><code>vim ~/.bash_profile</code></p><h3 id="2-带有-git-分支形式的"><a href="#2-带有-git-分支形式的" class="headerlink" title="2.带有 git 分支形式的"></a>2.带有 git 分支形式的</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">find_git_branch</span></span> () &#123;</span><br><span class="line">    <span class="built_in">local</span> dir=. head</span><br><span class="line">    until [ <span class="string">"<span class="variable">$dir</span>"</span> -ef / ]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$dir</span>/.git/HEAD"</span> ]; <span class="keyword">then</span></span><br><span class="line">        head=$(&lt; <span class="string">"<span class="variable">$dir</span>/.git/HEAD"</span>)</span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$head</span> = ref:\ refs/heads/* ]]; <span class="keyword">then</span></span><br><span class="line">            git_branch=<span class="string">" (<span class="variable">$&#123;head#*/*/&#125;</span>)"</span></span><br><span class="line">        <span class="keyword">elif</span> [[ <span class="variable">$head</span> != <span class="string">''</span> ]]; <span class="keyword">then</span></span><br><span class="line">            git_branch=<span class="string">" → (detached)"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            git_branch=<span class="string">" → (unknow)"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    dir=<span class="string">"../<span class="variable">$dir</span>"</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    git_branch=<span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line">PROMPT_COMMAND=<span class="string">"find_git_branch; <span class="variable">$PROMPT_COMMAND</span>"</span></span><br><span class="line">green=$<span class="string">'\[\033[01;32m\]'</span></span><br><span class="line">grey=$<span class="string">'\[\033[00m\]'</span></span><br><span class="line">blue=$<span class="string">'\[\033[01;36m\]'</span></span><br><span class="line">red=$<span class="string">'\[\e[1;31m\]'</span></span><br><span class="line">PS1=<span class="string">"<span class="variable">$green</span>\u@\h<span class="variable">$grey</span>:<span class="variable">$blue</span>\W<span class="variable">$red</span>\$git_branch<span class="variable">$grey</span>\$    "</span></span><br></pre></td></tr></table></figure><h3 id="3-没有-git-分支形式的"><a href="#3-没有-git-分支形式的" class="headerlink" title="3.没有 git 分支形式的"></a>3.没有 git 分支形式的</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#enables colorin the terminal bash shell export</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLICOLOR</span>=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#setsup thecolor scheme for list export</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LSCOLORS</span>=gxfxcxdxbxegedabagacad</span><br><span class="line"></span><br><span class="line"><span class="comment">#sets up theprompt color (currently a green similar to linux terminal)</span></span><br><span class="line"><span class="comment">#export PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\$    '</span></span><br><span class="line"><span class="comment">#enables colorfor iTerm</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TERM</span>=xterm-256color</span><br></pre></td></tr></table></figure><h3 id="4-生效配置"><a href="#4-生效配置" class="headerlink" title="4.生效配置"></a>4.生效配置</h3><p><code>source ~/.bash_profile</code></p><h3 id="5-效果图"><a href="#5-效果图" class="headerlink" title="5.效果图"></a>5.效果图</h3><p><img src="/images/20180612-1.jpg" alt="带有git分支"><br><img src="/images/20180612-2.jpg" alt="没有git分支"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;MAC下Iterm2配色方案&quot;&gt;&lt;a href=&quot;#MAC下Iterm2配色方案&quot; class=&quot;headerlink&quot; title=&quot;MAC下Iterm2配色方案&quot;&gt;&lt;/a&gt;MAC下Iterm2配色方案&lt;/h2&gt;&lt;h3 id=&quot;1-编辑bash-profile文
      
    
    </summary>
    
      <category term="others" scheme="http://fengtianhe.cn/categories/others/"/>
    
    
      <category term="开发工具" scheme="http://fengtianhe.cn/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Encrypt，免费好用的 HTTPS 证书</title>
    <link href="http://fengtianhe.cn/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE--%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84HTTPS/"/>
    <id>http://fengtianhe.cn/服务器配置--免费好用的HTTPS/</id>
    <published>2018-05-22T04:21:38.000Z</published>
    <updated>2019-11-07T01:56:39.319Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>  本文转自<a href="https://imququ.com/post/letsencrypt-certificate.html">Jerry Qu 的 Let’s Encrypt，免费好用的 HTTPS 证书</a>。如果需要查看评论和解决方案，请点击</p></blockquote><h2 id="1-创建账号"><a href="#1-创建账号" class="headerlink" title="1.创建账号"></a>1.创建账号</h2><p>首先创建一个目录，例如 <code>ssl</code>，用来存放各种临时文件和最后的证书文件。进入这个目录，创建一个 RSA 私钥用于 Let’s Encrypt 识别你的身份：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa <span class="number">4096</span> &gt; account.<span class="type">key</span></span><br></pre></td></tr></table></figure><h2 id="2-创建-CSR-文件"><a href="#2-创建-CSR-文件" class="headerlink" title="2.创建 CSR 文件"></a>2.创建 CSR 文件</h2><p>接着就可以生成 CSR（Certificate Signing Request，证书签名请求）文件了。在这之前，还需要创建域名私钥（一定不要使用上面的账户私钥），根据证书不同类型，域名私钥也可以选择 RSA 和 ECC 两种不同类型。以下两种方式请根据实际情况二选一。<br>1）创建 RSA 私钥（兼容性好）：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa <span class="number">4096</span> &gt; domain.<span class="type">key</span></span><br></pre></td></tr></table></figure><p>2）创建 ECC 私钥（部分老旧操作系统、浏览器不支持。优点是证书体积小）：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#secp256r1</span></span><br><span class="line">openssl ecparam -genkey -name secp256r1 <span class="string">| openssl ec -out domain.key</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#secp384r1</span></span><br><span class="line">openssl ecparam -genkey -name secp384r1 <span class="string">| openssl ec -out domain.key</span></span><br></pre></td></tr></table></figure><p>有关 ECC 证书的更多介绍，请<a href="https://imququ.com/post/optimize-tls-handshake.html#toc-2-1">点击这里</a>。</p><p>有了私钥文件，就可以生成 CSR 文件了。在 CSR 中推荐至少把域名带 www 和不带 www 的两种情况都加进去，其它子域可以根据需要添加（目前一张证书最多可以包含 100 个域名）：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -<span class="built_in">new</span> -sha256 -<span class="built_in">key</span> <span class="built_in">domain</span>.<span class="built_in">key</span> -subj <span class="string">"/"</span> -reqexts SAN -config &lt;(cat /etc/ssl/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com"</span>)) &gt; <span class="built_in">domain</span>.csr</span><br></pre></td></tr></table></figure><p>执行这一步时，如果提示找不到 /etc/ssl/openssl.cnf 文件，请看看 /usr/local/openssl/ssl/openssl.cnf 是否存在。如果还是不行，也可以使用交互方式创建 CSR（需要注意 Common Name 必须为你的域名）：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -<span class="built_in">new</span> -sha256 -<span class="built_in">key</span> <span class="built_in">domain</span>.<span class="built_in">key</span> -out <span class="built_in">domain</span>.csr</span><br></pre></td></tr></table></figure><h2 id="3-配置验证服务"><a href="#3-配置验证服务" class="headerlink" title="3.配置验证服务"></a>3.配置验证服务</h2><p>我们知道，CA 在签发 DV（Domain Validation）证书时，需要验证域名所有权。传统 CA 的验证方式一般是往 <a href="mailto:`admin@yoursite.com">`admin@yoursite.com</a>` 发验证邮件，而 Let’s Encrypt 是在你的服务器上生成一个随机验证文件，再通过创建 CSR 时指定的域名访问，如果可以访问则表明你对这个域名有控制权。</p><p>首先创建用于存放验证文件的目录，例如：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/www/challenges/</span><br></pre></td></tr></table></figure><p>然后配置一个 HTTP 服务，以 Nginx 为例：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">server_name</span> www.yoursite.com yoursite.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /.well-known/acme-challenge/ &#123;</span><br><span class="line">        <span class="attribute">alias</span> /home/xxx/www/challenges/;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> =<span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> https://yoursite.com/<span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上配置优先查找 ~/www/challenges/ 目录下的文件，如果找不到就重定向到 HTTPS 地址。这个验证服务以后更新证书还要用到，建议一直保留。</p><h2 id="4-获取网站证书"><a href="#4-获取网站证书" class="headerlink" title="4.获取网站证书"></a>4.获取网站证书</h2><p>先把 acme-tiny 脚本保存到之前的 ssl 目录：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/diafygi/</span>acme-tiny<span class="regexp">/master/</span>acme_tiny.py</span><br></pre></td></tr></table></figure></p><p>指定账户私钥、CSR 以及验证目录，执行脚本：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python acme_tiny.py <span class="params">--account-key</span> <span class="string">./account.key</span> <span class="params">--csr</span> <span class="string">./domain.csr</span> <span class="params">--acme-dir</span> ~<span class="string">/www/challenges/</span> &gt; <span class="string">./signed.crt</span></span><br></pre></td></tr></table></figure></p><p>如果一切正常，当前目录下就会生成一个 signed.crt，这就是申请好的证书文件。</p><p>如果你把域名 DNS 解析放在国内，这一步很可能会遇到类似这样的错误：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ValueError: Wrote <span class="keyword">file</span> to <span class="regexp">/home/</span>xxx<span class="regexp">/www/</span>challenges<span class="regexp">/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg, but couldn't download http:/</span><span class="regexp">/www.yoursite.com/</span>.well-known<span class="regexp">/acme-challenge/</span>oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg</span><br></pre></td></tr></table></figure></p><p>这是因为你的域名很可能在国外无法解析，可以找台国外 VPS 验证下。我的域名最近从 DNSPod 换到了阿里云解析，最后又换到了 CloudXNS，就是因为最近前两家在国外都很不稳定。如果你也遇到了类似情况，可以暂时使用国外的 DNS 解析服务商，例如 dns.he.net。如果还是搞不定，也可以试试「Neilpang/le」这个工具的 DNS Mode。</p><p>搞定网站证书后，还要下载 Let’s Encrypt 的中间证书。我在之前的文章中讲过，配置 HTTPS 证书时既不要漏掉中间证书，也不要包含根证书。在 Nginx 配置中，需要把中间证书和网站证书合在一起：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https:<span class="comment">//letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</span></span><br><span class="line">cat signed<span class="selector-class">.crt</span> intermediate<span class="selector-class">.pem</span> &gt; chained.pem</span><br></pre></td></tr></table></figure></p><p>为了后续能顺利启用 OCSP Stapling，我们再把根证书和中间证书合在一起：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https:<span class="comment">//letsencrypt.org/certs/isrgrootx1.pem &gt; root.pem</span></span><br><span class="line">cat intermediate<span class="selector-class">.pem</span> root<span class="selector-class">.pem</span> &gt; full_chained.pem</span><br></pre></td></tr></table></figure></p><p>最终，修改 Nginx 中有关证书的配置并 reload 服务即可：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssl_certificate     ~<span class="regexp">/www/ssl</span><span class="regexp">/chained.pem;</span></span><br><span class="line"><span class="regexp">ssl_certificate_key ~/www</span><span class="regexp">/ssl/domain</span>.key;</span><br></pre></td></tr></table></figure></p><p>Nginx 中与 HTTPS 有关的配置项很多，这里不一一列举了。如有需要，请<a href="https://imququ.com/post/my-nginx-conf.html">参考本站配置</a></p><h2 id="5-配置自动更新"><a href="#5-配置自动更新" class="headerlink" title="5.配置自动更新"></a>5.配置自动更新</h2><p>Let’s Encrypt 签发的证书只有 90 天有效期，推荐使用脚本定期更新。例如我就创建了一个 renew_cert.sh 并通过 chmod a+x renew_cert.sh 赋予执行权限。文件内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /home/xxx/www/ssl/</span><br><span class="line">python acme_tiny.py --account-key account.key --csr domain.csr --acme-dir /home/xxx/www/challenges/ &gt; signed.crt || <span class="built_in">exit</span></span><br><span class="line">wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</span><br><span class="line">cat signed.crt intermediate.pem &gt; chained.pem</span><br><span class="line">service nginx reload</span><br></pre></td></tr></table></figure><p>crontab 中使用绝对路径比较保险，crontab -e 加入以下内容：<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">0</span> <span class="number">1</span> * * /home/xxx/<span class="keyword">shell</span>/renew_cert.sh &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>这样以后证书每个月都会自动更新，一劳永逸。实际上，Let’s Encrypt 官方将证书有效期定为 90 天一方面是为了更安全，更重要的是鼓励用户采用自动化部署方案。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;  本文转自&lt;a href=&quot;https://imququ.com/post/letsencrypt-certificate.html&quot;&gt;Jerry Qu 的 Let’s Encrypt，免费好用的 HTTPS 证书&lt;/a&gt;。如果需要查看评论和解决
      
    
    </summary>
    
      <category term="server" scheme="http://fengtianhe.cn/categories/server/"/>
    
    
      <category term="服务器" scheme="http://fengtianhe.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库优化【4】分析有问题的sql语句</title>
    <link href="http://fengtianhe.cn/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E3%80%904%E3%80%91%E5%88%86%E6%9E%90%E6%9C%89%E9%97%AE%E9%A2%98%E7%9A%84sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://fengtianhe.cn/MySQL数据库优化【4】分析有问题的sql语句/</id>
    <published>2018-03-21T07:22:38.000Z</published>
    <updated>2019-11-07T01:56:39.285Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过慢查日志分析有问题的语句"><a href="#通过慢查日志分析有问题的语句" class="headerlink" title="通过慢查日志分析有问题的语句"></a>通过慢查日志分析有问题的语句</h2><h3 id="1、查询次数多切每次查询占用时间长的SQL"><a href="#1、查询次数多切每次查询占用时间长的SQL" class="headerlink" title="1、查询次数多切每次查询占用时间长的SQL"></a>1、查询次数多切每次查询占用时间长的SQL</h3><p>通常为pt-qeury-digest分析的前几个查询，查看pt-query-digest 第三部分</p><p>Exec time 项为占用时间</p><h3 id="2、IO大的SQL"><a href="#2、IO大的SQL" class="headerlink" title="2、IO大的SQL"></a>2、IO大的SQL</h3><p>注意pt-query-digest分析中Rows examine项，扫描的行数多，也就表示占的IO大</p><h3 id="3、未命中索引的SQL"><a href="#3、未命中索引的SQL" class="headerlink" title="3、未命中索引的SQL"></a>3、未命中索引的SQL</h3><p>注意pt-query-digest中Rows examine 和 Rows Send 的对比</p><p>如果Rows examine &gt;&gt; Rows Send，就说明想要的数据少， 但是扫描到了大量的数据</p><hr><h2 id="使用explain查询SQL的执行计划"><a href="#使用explain查询SQL的执行计划" class="headerlink" title="使用explain查询SQL的执行计划"></a>使用explain查询SQL的执行计划</h2><p>eg:<code>mysql&gt; explain select customer_id,first_name,last_name from customer</code></p><pre><code>mysql&gt; explain select customer_id,first_name,last_name from customer;+----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+| id | select_type | table    | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra |+----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+|  1 | SIMPLE      | customer | NULL       | ALL  | NULL          | NULL | NULL    | NULL |  599 |   100.00 | NULL  |+----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+1 row in set, 1 warning (0.01 sec)</code></pre><ul><li>table：显示查询的哪张表</li><li>partitions: 表示给定表所使用的区域使用expain partitions才会有值</li><li>type：这是重要的列，显示连接使用了哪种类型，从最好到最差的连接类型为<code>const</code>、<code>eq_reg</code>、<code>ref</code>、<code>range</code>、<code>index</code>、<code>ALL</code><ul><li>const为常数查找,基本上用到主键查询或者唯一索引查询；</li><li>eq_reg为范围查找</li><li>ref为基于索引的查找</li><li>range为基于索引的范围查找</li><li>index为对于索引的扫描</li><li>ALL为表扫描</li></ul></li><li>possible_keys: 显示可能应用在这张表中的索引。如果为空，没有可能的索引。</li><li>key：实际使用的索引，如果为空，则没有使用索引</li><li>key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好。</li><li>ref：显示索引的哪一列被使用了，如果可能的话，是一个常数。</li><li>rows：MYSQL认为必须检查的用来放回请求数据的行数。</li><li>filtered：显示了通过条件过滤出的行数的百分比估计值</li><li>extra：额外的属性值。需要注意的返回值<ul><li>Using filesort：[使用文件排序]看到这个的时候，查询就需要优化了，MYSQL需要进行额外的步骤来发现如何对放回的行排序。他根据连接类型及存储排序键值和匹配条件的全部行的指针来排序全部行</li><li>Using temporary：[查询用到临时表]看到这个的时候，查询就需要优化了，这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上</li></ul></li></ul><hr><p>上一章:<a href="/MySQL数据库优化【3】慢查日志分析工具/">MySQL数据库优化【3】慢查日志分析工具</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;通过慢查日志分析有问题的语句&quot;&gt;&lt;a href=&quot;#通过慢查日志分析有问题的语句&quot; class=&quot;headerlink&quot; title=&quot;通过慢查日志分析有问题的语句&quot;&gt;&lt;/a&gt;通过慢查日志分析有问题的语句&lt;/h2&gt;&lt;h3 id=&quot;1、查询次数多切每次查询占用时间长
      
    
    </summary>
    
      <category term="db" scheme="http://fengtianhe.cn/categories/db/"/>
    
    
      <category term="MySQL" scheme="http://fengtianhe.cn/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库优化【3】慢查日志分析工具</title>
    <link href="http://fengtianhe.cn/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E3%80%903%E3%80%91%E6%85%A2%E6%9F%A5%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/"/>
    <id>http://fengtianhe.cn/MySQL数据库优化【3】慢查日志分析工具/</id>
    <published>2018-03-19T07:19:46.000Z</published>
    <updated>2019-11-07T01:56:39.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysqldumpslow"><a href="#mysqldumpslow" class="headerlink" title="mysqldumpslow"></a>mysqldumpslow</h2><p>用于查看并格式化慢查日志</p><p>如果系统中没有mysqldumpslow这个命令， 那么到mysql的安装目录下的bin目录下找这个命令，window可以设置环境变量， linux和mac用户可以设置软连接</p><pre><code>Usage: mysqldumpslow [OPTS...] [LOGS...]Pares and summarize the MySQL slow query log. Options are--verbose verbose--debug debug--help write this text to standard output-v           verbose-d           debug-s ORDER     what to sort by (al, at, ar, c, l, r, t), &apos;at&apos; is default                al: average lock time                ar: average rows sent                at: average query time                c: count                l: lock time                r: rows sent                t: query time-r           reverse the sort order (largest last instead of first)-t NUM       just show the top n queries-a           don&apos;t abstract all numbers to N and strings to &apos;S&apos;-n NUM       abstract numbers with at least n digits within names-g PATTERN   grep: only consider stmts that include this string-h HOSTNAME  hostname of db server for *-slow.log filename (can be wildcard),default is &apos;*&apos;, i.e. match all-i NAME      name of server instance (if using mysql.server startup script)-l           don&apos;t subtract lock time from total time</code></pre><p>例：<code>mysqldumpslow -t 3 mysql-slow.log | more</code></p><p>输出：</p><pre><code>Reading mysql slow query log from mysql-slow.logCount: 1  Time=0.00s (0s)  Lock=0.00s (0s)  Rows=1.0 (1), root[root]@localhost  show variables like &apos;S&apos;Count: 1  Time=0.00s (0s)  Lock=0.00s (0s)  Rows=200.0 (200), root[root]@localhost  select  * from actorCount: 1  Time=0.00s (0s)  Lock=0.00s (0s)  Rows=9.0 (9), root[root]@localhost  show databases</code></pre><p>由于演示，我们把慢查超时时间改成了0，所以前三条列出了以上这些，另外慢查日志中记录的是这个服务器所有的慢查语句， 而不是一个数据库的慢查日志</p><p>以上数据显示了数据执行的次数、执行时间、加锁时间、影响行数、执行角色和执行地址</p><h2 id="pt-query-digest"><a href="#pt-query-digest" class="headerlink" title="pt-query-digest"></a>pt-query-digest</h2><p>由于这是第三方工具，安装请自行查询</p><p>建议安装， 毕竟pt-query-digest比mysqldumpslow更强大</p><hr><p>上一章:<a href="/MySQL数据库优化【2】SQL及索引优化/">MySQL数据库优化【2】SQL及索引优化</a><br>下一章:<a href="/MySQL数据库优化【4】分析有问题的sql语句/">MySQL数据库优化【4】分析有问题的sql语句</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mysqldumpslow&quot;&gt;&lt;a href=&quot;#mysqldumpslow&quot; class=&quot;headerlink&quot; title=&quot;mysqldumpslow&quot;&gt;&lt;/a&gt;mysqldumpslow&lt;/h2&gt;&lt;p&gt;用于查看并格式化慢查日志&lt;/p&gt;
&lt;p&gt;如果系统中没
      
    
    </summary>
    
      <category term="db" scheme="http://fengtianhe.cn/categories/db/"/>
    
    
      <category term="MySQL" scheme="http://fengtianhe.cn/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库优化【2】SQL及索引优化</title>
    <link href="http://fengtianhe.cn/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E3%80%902%E3%80%91SQL%E5%8F%8A%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96/"/>
    <id>http://fengtianhe.cn/MySQL数据库优化【2】SQL及索引优化/</id>
    <published>2018-03-15T08:40:18.000Z</published>
    <updated>2019-11-07T01:56:39.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h2><p>首先我们需要大量的数据进行分析，这里我们可以使用MySQL官方提供的sakila数据库：</p><p><a href="http://dev.mysql.com/doc/index-other.html">http://dev.mysql.com/doc/index-other.html</a></p><p>sakila数据库的安装使用过程：</p><p><a href="http://dev.mysql.com/doc/sakila/en/sakila-installation.html">http://dev.mysql.com/doc/sakila/en/sakila-installation.html</a></p><h2 id="安装数据"><a href="#安装数据" class="headerlink" title="安装数据"></a>安装数据</h2><p>下载好数据，依次倒入Schama和Data，显示如下则为成功</p><pre><code>USE sakila;Database changedSHOW TABLES;+----------------------------+| Tables_in_sakila           |+----------------------------+| actor                      || address                    || category                   || city                       || country                    || customer                   || customer_list              || film                       || film_actor                 || film_category              || film_list                  || film_text                  || inventory                  || language                   || nicer_but_slower_film_list || payment                    || rental                     || sales_by_film_category     || sales_by_store             || staff                      || staff_list                 || store                      |+----------------------------+22 rows in set (0.00 sec)SELECT COUNT(*) FROM film;+----------+| COUNT(*) |+----------+| 1000     |+----------+1 row in set (0.02 sec)SELECT COUNT(*) FROM film_text;+----------+| COUNT(*) |+----------+| 1000     |+----------+1 row in set (0.00 sec)</code></pre><h2 id="MySQL慢查询日志的开启方式和储存格式"><a href="#MySQL慢查询日志的开启方式和储存格式" class="headerlink" title="MySQL慢查询日志的开启方式和储存格式"></a>MySQL慢查询日志的开启方式和储存格式</h2><p>通过慢查询日志我们可以看到那些sql是应该优化的，那我们如何发现有问题的SQL呢？<br>答案就是 使用MySQL慢查日志对效率问题的SQL进行监控</p><ol><li><p>设置慢查询日志路径(设置权限)</p><p> <code>set global slow_query_log_file= &#39;/Users/fengtianhe/Log/mysql/mysql-slow.log&#39;;</code></p></li><li><p>设置没有索引的记录到慢查询日志</p><p> <code>set global log_queries_not_using_indexes=on;</code></p></li><li><p>查看mysql是否开启慢查询日志</p><p> <code>show variables like &#39;slow_query_log&#39;;</code></p></li><li><p>开启慢查询日志</p><p> <code>set global slow_query_log=on;</code></p></li><li><p>查看超过多长时间的sql进行记录到慢查询日志</p><p> <code>show variables like &#39;long_query_time&#39;;</code></p></li><li><p>设置sql执行长时间(如果没发现生效， 就退出数据库重新链接)</p><p> <code>set global long_query_time=0;</code></p></li></ol><h2 id="试一试"><a href="#试一试" class="headerlink" title="试一试"></a>试一试</h2><p>设置慢查日志之后的你们一定迫不及待了吧，让我们试试吧</p><pre><code>use sakila;select * from actor;</code></pre><p>这时我们可以看看日志，就记录了我们这次查询的记录由于演示我们把超时设置为0，所以日志中会记录所有的信息,也记录了我们执行的语句</p><p><img src="/images/20180315-1.jpg" alt=""></p><p>那么让我们看看慢查询日志都记录了些什么</p><ol><li>执行SQL的主机信息</li></ol><p><code># User@Host: root[root] @ localhost []</code></p><ol><li>SQL的执行信息</li></ol><p><code># Query_time: 0.000461  Lock_time: 0.000064 Rows_sent: 200  Rows_examined: 200 SET timestamp=1521105352;</code></p><ol><li>SQL的执行时间</li></ol><p><code>SET timestamp=1521105352;</code></p><ol><li>SQL的内容</li></ol><p><code>select  * from actor;</code></p><hr><p>上一章:<a href="/MySQL数据库优化【1】简介/">MySQL数据库优化【1】简介</a><br>下一章:<a href="/MySQL数据库优化【3】慢查日志分析工具/">MySQL数据库优化【3】慢查日志分析工具</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备数据&quot;&gt;&lt;a href=&quot;#准备数据&quot; class=&quot;headerlink&quot; title=&quot;准备数据&quot;&gt;&lt;/a&gt;准备数据&lt;/h2&gt;&lt;p&gt;首先我们需要大量的数据进行分析，这里我们可以使用MySQL官方提供的sakila数据库：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h
      
    
    </summary>
    
      <category term="db" scheme="http://fengtianhe.cn/categories/db/"/>
    
    
      <category term="MySQL" scheme="http://fengtianhe.cn/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库优化【1】简介</title>
    <link href="http://fengtianhe.cn/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96%E3%80%901%E3%80%91%E7%AE%80%E4%BB%8B/"/>
    <id>http://fengtianhe.cn/MySQL数据库优化【1】简介/</id>
    <published>2018-03-14T09:30:56.000Z</published>
    <updated>2019-11-07T01:56:39.280Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>数据库优化是一个初中级开发人员必须要了解而且会的东西，并且这个技能在每个后端开发的面试中都会问到的。那么为什么数据库优化这么重要，我们就用这一系列文章看一看</p></blockquote><h2 id="数据库优化的目的"><a href="#数据库优化的目的" class="headerlink" title="数据库优化的目的"></a>数据库优化的目的</h2><h3 id="避免出现页面访问错误"><a href="#避免出现页面访问错误" class="headerlink" title="避免出现页面访问错误"></a>避免出现页面访问错误</h3><ul><li>由于数据库链接timeout产生的5xx错误</li><li>由于慢查询造成的页面无法加载</li><li>由于阻塞造成的数据无法提交<h3 id="增加数据库的稳定性"><a href="#增加数据库的稳定性" class="headerlink" title="增加数据库的稳定性"></a>增加数据库的稳定性</h3></li><li>很多数据库问题都是由于低效的查询引起的<h3 id="优化用户体验"><a href="#优化用户体验" class="headerlink" title="优化用户体验"></a>优化用户体验</h3></li><li>流畅页面的访问速度</li><li>良好的网站功能体验</li></ul><h2 id="数据库优化方式"><a href="#数据库优化方式" class="headerlink" title="数据库优化方式"></a>数据库优化方式</h2><h3 id="按成本排序-由低到高"><a href="#按成本排序-由低到高" class="headerlink" title="按成本排序(由低到高)"></a>按成本排序(由低到高)</h3><p>SQL及索引 -&gt; 数据库表结构 -&gt; 系统配置 -&gt; 硬件</p><h3 id="按效果排序-由低到高"><a href="#按效果排序-由低到高" class="headerlink" title="按效果排序(由低到高)"></a>按效果排序(由低到高)</h3><p>硬件 -&gt; 系统配置 -&gt; 数据库表结构 -&gt; SQL及索引</p><ol><li>sql及索引优化。索引应该适量，不应太多，否则会影响查询和写的速度；</li><li>数据库表结构，根据数据设计查询最优的表结构。</li><li>系统配置优化，对打开文件数和安全的限制。</li><li>硬件，选择最适合数据库的cpu，更快的IO,更大的内存，cpu不是越多越好， IO并不能减少锁的机制，所以说硬件的优化成本越高，效果最差。</li></ol><hr><p>下一章 <a href="/MySQL数据库优化【2】SQL及索引优化/">MySQL数据库优化【2】SQL及索引优化</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;数据库优化是一个初中级开发人员必须要了解而且会的东西，并且这个技能在每个后端开发的面试中都会问到的。那么为什么数据库优化这么重要，我们就用这一系列文章看一看&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;数据库优化的目的&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="db" scheme="http://fengtianhe.cn/categories/db/"/>
    
    
      <category term="MySQL" scheme="http://fengtianhe.cn/tags/MySQL/"/>
    
      <category term="数据库优化" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>各大主要应用市场上架地址</title>
    <link href="http://fengtianhe.cn/%E5%90%84%E5%A4%A7%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%B8%82%E5%9C%BA%E4%B8%8A%E6%9E%B6%E5%9C%B0%E5%9D%80/"/>
    <id>http://fengtianhe.cn/各大主要应用市场上架地址/</id>
    <published>2018-03-12T09:03:20.000Z</published>
    <updated>2019-11-07T01:56:39.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、腾讯应用宝"><a href="#1、腾讯应用宝" class="headerlink" title="1、腾讯应用宝﻿"></a>1、腾讯应用宝﻿</h2><p>腾讯开放平台地址：<a href="http://open.qq.com">http://open.qq.com</a>﻿</p><p>注册开发者帐号地址：<a href="https://ssl.zc.qq.com/v3/index-chs.html">https://ssl.zc.qq.com/v3/index-chs.html</a></p><p>重要提示：开发者QQ号码一旦注册不能变更，建议使用公司老板或法人的QQ号码而不是员工私人号码注册，以免遇到员工离职等情况造成不必要的麻烦。2017年9月18日以后应用上架要提交软件著作权证明（原件扫描）或者该应用PC官网ICP备案截图+官网地址+2个以上的应用宝以外市场上线后台状态截图代替，软著后续补上。如果APP在应用宝搜索不到（不能外显），则必须提供软著+版号。</p><p>注册开发者帐号方法：</p><p><a href="http://wiki.open.qq.com/wiki/%E6%B3%A8%E5%86%8C%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7">http://wiki.open.qq.com/wiki/%E6%B3%A8%E5%86%8C%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7</a></p><p>应用提交方法：<a href="http://wiki.open.qq.com/wiki/%E5%88%9B%E5%BB%BA%E6%96%B0%E5%BA%94%E7%94%A8">http://wiki.open.qq.com/wiki/%E5%88%9B%E5%BB%BA%E6%96%B0%E5%BA%94%E7%94%A8</a></p><h2 id="2、360手机助手"><a href="#2、360手机助手" class="headerlink" title="2、360手机助手﻿"></a>2、360手机助手﻿</h2><p>360开放平台地址：<a href="http://dev.360.cn">http://dev.360.cn</a></p><p>注册开发者帐号地址：<a href="http://dev.360.cn">http://dev.360.cn</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，要提供身份证号，银行卡号及预留的手机验证码验证。应用上架必须要提交360的保证函。</p><p>注册开发者帐号方法：<a href="http://dev.360.cn/wiki">http://dev.360.cn/wiki</a></p><p>应用提交方法：<a href="http://dev.360.cn/wiki/index/id/21">http://dev.360.cn/wiki/index/id/21</a></p><h2 id="3、百度手机助手-安卓市场-91助手"><a href="#3、百度手机助手-安卓市场-91助手" class="headerlink" title="3、百度手机助手/安卓市场/91助手﻿"></a>3、百度手机助手/安卓市场/91助手﻿</h2><p>百度开发者平台地址：<a href="http://app.baidu.com">http://app.baidu.com</a>﻿</p><p>重要提示：百度手机助手、91助手 和安卓市场是联盟平台，在百度开发平台中上传APP通过审核后，在其它两个平台也可以搜索到自己的APP。这里只需要注册一个百度开发者帐号即可。﻿开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交百度的保证函。</p><p>注册开发者帐号方法：<a href="http://app.baidu.com/docs?id=2&amp;frompos=401003">http://app.baidu.com/docs?id=2&amp;frompos=401003</a></p><p>应用提交方法：<a href="http://app.baidu.com/docs?id=5&amp;frompos=401007">http://app.baidu.com/docs?id=5&amp;frompos=401007</a></p><h2 id="4、小米应用商店"><a href="#4、小米应用商店" class="headerlink" title="4、小米应用商店﻿"></a>4、小米应用商店﻿</h2><p>小米开放平台网站：<a href="https://dev.mi.com">https://dev.mi.com</a></p><p>注册开发者帐号地址：<a href="https://account.xiaomi.com/pass/register">https://account.xiaomi.com/pass/register</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，要提供身份证号，银行卡号及预留的手机验证码验证。该认证将调用“小米支付”服务，在该小米账号下绑定银行卡进行实名认证。</p><p>注册开发者帐号方法：<a href="https://dev.mi.com/docs/appsmarket/distribution/account_register/">https://dev.mi.com/docs/appsmarket/distribution/account_register/</a></p><p>应用提交方法：<a href="https://dev.mi.com/docs/appsmarket/distribution/app_submit/">https://dev.mi.com/docs/appsmarket/distribution/app_submit/</a>﻿</p><h2 id="5、华为应用市场"><a href="#5、华为应用市场" class="headerlink" title="5、华为应用市场﻿"></a>5、华为应用市场﻿</h2><p>华为开发者联盟地址：<a href="http://developer.huawei.com/consumer/cn">http://developer.huawei.com/consumer/cn</a></p><p>注册开发者帐号地址：<a href="https://hwid1.vmall.com/CAS/portal/userRegister/regbyphone.html">https://hwid1.vmall.com/CAS/portal/userRegister/regbyphone.html</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交华为的免责函。</p><p>注册开发者帐号方法：</p><p><a href="http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95">http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95</a></p><p>应用提交方法：</p><p><a href="http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E5%88%9B%E5%BB%BA%E5%B9%B6%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8">http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E5%88%9B%E5%BB%BA%E5%B9%B6%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8</a></p><p>﻿</p><h2 id="6、阿里应用商店-豌豆荚-PP助手"><a href="#6、阿里应用商店-豌豆荚-PP助手" class="headerlink" title="6、阿里应用商店/豌豆荚/PP助手﻿"></a>6、阿里应用商店/豌豆荚/PP助手﻿</h2><p>阿里开发者平台地址：<a href="http://open.uc.cn">http://open.uc.cn</a></p><p>重要提示：阿里应用分发 整合了 豌豆荚、阿里九游、PP助手、UC应用商店、神马搜索，并联合YunOS应用商店等应用分发平台，实现全流量矩阵布局。这里只需要注册一个阿里开发者帐号即可。﻿</p><p>注册开发者帐号地址：<a href="https://reg.taobao.com/member/reg/fill_mobile.htm">https://reg.taobao.com/member/reg/fill_mobile.htm</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，用支付宝扫描二维码进行实名认证。应用上架必须要提交阿里的保证函。</p><p>注册开发者帐号方法：<a href="http://aliapp.open.uc.cn/wiki/?p=35">http://aliapp.open.uc.cn/wiki/?p=35</a></p><p>应用提交方法：<a href="http://aliapp.open.uc.cn/wiki/?p=40">http://aliapp.open.uc.cn/wiki/?p=40</a></p><h2 id="7、三星应用商店"><a href="#7、三星应用商店" class="headerlink" title="7、三星应用商店﻿"></a>7、三星应用商店﻿</h2><p>三星开发者平台地址：<a href="http://support-cn.samsung.com/App/DeveloperChina/Home/Index">http://support-cn.samsung.com/App/DeveloperChina/Home/Index</a></p><p>重要提示：全球开发者:只有当您与 Samsung Electronics Co. 有合作关系，才应选择全球开发者类型。完成卖家注册后：请联系您的三星对手方以批准三星应用商店的合作伙伴关系请求。如果无法确认您的合作关系，您必须重新注册会员资格。</p><p>主题开发者: 主题开发者类型的卖家只能使用三星SDK注册应用程序，但可以将应用程序销售到所有国家/地区。</p><p>中国开发者: 中国开发者类型的卖家可注册不使用三星SDK的应用程序，但只可将应用程序出售到中国。﻿</p><p>注册开发者帐号地址：<a href="https://seller.samsungapps.com/join/joinNow.as">https://seller.samsungapps.com/join/joinNow.as</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。法人和联系人要双手持身份证拍照，要露出双臂，照片不能用软件处理。</p><p>注册开发者帐号方法：</p><p><a href="http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=38">http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=38</a></p><p>应用提交方法：（需要下载三星应用商店上传手册）</p><p><a href="http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=11">http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=11</a></p><h2 id="8、OPPO应用商店"><a href="#8、OPPO应用商店" class="headerlink" title="8、OPPO应用商店﻿"></a>8、OPPO应用商店﻿</h2><p>OPPO开发者联盟地址：<a href="http://open.oppomobile.com">http://open.oppomobile.com</a></p><p>注册开发者帐号地址：<a href="http://open.oppomobile.com/newuser/signup">http://open.oppomobile.com/newuser/signup</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。必须要软件著作权，没有软著则可以试着在后台补交（华为、小米、应用宝）三家中的两家后台上架截图作为辅助依据上架，碰碰运气。应用上架必须要提交OPPO的免责函。</p><p>注册开发者帐号方法：<a href="http://open.oppomobile.com/doc/index?idx=0&amp;item=39">http://open.oppomobile.com/doc/index?idx=0&amp;item=39</a></p><p>应用提交方法：<a href="http://jingyan.baidu.com/article/d169e186656065436611d897.html">http://jingyan.baidu.com/article/d169e186656065436611d897.html</a></p><h2 id="9、ViVO应用商店"><a href="#9、ViVO应用商店" class="headerlink" title="9、ViVO应用商店﻿"></a>9、ViVO应用商店﻿</h2><p>ViVO开发者联盟地址：<a href="https://dev.vivo.com.cn">https://dev.vivo.com.cn</a></p><p>注册开发者帐号地址：</p><p><a href="https://id.vivo.com.cn/?callback=http://dev.vivo.com.cn&amp;registerSource=1&amp;_201707171541#!/access/register">https://id.vivo.com.cn/?callback=http://dev.vivo.com.cn&amp;registerSource=1&amp;_201707171541#!/access/register</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。要记得填写联系人信息。</p><p>注册开发者帐号方法：<a href="https://dev.vivo.com.cn/doc/document/info">https://dev.vivo.com.cn/doc/document/info</a></p><p>应用提交方法：<a href="https://dev.vivo.com.cn/doc/document/info?id=52">https://dev.vivo.com.cn/doc/document/info?id=52</a></p><h2 id="10、联想应用商店"><a href="#10、联想应用商店" class="headerlink" title="10、联想应用商店﻿"></a>10、联想应用商店﻿</h2><p>联想开发者联盟地址：<a href="http://open.lenovo.com">http://open.lenovo.com</a></p><p>注册开发者帐号地址：<a href="https://passport.lenovo.com/wauthen2/wauth/jsp/register.jsp">https://passport.lenovo.com/wauthen2/wauth/jsp/register.jsp</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交联想的免责函。</p><p>注册开发者帐号方法：<a href="http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/zhzc/">http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/zhzc/</a></p><p>应用提交方法： <a href="http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/?p=796">http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/?p=796</a></p><h2 id="11、魅族应用商店"><a href="#11、魅族应用商店" class="headerlink" title="11、魅族应用商店﻿"></a>11、魅族应用商店﻿</h2><p>魅族开发者联盟地址：<a href="http://open.flyme.cn">http://open.flyme.cn</a></p><p>注册开发者帐号地址：<a href="https://i.flyme.cn/register">https://i.flyme.cn/register</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交魅族的免责函。</p><p>注册开发者帐号方法： <a href="http://open-wiki.flyme.cn/index.php?title=%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97">http://open-wiki.flyme.cn/index.php?title=%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97</a></p><p>应用提交方法： <a href="http://open-wiki.flyme.cn/index.php?title=%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83">http://open-wiki.flyme.cn/index.php?title=%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83</a></p><h2 id="12、金立应用商店"><a href="#12、金立应用商店" class="headerlink" title="12、金立应用商店﻿"></a>12、金立应用商店﻿</h2><p>金立开发者联盟地址：<a href="https://open.appgionee.com">https://open.appgionee.com</a></p><p>注册开发者帐号地址：<a href="https://open.appgionee.com/cp/register">https://open.appgionee.com/cp/register</a></p><p>重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交金立的承诺书。</p><p>注册开发者帐号方法： <a href="https://open.appgionee.com/cp/help">https://open.appgionee.com/cp/help</a></p><p>应用提交方法： <a href="https://open.appgionee.com/cp/help">https://open.appgionee.com/cp/help</a></p><p>感觉华为、小米对资料的要求是最严格的；然后是360、魅族、阿里，如果你的应用程序是批量制作的，使用单一或几个模板生成的，或用简单文字、图片打包而成的话，它可以检测出来，并且不会让你通过审核。</p><p>联想和vivo应该算是最好通过的。﻿﻿百度、小米、华为、魅族的开发者帐号审核相对慢一点，阿里、360跟腾讯还算比较快的，上架应用审核时间也相对比较快。只要资料全，其实很容易通过的。﻿应用审核，OPPO要求要软著，审核上架不易。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、腾讯应用宝&quot;&gt;&lt;a href=&quot;#1、腾讯应用宝&quot; class=&quot;headerlink&quot; title=&quot;1、腾讯应用宝﻿&quot;&gt;&lt;/a&gt;1、腾讯应用宝﻿&lt;/h2&gt;&lt;p&gt;腾讯开放平台地址：&lt;a href=&quot;http://open.qq.com&quot;&gt;http://ope
      
    
    </summary>
    
      <category term="others" scheme="http://fengtianhe.cn/categories/others/"/>
    
    
  </entry>
  
</feed>
