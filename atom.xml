<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冯天鹤&#39;s Blog</title>
  
  <subtitle>「不忘初心方得始终」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fengtianhe.cn/"/>
  <updated>2020-12-07T09:11:05.478Z</updated>
  <id>http://fengtianhe.cn/</id>
  
  <author>
    <name>冯天鹤</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Element-Table-Mixin</title>
    <link href="http://fengtianhe.cn/element-table-mixin/"/>
    <id>http://fengtianhe.cn/element-table-mixin/</id>
    <published>2020-11-28T13:27:10.000Z</published>
    <updated>2020-12-07T09:11:05.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="element-table-mixin"><a href="#element-table-mixin" class="headerlink" title="element-table-mixin"></a>element-table-mixin</h1><p>基于ElementUI 封装的TableMixin</p><p>特性</p><ul><li style="list-style: none"><input type="checkbox" checked></input> 请求列表数据  </li><li style="list-style: none"><input type="checkbox" checked></input> 带筛选项的列表数据请求  </li><li style="list-style: none"><input type="checkbox" checked></input> 支持自定义返回体取值</li><li style="list-style: none"><input type="checkbox" checked></input> 支持自定义基于Axios封装的请求函数</li></ul><hr><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>yarn add element-table-mixin</code> or <code>npm i element-table-mixin</code></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>main.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> &#123;TableMixinConfig&#125; <span class="keyword">from</span> <span class="string">'element-table-mixin'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他配置详见文档</span></span><br><span class="line">TableMixinConfig.REQUEST = axios</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;table-container</span><br><span class="line">        :url=&apos;tableDataUrl&apos;</span><br><span class="line">        style=&quot;flex:1&quot;</span><br><span class="line">        :columns=&quot;tableColumns&quot;</span><br><span class="line">        :table-ops=&quot;tableOps&quot;</span><br><span class="line">        ref=&quot;table&quot;&gt;</span><br><span class="line">          &lt;template slot=&quot;column&quot;&gt;</span><br><span class="line">            &lt;el-table-cloumn&gt;&lt;/el-table-cloumn&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">    &lt;/table-container&gt;</span><br><span class="line">    ...</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;TableContainer&#125; from &apos;element-table-mixin&apos;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  ...,</span><br><span class="line">  components: &#123;TableContainer&#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      tableDataUrl: AppApplicationService.URL_APP_APPLICATION_LIST,</span><br><span class="line">      filterForm: &#123;</span><br><span class="line">        appId: &apos;&apos;,</span><br><span class="line">        appName: &apos;&apos;,</span><br><span class="line">        creator: &apos;&apos;</span><br><span class="line">      &#125;,</span><br><span class="line">      tableColumns: [</span><br><span class="line">        &#123;label: &apos;应用ID&apos;, prop: &apos;appId&apos;&#125;,</span><br><span class="line">        &#123;label: &apos;应用名称&apos;, prop: &apos;appName&apos;&#125;,</span><br><span class="line">        &#123;label: &apos;创建人&apos;, prop: &apos;creatorName&apos;&#125;,</span><br><span class="line">        &#123;label: &apos;创建时间&apos;, prop: &apos;createdAt&apos;, formatter: this.tableFormatDate&#125;</span><br><span class="line">      ],</span><br><span class="line">      tableOps: [</span><br><span class="line">        &#123;command: &apos;EDIT&apos;, name: &apos;编辑&apos;, handle: this.showEditDialog&#125;,</span><br><span class="line">        &#123;command: &apos;DISABLE&apos;, name: &apos;停用&apos;, handle: this.showEditDialog&#125;</span><br><span class="line">      ],</span><br><span class="line">      ...</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    showEditDialog(scope)&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;,</span><br><span class="line">    tableFormatDate(row, column, cellValue)&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://blog.fengtianhe.cn/images/element-table-mixin.png" alt="alt 效果图"></p><hr><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><h5 id="props"><a href="#props" class="headerlink" title="props"></a>props</h5><table><thead><tr><th>prop</th><th>require</th><th>描述</th><th>type</th><th>说明</th></tr></thead><tbody><tr><td>columns</td><td>true</td><td>表格的列</td><td>Array<ColumnObject></td><td>ColumnObject = {label: ‘’, prop: ‘’, formatter: (row, column, cellValue) =&gt; {}}</td></tr><tr><td>tableOps</td><td>false</td><td>行数据操作项</td><td>Array<OpObject></td><td>OpObject = {command: ‘’, name: ‘’, handle: (scope) =&gt; {}}</td></tr><tr><td>url</td><td>true</td><td>列表请求地址</td><td>String</td></tr></tbody></table><h5 id="event"><a href="#event" class="headerlink" title="event"></a>event</h5><table><thead><tr><th>事件名</th><th>说明</th></tr></thead><tbody><tr><td></td></tr></tbody></table><h5 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h5><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>resetFilter()</td><td>重置筛选项并查询</td></tr><tr><td>setFilter()</td><td>设置筛选项并查询</td></tr></tbody></table><h5 id="slot"><a href="#slot" class="headerlink" title="slot"></a>slot</h5><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>column</td><td>自定义列</td></tr></tbody></table><h5 id="TableMixinConfig"><a href="#TableMixinConfig" class="headerlink" title="TableMixinConfig"></a>TableMixinConfig</h5><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>REQUEST</td><td>默认请求使用 axios,</td></tr><tr><td>PAGE_SIZE_DEFAULT</td><td>每页默认数量 15,</td></tr><tr><td>PAGE_NUM_DEFAULT</td><td>默认页码 1,</td></tr><tr><td>REQUEST_PAGENUM_FIELD</td><td>请求的页码字段 pageNum,</td></tr><tr><td>REQUEST_PAGESIZE_FIELD</td><td>请求的每页条数字段 pageSize,</td></tr><tr><td>RESPONSE_LIST_FIELD</td><td>列表数据对应字段 data.lists,</td></tr><tr><td>RESPONSE_PAGESIZE_FIELD</td><td>每页数量对应的字段 data.size,</td></tr><tr><td>RESPONSE_PAGENUM_FIELD</td><td>页码对应的字段 data.pageNum,</td></tr><tr><td>RESPONSE_TOTAL_FIELD</td><td>总条数对应的字段 data.total,</td></tr></tbody></table><h5 id="默认配置的返回值"><a href="#默认配置的返回值" class="headerlink" title="默认配置的返回值"></a>默认配置的返回值</h5><p>如果后端的返回值和默认不一致，请调整配置项<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...,</span><br><span class="line">  "data": &#123;</span><br><span class="line">    "lists": [],</span><br><span class="line">    "size": 15,</span><br><span class="line">    "pageNum": 1,</span><br><span class="line">    "total": 50</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>交流联系方式：<br>QQ：545704061</p><p>微信：fth545704061</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;element-table-mixin&quot;&gt;&lt;a href=&quot;#element-table-mixin&quot; class=&quot;headerlink&quot; title=&quot;element-table-mixin&quot;&gt;&lt;/a&gt;element-table-mixin&lt;/h1&gt;&lt;p&gt;基于
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="Javascript" scheme="http://fengtianhe.cn/tags/Javascript/"/>
    
      <category term="Vue" scheme="http://fengtianhe.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Java工具函数-类工具-对比函数.Md</title>
    <link href="http://fengtianhe.cn/Java%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E7%B1%BB%E5%B7%A5%E5%85%B7-%E5%AF%B9%E6%AF%94%E5%87%BD%E6%95%B0/"/>
    <id>http://fengtianhe.cn/Java工具函数-类工具-对比函数/</id>
    <published>2020-10-16T08:14:21.000Z</published>
    <updated>2020-10-16T08:33:49.853Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java对比两个实体类字段的值差异"><a href="#Java对比两个实体类字段的值差异" class="headerlink" title="Java对比两个实体类字段的值差异"></a>Java对比两个实体类字段的值差异</h3><blockquote><p>记录这个方法的原因：<br>需求要求记录一条数据的变更日志，但是由于数据的字段过多，而且我也只想到了通过实体类的对比来判断，所以我在网上查了一下类的比较的方法</p></blockquote><h5 id="网上找到的方法"><a href="#网上找到的方法" class="headerlink" title="网上找到的方法"></a>网上找到的方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 比较两个实体属性值，返回一个map以有差异的属性名为key，value为一个Map分别存oldObject,newObject此属性名的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj1      进行属性比较的对象1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> obj2      进行属性比较的对象2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ignoreList 需要忽略的字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 属性差异比较结果map</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, List&lt;Object&gt;&gt; compareFields(Object obj1, Object obj2, List&lt;String&gt; ignoreList) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Map&lt;String, List&lt;Object&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;String, List&lt;Object&gt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只有两个对象都是同一类型的才有可比性</span></span><br><span class="line">            <span class="keyword">if</span> (obj1.getClass() == obj2.getClass()) &#123;</span><br><span class="line">                Class claz = obj1.getClass();</span><br><span class="line">                <span class="comment">// 获取object的属性描述</span></span><br><span class="line">                PropertyDescriptor[] pds = Introspector.getBeanInfo(claz,</span><br><span class="line">                        Object.class).getPropertyDescriptors();</span><br><span class="line">                <span class="comment">// 这里就是所有的属性了</span></span><br><span class="line">                <span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line">                    <span class="comment">// 属性名</span></span><br><span class="line">                    String name = pd.getName();</span><br><span class="line">                    <span class="comment">// 如果当前属性选择忽略比较，跳到下一次循环</span></span><br><span class="line">                    <span class="keyword">if</span> (ignoreList != <span class="keyword">null</span> &amp;&amp; ignoreList.contains(name)) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// get方法</span></span><br><span class="line">                    Method readMethod = pd.getReadMethod();</span><br><span class="line">                    <span class="comment">// 在obj1上调用get方法等同于获得obj1的属性值</span></span><br><span class="line">                    Object o1 = readMethod.invoke(obj1);</span><br><span class="line">                    <span class="comment">// 在obj2上调用get方法等同于获得obj2的属性值</span></span><br><span class="line">                    Object o2 = readMethod.invoke(obj2);</span><br><span class="line">                    <span class="keyword">if</span> (o1 <span class="keyword">instanceof</span> Timestamp) &#123;</span><br><span class="line">                        o1 = <span class="keyword">new</span> Date(((Timestamp) o1).getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (o2 <span class="keyword">instanceof</span> Timestamp) &#123;</span><br><span class="line">                        o2 = <span class="keyword">new</span> Date(((Timestamp) o2).getTime());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (o1 == <span class="keyword">null</span> &amp;&amp; o2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o1 == <span class="keyword">null</span> &amp;&amp; o2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">                        list.add(o1);</span><br><span class="line">                        list.add(o2);</span><br><span class="line">                        map.put(name, list);</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 比较这两个值是否相等,不等就可以放入map了</span></span><br><span class="line">                    <span class="keyword">if</span> (!o1.equals(o2)) &#123;</span><br><span class="line">                        List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">                        list.add(o1);</span><br><span class="line">                        list.add(o2);</span><br><span class="line">                        map.put(name, list);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>使用的一下确实可以，但是实体类中有些数据不需要对比，那我就需要利用传参，传一个好长的List，太繁琐了， 所以我想通过注解去识别忽略的属性</p><h5 id="忽略属性的注解"><a href="#忽略属性的注解" class="headerlink" title="忽略属性的注解"></a>忽略属性的注解</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 冯天鹤</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/10/16</span></span><br><span class="line"><span class="comment"> * content: 用于 CommonClassHelper 中 compareFields() 方法忽略字段的比较</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> IgnoreCompare &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加上注解默认不做比较</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">ignore</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在获取ignoreList 的时候只需要在比较的前边 获取一下就可以了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取比较的类中 忽略的字段</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> objectClass</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getCompareIgnoreFields</span><span class="params">(Class objectClass)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取所有的字段</span></span><br><span class="line">    Field[] fields = objectClass.getDeclaredFields();</span><br><span class="line">    List&lt;String&gt; map = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Field f : fields) &#123;</span><br><span class="line">        <span class="comment">// 判断字段注解是否存在</span></span><br><span class="line">        <span class="keyword">boolean</span> annotationPresent2 = f.isAnnotationPresent(IgnoreCompare.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (annotationPresent2) &#123;</span><br><span class="line">            IgnoreCompare ignoreCompare = f.getAnnotation(IgnoreCompare.class);</span><br><span class="line">            <span class="comment">// 获取注解值</span></span><br><span class="line">            <span class="keyword">boolean</span> ignore = ignoreCompare.ignore();</span><br><span class="line">            <span class="keyword">if</span> (ignore) &#123;</span><br><span class="line">                map.add(f.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>附一个完整的比较方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较两个实体属性值，返回一个map以有差异的属性名为key，value为一个Map分别存oldObject,newObject此属性名的值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> obj1      进行属性比较的对象1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> obj2      进行属性比较的对象2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 属性差异比较结果map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, List&lt;Object&gt;&gt; compareFields(Object obj1, Object obj2, Class clazz) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        List&lt;String&gt; ignoreList = getCompareIgnoreFields(clazz);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, List&lt;Object&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;String, List&lt;Object&gt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只有两个对象都是同一类型的才有可比性</span></span><br><span class="line">        <span class="keyword">if</span> (obj1.getClass() == obj2.getClass()) &#123;</span><br><span class="line">            Class claz = obj1.getClass();</span><br><span class="line">            <span class="comment">// 获取object的属性描述</span></span><br><span class="line">            PropertyDescriptor[] pds = Introspector.getBeanInfo(claz,</span><br><span class="line">                    Object.class).getPropertyDescriptors();</span><br><span class="line">            <span class="comment">// 这里就是所有的属性了</span></span><br><span class="line">            <span class="keyword">for</span> (PropertyDescriptor pd : pds) &#123;</span><br><span class="line">                <span class="comment">// 属性名</span></span><br><span class="line">                String name = pd.getName();</span><br><span class="line">                <span class="comment">// 如果当前属性选择忽略比较，跳到下一次循环</span></span><br><span class="line">                <span class="keyword">if</span> (ignoreList != <span class="keyword">null</span> &amp;&amp; ignoreList.contains(name)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// get方法</span></span><br><span class="line">                Method readMethod = pd.getReadMethod();</span><br><span class="line">                <span class="comment">// 在obj1上调用get方法等同于获得obj1的属性值</span></span><br><span class="line">                Object o1 = readMethod.invoke(obj1);</span><br><span class="line">                <span class="comment">// 在obj2上调用get方法等同于获得obj2的属性值</span></span><br><span class="line">                Object o2 = readMethod.invoke(obj2);</span><br><span class="line">                <span class="keyword">if</span> (o1 <span class="keyword">instanceof</span> Timestamp) &#123;</span><br><span class="line">                    o1 = <span class="keyword">new</span> Date(((Timestamp) o1).getTime());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (o2 <span class="keyword">instanceof</span> Timestamp) &#123;</span><br><span class="line">                    o2 = <span class="keyword">new</span> Date(((Timestamp) o2).getTime());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (o1 == <span class="keyword">null</span> &amp;&amp; o2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o1 == <span class="keyword">null</span> &amp;&amp; o2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">                    list.add(o1);</span><br><span class="line">                    list.add(o2);</span><br><span class="line">                    map.put(name, list);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 比较这两个值是否相等,不等就可以放入map了</span></span><br><span class="line">                <span class="keyword">if</span> (!o1.equals(o2)) &#123;</span><br><span class="line">                    List&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">                    list.add(o1);</span><br><span class="line">                    list.add(o2);</span><br><span class="line">                    map.put(name, list);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在最后，记录变更值的时候需要把字段转为对应解释记录起来，我就用了swaager注解来提取的map</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取实体类字段和 swaager 注解 <span class="doctag">@ApiModelProperty</span> 对应的值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">getFieldSwaggerValue</span><span class="params">(Class clazz)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取所有的字段</span></span><br><span class="line">    Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Field f : fields) &#123;</span><br><span class="line">        <span class="comment">// 判断字段注解是否存在</span></span><br><span class="line">        <span class="keyword">boolean</span> annotationPresent2 = f.isAnnotationPresent(ApiModelProperty.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (annotationPresent2) &#123;</span><br><span class="line">            ApiModelProperty name = f.getAnnotation(ApiModelProperty.class);</span><br><span class="line">            <span class="comment">// 获取注解值</span></span><br><span class="line">            String nameStr = name.value();</span><br><span class="line">            map.put(f.getName(), nameStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Java对比两个实体类字段的值差异&quot;&gt;&lt;a href=&quot;#Java对比两个实体类字段的值差异&quot; class=&quot;headerlink&quot; title=&quot;Java对比两个实体类字段的值差异&quot;&gt;&lt;/a&gt;Java对比两个实体类字段的值差异&lt;/h3&gt;&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="Java" scheme="http://fengtianhe.cn/tags/Java/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="类函数" scheme="http://fengtianhe.cn/tags/%E7%B1%BB%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>SpringCloud源码--SpringCloudConfig工作流程</title>
    <link href="http://fengtianhe.cn/SpringCloud%E6%BA%90%E7%A0%81-SpringCloudConfig%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
    <id>http://fengtianhe.cn/SpringCloud源码-SpringCloudConfig工作流程/</id>
    <published>2020-04-09T10:25:22.000Z</published>
    <updated>2020-04-09T13:08:44.531Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 首先，我是前端 转 PHP 转 JAVA 的以为小白，文中讲的不对的地方请提出来，也欢迎来喷</p></blockquote><blockquote><p> 起因是我司使用Eureka注册中心和 Configserver配置中心来达到多服务共享配置的问题，我好奇是如何从配置中心获取配置后，将配置写入消费方的。<br>这便引发了我4个小时追代码的过程</p></blockquote><hr><h3 id="Eureka"><a href="#Eureka" class="headerlink" title="Eureka"></a>Eureka</h3><p>废话不多说，首先说说Eureka是个什么东西，其实我也不知道是啥！<br>首先先上一张看不懂的图片，好吧我承认，这是我看过理解最快的一张图片了<br><img src="https://upload-images.jianshu.io/upload_images/2663172-412e93107d771ded.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><a href="https://github.com/Netflix/Eureka">Eureka</a> 是 <a href="https://github.com/Netflix">Netflix</a> 开发的，一个基于 REST 服务的，服务注册与发现的组件</p><p>它主要包括两个组件：Eureka Server 和 Eureka Client</p><ul><li>Eureka Client：一个Java客户端，用于简化与 Eureka Server 的交互（通常就是微服务中的客户端和服务端）</li><li>Eureka Server：提供服务注册和发现的能力（通常就是微服务中的注册中心）</li></ul><p>各个微服务启动时，会通过 Eureka Client 向 Eureka Server 注册自己，Eureka Server 会存储该服务的信息</p><p>也就是说，每个微服务的客户端和服务端，都会注册到 Eureka Server，这就衍生出了微服务相互识别的话题</p><ul><li>同步：每个 Eureka Server 同时也是 Eureka Client（逻辑上的）<br>　　　多个 Eureka Server 之间通过复制的方式完成服务注册表的同步，形成 Eureka 的高可用</li><li>识别：Eureka Client 会缓存 Eureka Server 中的信息<br>　　　即使所有 Eureka Server 节点都宕掉，服务消费者仍可使用缓存中的信息找到服务提供者<strong>（笔者已亲测）</strong></li><li>续约：微服务会周期性（默认30s）地向 Eureka Server 发送心跳以Renew（续约）信息（类似于heartbeat）</li><li>续期：Eureka Server 会定期（默认60s）执行一次失效服务检测功能<br>　　　它会检查超过一定时间（默认90s）没有Renew的微服务，发现则会注销该微服务节点</li></ul><p>Spring Cloud 已经把 Eureka 集成在其子项目 Spring Cloud Netflix 里面</p><blockquote><p> 以上都是拷贝的，说白了，Eureka做的就是接口转发的概念</p></blockquote><hr><h3 id="SpringCloudConfig"><a href="#SpringCloudConfig" class="headerlink" title="SpringCloudConfig"></a>SpringCloudConfig</h3><p>Spring Cloud Config 的官方介绍文档地址如下：<br><a href="https://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html#_spring_cloud_config">https://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html#_spring_cloud_config</a></p><p>英语好的自己读吧，我是懒得看</p><p>大致意思是，Spring Cloud Config 提供一种基于客户端与服务端（C/S）模式的分布式的配置管理。我们可以把我们的配置管理在我们的应用之外（config server 端），并且可以在外部对配置进行不同环境的管理，比如开发/测试/生产环境隔离，并且还能够做到实时更新配置。</p><hr><p>现在要看是追源码了！！！</p><p>首先，配置文件中找到了Eureka的配置项<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.application</span><span class="selector-class">.name</span>=quickstart-sample</span><br><span class="line">eureka<span class="selector-class">.client</span><span class="selector-class">.serviceUrl</span><span class="selector-class">.defaultZone</span>=$&#123;QUICKSTART_EUREKAS:http:<span class="comment">//$&#123;QUICKSTART_USERNAME:admin&#125;:$&#123;QUICKSTART_PASSWORD:123123&#125;@localhost:20000/eureka/&#125;</span></span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.profile</span>=framework,test</span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.label</span>=development-wayne</span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.discovery</span><span class="selector-class">.enabled</span>=true</span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.discovery</span><span class="selector-class">.serviceId</span>=configserver</span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.username</span>=$&#123;QUICKSTART_USERNAME:admin&#125;</span><br><span class="line">spring<span class="selector-class">.cloud</span><span class="selector-class">.config</span><span class="selector-class">.password</span>=$&#123;QUICKSTART_PASSWORD:<span class="number">123123</span>&#125;</span><br></pre></td></tr></table></figure></p><p>找到这些，我依旧是一头雾水，好吧，我自闭了<del>~我想放弃了</del><br>开了15分钟小差，我决定从Maven包下手</p><p>在项目中找到<code>spring-cloud-config-client-2.1.0.RELEASE.jar</code>这个JAR包，并随便打开一个文件下载源码（听起来好高大上，我大PHP直接看vendor什么时候还要下载源码，哼~~）</p><p>全局搜索<code>serviceId</code><br><img src="https://upload-images.jianshu.io/upload_images/2663172-f6f68daaa8500575.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>看，这里有用到诶！！<br>那既然有 <code>set</code> 那就一定有 <code>get</code>，我继续找下去，找到<code>getServiceId()</code>的调用方出现了<br><img src="https://upload-images.jianshu.io/upload_images/2663172-ce4b8b273fa45c46.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>无意间看了眼上面，嗯~~   我猜这应该是心跳吧，他是定时的从配置中心获取配置。</p><p>继续走~<br><img src="https://upload-images.jianshu.io/upload_images/2663172-d5e4b98307275086.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>在源码的127行我发现了<code>this.config.setUri(uri)</code>字眼，无奈的看了下下面只剩下catch了，算了，就研究这个config吧！<br><img src="https://upload-images.jianshu.io/upload_images/2663172-3a0e41e3c848ffd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>一样的思维，有<code>set</code> 就一定有 <code>get</code><br><img src="https://upload-images.jianshu.io/upload_images/2663172-e49383266cce477a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>在这里我找到了最终获取数据的地方<br><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">response</span> = restTemplate.exchange(uri + path, HttpMethod.<span class="keyword">GET</span>, entity,</span><br><span class="line">Environment.<span class="keyword">class</span>, args);</span><br></pre></td></tr></table></figure></p><p>接下来就涉及到返回数据的地方了，转眼到<code>spring-cloud-config-server-2.1.0.RELEASE.jar</code>这个包中，我们可以看到SpringCloudConfig定义了一个名为<code>EnvironmentController</code>这样的控制器。</p><p>在控制器中我们找到了根据上面<code>uri + path</code>的方式请求的入口，<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/&#123;name&#125;/&#123;profiles&#125;/&#123;label:.*&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> Environment labelled(<span class="meta">@PathVariable</span> <span class="built_in">String</span> name, <span class="meta">@PathVariable</span> <span class="built_in">String</span> profiles,</span><br><span class="line"><span class="meta">@PathVariable</span> <span class="built_in">String</span> label) &#123;</span><br><span class="line"><span class="keyword">if</span> (name != <span class="literal">null</span> &amp;&amp; name.contains(<span class="string">"(_)"</span>)) &#123;</span><br><span class="line"><span class="comment">// "(_)" is uncommon in a git repo name, but "/" cannot be matched</span></span><br><span class="line"><span class="comment">// by Spring MVC</span></span><br><span class="line">name = name.replace(<span class="string">"(_)"</span>, <span class="string">"/"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (label != <span class="literal">null</span> &amp;&amp; label.contains(<span class="string">"(_)"</span>)) &#123;</span><br><span class="line"><span class="comment">// "(_)" is uncommon in a git branch name, but "/" cannot be matched</span></span><br><span class="line"><span class="comment">// by Spring MVC</span></span><br><span class="line">label = label.replace(<span class="string">"(_)"</span>, <span class="string">"/"</span>);</span><br><span class="line">&#125;</span><br><span class="line">Environment environment = <span class="keyword">this</span>.repository.findOne(name, profiles, label);</span><br><span class="line"><span class="keyword">if</span>(!acceptEmpty &amp;&amp; (environment == <span class="literal">null</span> || environment.getPropertySources().isEmpty()))&#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> EnvironmentNotFoundException(<span class="string">"Profile Not found"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> environment;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我这里在配置文件中设置了<code>spring.cloud.config.server.jdbc=true</code>所以我这里是走的数据库，还有其他的读取配置方式，可自行查阅<br>根绝我设置的jdbc方式<br>上面的<code>findOne</code>使用了<code>JdbcEnvironmentRepository</code>中的实现方式<br>最后在第95行找到了<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; next = (<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;) jdbc.query(<span class="keyword">this</span>.sql,</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Object</span>[] &#123; app, env, label &#125;, <span class="keyword">this</span>.extractor);</span><br></pre></td></tr></table></figure></p><p>这里的sql可通过配置<code>spring.cloud.config.server.jdbc.sql</code>进行复写<br>如果没有复写，那么就使用<code>JdbcEnvironmentProperties</code>中默认的SQL语句<code>SELECT KEY, VALUE from PROPERTIES where APPLICATION=? and PROFILE=? and LABEL=?</code></p><p>好了，configserver完成了他的任务(东西好少啊，感觉很容易就找到了)。回过头，我们又要看消费方拿到了返回值做了些什么！！</p><p>在<code>ConfigServicePropertySourceLocator</code>文件中我们看到，其实configserver做了一个拦截，在启动的时候把配置写了进去</p><p>在同文件104行终于找到了最后的方法，通过<code>CompositePropertySource</code>将配置加载到程序中<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (PropertySource source : result.getPropertySources()) &#123;</span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; map = (<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;) source</span><br><span class="line">.getSource();</span><br><span class="line">composite.addPropertySource(<span class="keyword">new</span> MapPropertySource(source.getName(), map));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>其实我想追一下<code>CompositePropertySource</code>的源码，但是我饿<del>~</del>~了,<br> 第一次写看源码的笔记，可能有些地方我自己懂了就跳过了，如果哪里没写出来，欢迎提出来</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; 首先，我是前端 转 PHP 转 JAVA 的以为小白，文中讲的不对的地方请提出来，也欢迎来喷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt; 起因是我司使用Eureka注册中心和 Configserver配置中心来达到多服务
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="-SpringCloud" scheme="http://fengtianhe.cn/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>JS工具函数-Object工具.md</title>
    <link href="http://fengtianhe.cn/JS%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-Object%E5%B7%A5%E5%85%B7/"/>
    <id>http://fengtianhe.cn/JS工具函数-Object工具/</id>
    <published>2020-03-30T07:00:00.000Z</published>
    <updated>2020-03-30T06:58:54.932Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  clone: <span class="function"><span class="keyword">function</span>(<span class="params">object</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(object));</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 返回对象的类型</span></span><br><span class="line"><span class="comment">   * @param obj</span></span><br><span class="line"><span class="comment">   * @returns &#123;string&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  toType: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;.toString.call(obj).match(<span class="regexp">/\s([a-zA-Z]+)/</span>)[<span class="number">1</span>].toLowerCase();</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * param 将要转为URL参数字符串的对象</span></span><br><span class="line"><span class="comment">   * key URL参数字符串的前缀</span></span><br><span class="line"><span class="comment">   * encode true/false 是否进行URL编码,默认为true</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * return URL参数字符串</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  parseParam(param, key, encode) &#123;</span><br><span class="line">    <span class="keyword">if</span> (param == <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> paramStr = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">typeof</span> (param);</span><br><span class="line">    <span class="keyword">if</span> (t === <span class="string">"string"</span> || t === <span class="string">"number"</span> || t === <span class="string">"boolean"</span>) &#123;</span><br><span class="line">      paramStr += <span class="string">"&amp;"</span> + key + <span class="string">"="</span> + ((encode == <span class="literal">null</span> || encode) ? <span class="built_in">encodeURIComponent</span>(param) : param);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> param) &#123;</span><br><span class="line">        <span class="keyword">var</span> k = key == <span class="literal">null</span> ? i : key + (param <span class="keyword">instanceof</span> <span class="built_in">Array</span> ? <span class="string">"["</span> + i + <span class="string">"]"</span> : <span class="string">"."</span> + i);</span><br><span class="line">        paramStr += <span class="keyword">this</span>.parseParam(param[i], k, encode);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> paramStr;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * @author 冯天鹤</span></span><br><span class="line"><span class="comment">   * @description 对象通过属性路径获取属性值</span></span><br><span class="line"><span class="comment">   * @param obj example: &#123;user: &#123;name: '王二'&#125;&#125;</span></span><br><span class="line"><span class="comment">   * @param path example: user.name</span></span><br><span class="line"><span class="comment">   * @param strict</span></span><br><span class="line"><span class="comment">   * @returns &#123;*&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPropByPath(obj, path, strict) &#123;</span><br><span class="line">    <span class="keyword">let</span> tempObj = obj;</span><br><span class="line">    path = path.replace(<span class="regexp">/\[(\w+)\]/g</span>, <span class="string">".$1"</span>);</span><br><span class="line">    path = path.replace(<span class="regexp">/^\./</span>, <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">let</span> keyArr = path.split(<span class="string">"."</span>);</span><br><span class="line">    <span class="keyword">let</span> pathLen = keyArr.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pathLen; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!tempObj &amp;&amp; !strict) <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">let</span> pathKey = keyArr[i];</span><br><span class="line">      <span class="keyword">if</span> (tempObj[pathKey]) &#123;</span><br><span class="line">        tempObj = tempObj[pathKey];</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (strict) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"please transfer a valid prop path to form item!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tempObj;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="JS" scheme="http://fengtianhe.cn/tags/JS/"/>
    
      <category term="工具类" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
      <category term="Object函数" scheme="http://fengtianhe.cn/tags/Object%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>JS工具函数-Array工具.md</title>
    <link href="http://fengtianhe.cn/JS%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-Array%E5%B7%A5%E5%85%B7/"/>
    <id>http://fengtianhe.cn/JS工具函数-Array工具/</id>
    <published>2020-03-30T07:00:00.000Z</published>
    <updated>2020-05-22T08:27:35.567Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">/***</span></span><br><span class="line"><span class="comment">  * 将原始数组转换成树结构</span></span><br><span class="line"><span class="comment">  * @param &#123;list&#125;  [</span></span><br><span class="line"><span class="comment">                    &#123; id: 1, name: '部门A', parentId: 0 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 2, name: '部门B', parentId: 0 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 3, name: '部门C', parentId: 1 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 4, name: '部门D', parentId: 1 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 5, name: '部门E', parentId: 2 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 6, name: '部门F', parentId: 3 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 7, name: '部门G', parentId: 2 &#125;,</span></span><br><span class="line"><span class="comment">                    &#123; id: 8, name: '部门H', parentId: 4 &#125;</span></span><br><span class="line"><span class="comment">                  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  toTree(list)&#123;</span><br><span class="line">    <span class="keyword">const</span> res = []</span><br><span class="line">    <span class="keyword">const</span> map = list.reduce(<span class="function">(<span class="params">res, v</span>) =&gt;</span> (res[v.id] = v, res), &#123;&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> list) &#123;</span><br><span class="line">      <span class="keyword">if</span> (item.parentId === <span class="number">0</span>) &#123;</span><br><span class="line">        res.push(item)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (item.parentId <span class="keyword">in</span> map) &#123;</span><br><span class="line">        <span class="keyword">const</span> parent = map[item.parentId]</span><br><span class="line">        parent.children = parent.children || []</span><br><span class="line">        parent.children.push(item)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(res)))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="JS" scheme="http://fengtianhe.cn/tags/JS/"/>
    
      <category term="工具类" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
      <category term="Array函数" scheme="http://fengtianhe.cn/tags/Array%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS-NodeSass安装下载binding.node过慢</title>
    <link href="http://fengtianhe.cn/NodeJS-NodeSass%E5%AE%89%E8%A3%85%E4%B8%8B%E8%BD%BDbinding-node%E8%BF%87%E6%85%A2/"/>
    <id>http://fengtianhe.cn/NodeJS-NodeSass安装下载binding-node过慢/</id>
    <published>2020-01-04T15:01:38.000Z</published>
    <updated>2020-03-30T06:50:38.561Z</updated>
    
    <content type="html"><![CDATA[<p>在项目根目录下用这行命令：<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-p</span> <span class="string">"[process.platform, process.arch, process.versions.modules].join('-')"</span></span><br></pre></td></tr></table></figure></p><p>复制输出的结果，去 Release 列表 找到对应的版本，Ctrl+F 粘贴，找到那个文件，下载（必要的时候挂代理，浏览器下载通常都比 node 下载更快更稳定），然后文件存到一个稳定的路径，并复制路径</p><p>设置sass路径<br>Windows:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> <span class="attribute">SASS_BINARY_PATH</span>=D:/nodejs/.nodes/xxxxxxx_binding.node</span><br></pre></td></tr></table></figure></p><p>MacOS:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">SASS_BINARY_PATH</span>=/Users/xxxx/xxxxxxx_binding.node</span><br></pre></td></tr></table></figure></p><p>然后安装node-sass模块</p><p>npm i node-sass -D –verbose<br>之后重新install就可以了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在项目根目录下用这行命令：&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="JS" scheme="http://fengtianhe.cn/tags/JS/"/>
    
      <category term="NodeJS" scheme="http://fengtianhe.cn/tags/NodeJS/"/>
    
      <category term="node_modules" scheme="http://fengtianhe.cn/tags/node-modules/"/>
    
      <category term="node-sass" scheme="http://fengtianhe.cn/tags/node-sass/"/>
    
  </entry>
  
  <entry>
    <title>JS工具函数-Cookie工具.md</title>
    <link href="http://fengtianhe.cn/JS%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-Cookie%E5%B7%A5%E5%85%B7/"/>
    <id>http://fengtianhe.cn/JS工具函数-Cookie工具/</id>
    <published>2020-01-03T02:00:00.000Z</published>
    <updated>2020-01-03T02:25:41.658Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">/***</span></span><br><span class="line"><span class="comment">   *读取指定的Cookie值 readCookie("id");</span></span><br><span class="line"><span class="comment">   *@param &#123;string&#125; cookieName Cookie名称</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  get: <span class="function">(<span class="params">cookieName</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> theCookie = <span class="string">""</span> + <span class="built_in">document</span>.cookie;</span><br><span class="line">    <span class="keyword">var</span> ind = theCookie.indexOf(cookieName);</span><br><span class="line">    <span class="keyword">if</span> (ind == <span class="number">-1</span> || cookieName == <span class="string">""</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> ind1 = theCookie.indexOf(<span class="string">";"</span>, ind);</span><br><span class="line">    <span class="keyword">if</span> (ind1 == <span class="number">-1</span>) ind1 = theCookie.length;</span><br><span class="line">    <span class="comment">/* 读取Cookie值 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(theCookie.substring(ind + cookieName.length + <span class="number">1</span>, ind1));</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/***</span></span><br><span class="line"><span class="comment">   * 设置Cookie值 setCookie("id",1);</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; cookieName Cookie名称</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; cookieValue Cookie值</span></span><br><span class="line"><span class="comment">   * @param &#123;number&#125; nDays Cookie过期天数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  set: <span class="function">(<span class="params">cookieName, cookieValue</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/* 当前日期 */</span></span><br><span class="line">    <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="comment">/* Cookie过期时间 */</span></span><br><span class="line">    <span class="keyword">var</span> expire = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="comment">/* 如果未设置nDays参数或者nDays为0，取默认值1 */</span></span><br><span class="line">    <span class="comment">// if(nDays == null || nDays == 0) nDays = 1;</span></span><br><span class="line">    <span class="comment">/* 计算Cookie过期时间【 3600000 * 24  为一天】 */</span></span><br><span class="line">    expire.setTime(today.getTime() + <span class="number">400000</span>); <span class="comment">// 5分钟</span></span><br><span class="line">    <span class="built_in">document</span>.cookie = cookieName + <span class="string">"="</span> + <span class="built_in">escape</span>(cookieValue) + <span class="string">";expires="</span> + expire.toGMTString();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/***</span></span><br><span class="line"><span class="comment">   * 删除cookie中指定变量函数</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; $name Cookie名称</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">delete</span>: <span class="function">(<span class="params">$name</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    myDate.setTime(<span class="number">-1000</span>);<span class="comment">// 设置时间</span></span><br><span class="line">    <span class="built_in">document</span>.cookie = $name + <span class="string">"=''; expires="</span> + myDate.toGMTString();</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/***</span></span><br><span class="line"><span class="comment">   * 删除cookie中所有定变量函数</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; cookieName Cookie名称</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; cookieValue Cookie值</span></span><br><span class="line"><span class="comment">   * @param &#123;number&#125; nDays Cookie过期天数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  clear: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    myDate.setTime(<span class="number">-1000</span>);<span class="comment">// 设置时间</span></span><br><span class="line">    <span class="keyword">var</span> data = <span class="built_in">document</span>.cookie;</span><br><span class="line">    <span class="keyword">var</span> dataArray = data.split(<span class="string">"; "</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; dataArray.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> varName = dataArray[i].split(<span class="string">"="</span>);</span><br><span class="line">      <span class="built_in">document</span>.cookie = varName[<span class="number">0</span>] + <span class="string">"=''; expires="</span> + myDate.toGMTString();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="JS" scheme="http://fengtianhe.cn/tags/JS/"/>
    
      <category term="工具类" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
      <category term="Cookie函数" scheme="http://fengtianhe.cn/tags/Cookie%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Javascript Text Different</title>
    <link href="http://fengtianhe.cn/Javascript-textDifferent/"/>
    <id>http://fengtianhe.cn/Javascript-textDifferent/</id>
    <published>2019-11-07T02:18:37.000Z</published>
    <updated>2020-01-03T02:05:54.065Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>实现工商信息变更样式</p></blockquote><p>效果图：<br><img src="/images/js_text_diff.png" alt=""></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">diff</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> oldStr = <span class="string">'技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售新鲜蔬菜、新鲜水果、文化用品、工艺品、日用品、厨房用具；零售电子产品。依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。'</span></span><br><span class="line"><span class="keyword">let</span> newStr = <span class="string">'销售食品。技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售文化用品、工艺品、日用品、厨房用具、销售食品以及依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。'</span></span><br><span class="line">       <span class="comment">// 通过符号分割成数组</span></span><br><span class="line"><span class="keyword">let</span> oldStrArr = oldStr.split(<span class="regexp">/[、；，。]/</span>)</span><br><span class="line"><span class="keyword">let</span> diffNewStr = newStr</span><br><span class="line">       <span class="comment">// 将完全相同的部分替换掉</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">of</span> oldStrArr)&#123;</span><br><span class="line">diffNewStr = diffNewStr.replace(key, <span class="string">''</span>)</span><br><span class="line">&#125;</span><br><span class="line">       <span class="comment">// 去除新字符串中替换掉的空字符串</span></span><br><span class="line"><span class="keyword">let</span> diffNewArr = diffNewStr.split(<span class="regexp">/[、；，。]/</span>).filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;<span class="keyword">return</span> !!item&#125;)</span><br><span class="line"><span class="keyword">let</span> strWithDiff = <span class="string">''</span></span><br><span class="line">       <span class="comment">// 将新的字符串中不同的部分标红</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> addStr <span class="keyword">of</span> diffNewArr)&#123;</span><br><span class="line">strWithDiff = newStr.replace(addStr, <span class="string">`&lt;span style="color:red"&gt;<span class="subst">$&#123;addStr&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> strWithDiff</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;实现工商信息变更样式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;/images/js_text_diff.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="Javascript" scheme="http://fengtianhe.cn/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative-组件React-Native-Camera</title>
    <link href="http://fengtianhe.cn/ReactNative-%E7%BB%84%E4%BB%B6react-native-camera/"/>
    <id>http://fengtianhe.cn/ReactNative-组件react-native-camera/</id>
    <published>2019-09-09T03:28:27.000Z</published>
    <updated>2019-11-07T01:56:39.303Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ReactNative版本-lt-0-60-0"><a href="#ReactNative版本-lt-0-60-0" class="headerlink" title="ReactNative版本 &lt; 0.60.0"></a>ReactNative版本 &lt; 0.60.0</h3><h4 id="1-1、安装-react-native-camera-2-9-0-版本"><a href="#1-1、安装-react-native-camera-2-9-0-版本" class="headerlink" title="1.1、安装  `react-native-camera@2.9.0` 版本"></a>1.1、安装  <a href="mailto:`react-native-camera@2.9.0">`react-native-camera@2.9.0</a>` 版本</h4><p>将 <code>missingDimensionStrategy &#39;react-native-camera&#39;, &#39;general&#39;</code> 加入到 android/app/build.gradle 中<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        missingDimensionStrategy <span class="string">'react-native-camera'</span>, <span class="string">'mlkit'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="1-2、修改-android-build-gradle-中的-classpath"><a href="#1-2、修改-android-build-gradle-中的-classpath" class="headerlink" title="1.2、修改 android/build.gradle 中的 classpath"></a>1.2、修改 <code>android/build.gradle</code> 中的 classpath</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    ext &#123;</span><br><span class="line">        buildToolsVersion = <span class="string">"28.0.3"</span></span><br><span class="line">        minSdkVersion = <span class="number">16</span></span><br><span class="line">        compileSdkVersion = <span class="number">28</span></span><br><span class="line">        targetSdkVersion = <span class="number">28</span></span><br><span class="line">        supportLibVersion = <span class="string">"28.0.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="comment">// 注意这里的版本</span></span><br><span class="line">        <span class="keyword">classpath</span>(<span class="string">'com.android.tools.build:gradle:3.3.0'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            <span class="comment">// All of React Native (JS, Obj-C sources, Android binaries) is installed from npm</span></span><br><span class="line">            url <span class="string">"$rootDir/../node_modules/react-native/android"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3、修改-android-gradle-wrapper-gradle-wrapper-properties-中的-gradle-version"><a href="#1-3、修改-android-gradle-wrapper-gradle-wrapper-properties-中的-gradle-version" class="headerlink" title="1.3、修改 android/gradle/wrapper/gradle-wrapper.properties 中的 gradle version"></a>1.3、修改 android/gradle/wrapper/gradle-wrapper.properties 中的 gradle version</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">distributionUrl=https\<span class="symbol">://services</span>.gradle.org/distributions/gradle-<span class="number">4.10</span>.<span class="number">1</span>-all.zip</span><br></pre></td></tr></table></figure><h4 id="1-4、修改打包配置-app-build-gradle"><a href="#1-4、修改打包配置-app-build-gradle" class="headerlink" title="1.4、修改打包配置 app/build.gradle"></a>1.4、修改打包配置 <code>app/build.gradle</code></h4><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">android</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    packagingOptions &#123;</span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/proguard/androidx-annotations.pro'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="使用react-native-camera扫码"><a href="#使用react-native-camera扫码" class="headerlink" title="使用react-native-camera扫码"></a>使用react-native-camera扫码</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React from <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> &#123;RNCamera&#125; from <span class="string">"react-native-camera"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Animated, Easing, Modal, Platform, StyleSheet, Text, Vibration, View&#125; from <span class="string">'react-native'</span></span><br><span class="line"><span class="keyword">import</span> PropType from <span class="string">'prop-types'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Sound = require(<span class="string">'react-native-sound'</span>);</span><br><span class="line">Sound.setCategory(<span class="string">'Playback'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Scanner</span> <span class="title">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  static propTypes = &#123;</span><br><span class="line">    visible: PropType.bool.isRequired,</span><br><span class="line">    onClose: PropType.func.isRequired,</span><br><span class="line">    onScanSuccess: PropType.func</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span> (props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">      moveAnim: new Animated.Value(<span class="number">0</span>),</span><br><span class="line">      code: <span class="string">''</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount () &#123;</span><br><span class="line">    <span class="keyword">this</span>.startAnimation();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  startAnimation = () =&gt; &#123;</span><br><span class="line">    <span class="keyword">this</span>.state.moveAnim.setValue(<span class="number">0</span>);</span><br><span class="line">    Animated.timing(</span><br><span class="line">      <span class="keyword">this</span>.state.moveAnim,</span><br><span class="line">      &#123;</span><br><span class="line">        toValue: <span class="number">-200</span>,</span><br><span class="line">        duration: <span class="number">5000</span>,</span><br><span class="line">        easing: Easing.linear</span><br><span class="line">      &#125;</span><br><span class="line">    ).start(() =&gt; <span class="keyword">this</span>.startAnimation());</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//  识别二维码</span></span><br><span class="line">  onBarCodeRead = (result) =&gt; &#123;</span><br><span class="line">    const &#123;<span class="keyword">data</span>&#125; = result;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">data</span> &amp;&amp; !<span class="keyword">this</span>.state.code) &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;code: <span class="keyword">data</span>&#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 扫码提示音</span></span><br><span class="line">      <span class="keyword">var</span> whoosh = new Sound(<span class="string">'scanner.mp3'</span>, Sound.MAIN_BUNDLE, (error) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          console.log(<span class="string">'failed to load the sound'</span>, error);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// loaded successfully</span></span><br><span class="line">        console.log(<span class="string">'duration in seconds: '</span> + whoosh.getDuration() + <span class="string">'number of channels: '</span> + whoosh.getNumberOfChannels());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Play the sound with an onEnd callback</span></span><br><span class="line">        whoosh.play((success) =&gt; &#123;</span><br><span class="line">          <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            whoosh.pause()</span><br><span class="line">            console.log(<span class="string">'scan qr result =&gt; '</span>, <span class="keyword">data</span>)</span><br><span class="line">            <span class="keyword">this</span>.props.onScanSuccess &amp;&amp; <span class="keyword">this</span>.props.onScanSuccess(<span class="keyword">data</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            console.log(<span class="string">'playback failed due to audio decoding errors'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      whoosh.setNumberOfLoops(<span class="number">1</span>);</span><br><span class="line">      whoosh.release();</span><br><span class="line"></span><br><span class="line">      <span class="comment">//手机振动</span></span><br><span class="line">      <span class="keyword">if</span> (Platform.OS === <span class="string">'ios'</span>) &#123;</span><br><span class="line">        Vibration.vibrate(<span class="number">100</span>, <span class="literal">false</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Vibration.vibrate([<span class="number">0</span>, <span class="number">100</span>], <span class="literal">false</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render () &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Modal</span><br><span class="line">        visible=&#123;<span class="keyword">this</span>.props.visible&#125;</span><br><span class="line">        onRequestClose=&#123;<span class="keyword">this</span>.props.onClose&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">          &lt;RNCamera</span><br><span class="line">            ref=&#123;ref =&gt; &#123;</span><br><span class="line">              <span class="keyword">this</span>.camera = ref;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            style=&#123;styles.preview&#125;</span><br><span class="line">            type=&#123;RNCamera.Constants.Type.back&#125;</span><br><span class="line">            flashMode=&#123;RNCamera.Constants.FlashMode.on&#125;</span><br><span class="line">            onBarCodeRead=&#123;<span class="keyword">this</span>.onBarCodeRead&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;View style=&#123;styles.rectangleContainer&#125;&gt;</span><br><span class="line">              &lt;View style=&#123;styles.rectangle&#125;/&gt;</span><br><span class="line">              &lt;Animated.View style=&#123;[</span><br><span class="line">                styles.border,</span><br><span class="line">                &#123;transform: [&#123;translateY: <span class="keyword">this</span>.state.moveAnim&#125;]&#125;]&#125;/&gt;</span><br><span class="line">              &lt;Text style=&#123;styles.rectangleText&#125;&gt;将二维码/条码放入框内，即可自动扫描&lt;/Text&gt;</span><br><span class="line">            &lt;/View&gt;</span><br><span class="line">          &lt;/RNCamera&gt;</span><br><span class="line">        &lt;/View&gt;</span><br><span class="line">      &lt;/Modal&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = StyleSheet.create(&#123;</span><br><span class="line">  container: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    flexDirection: <span class="string">'row'</span>,</span><br><span class="line">    width: <span class="string">'100%'</span>,</span><br><span class="line">    height: <span class="string">'100%'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  preview: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    justifyContent: <span class="string">'flex-end'</span>,</span><br><span class="line">    alignItems: <span class="string">'center'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangleContainer: &#123;</span><br><span class="line">    flex: <span class="number">1</span>,</span><br><span class="line">    alignItems: <span class="string">'center'</span>,</span><br><span class="line">    justifyContent: <span class="string">'center'</span>,</span><br><span class="line">    backgroundColor: <span class="string">'transparent'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangle: &#123;</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    borderWidth: <span class="number">1</span>,</span><br><span class="line">    borderColor: <span class="string">'#00FF00'</span>,</span><br><span class="line">    backgroundColor: <span class="string">'transparent'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  rectangleText: &#123;</span><br><span class="line">    flex: <span class="number">0</span>,</span><br><span class="line">    color: <span class="string">'#fff'</span>,</span><br><span class="line">    marginTop: <span class="number">10</span></span><br><span class="line">  &#125;,</span><br><span class="line">  border: &#123;</span><br><span class="line">    flex: <span class="number">0</span>,</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">2</span>,</span><br><span class="line">    backgroundColor: <span class="string">'#00FF00'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">export <span class="keyword">default</span> Scanner</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ReactNative版本-lt-0-60-0&quot;&gt;&lt;a href=&quot;#ReactNative版本-lt-0-60-0&quot; class=&quot;headerlink&quot; title=&quot;ReactNative版本 &amp;lt; 0.60.0&quot;&gt;&lt;/a&gt;ReactNative版本 &amp;
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="ReactNative" scheme="http://fengtianhe.cn/tags/ReactNative/"/>
    
      <category term="node_modules" scheme="http://fengtianhe.cn/tags/node-modules/"/>
    
  </entry>
  
  <entry>
    <title>PHP-Composer国内镜像</title>
    <link href="http://fengtianhe.cn/PHP-Composer%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F/"/>
    <id>http://fengtianhe.cn/PHP-Composer国内镜像/</id>
    <published>2019-08-14T03:31:26.000Z</published>
    <updated>2019-11-07T01:56:39.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="加速原理"><a href="#加速原理" class="headerlink" title="加速原理"></a>加速原理</h3><hr><p>Composer 安装时候会向国外的 Packagist 服务器发送请求，因为众所周知的原因，国内请求国外服务器，有时会出现不稳定甚至不可用的情况。</p><p>镜像加速就是把国外的数据缓存到国内的服务器上，Composer 客户端只需配置服务器为国内的服务器，即可从国内服务器上下载，稳定性会有很高的提升。</p><h3 id="要点一：全量与非全量镜像"><a href="#要点一：全量与非全量镜像" class="headerlink" title="要点一：全量与非全量镜像"></a>要点一：全量与非全量镜像</h3><hr><p>Composer 安装扩展包的时候，一般会发起两种请求：</p><p>JSON 请求 —— 扩展包元信息，包括 zip 包的下载链接；<br>Zip 包请求 —— 扩展包源码压缩包。<br>全量镜像指的是以上两种请求都使用国内服务器加速。而非全量服务器一般只缓存 JSON 数据。</p><h3 id="要点二、更新时间"><a href="#要点二、更新时间" class="headerlink" title="要点二、更新时间"></a>要点二、更新时间</h3><hr><p>当一个 PHP 扩展包从 GitHub 上发布新版本的时候，Packagist.org 上会接收到回调并记录新版本的信息。与 GitHub 的回调相比，国内镜像只能通过主动请求 Packagist.org 的方式来获取更新的扩展包版本。</p><p>更新时间指的是国内镜像服务器更新请求的频率，意味着当你在 GitHub 上发布了新版本，此新版本需要多长时间才能在国内的镜像服务器上出现。</p><p>故更新时间越短越好。</p><h3 id="阿里云-Composer-全量镜像（推荐）"><a href="#阿里云-Composer-全量镜像（推荐）" class="headerlink" title="阿里云 Composer 全量镜像（推荐）"></a>阿里云 Composer 全量镜像（推荐）</h3><hr><p>镜像类型：全量镜像<br>更新时间：1 分钟<br>镜像地址：<a href="https://mirrors.aliyun.com/composer/">https://mirrors.aliyun.com/composer/</a><br>官方地址：<a href="https://developer.aliyun.com/composer">https://developer.aliyun.com/composer</a><br>镜像说明：阿里云 CDN 加速，更新速度快，推荐使用</p><h3 id="安畅网络镜像"><a href="#安畅网络镜像" class="headerlink" title="安畅网络镜像"></a>安畅网络镜像</h3><hr><p>镜像类型：全量镜像<br>更新时间：1 分钟<br>镜像地址：<a href="https://php.cnpkg.org">https://php.cnpkg.org</a><br>官方地址：<a href="https://php.cnpkg.org/">https://php.cnpkg.org/</a><br>镜像说明：此 Composer 镜像由安畅网络赞助，目前支持元数据、下载包全量代理。</p><h3 id="交通大学镜像"><a href="#交通大学镜像" class="headerlink" title="交通大学镜像"></a>交通大学镜像</h3><hr><p>镜像类型：非全量镜像<br>镜像地址：<a href="https://packagist.mirrors.sjtug.sjtu.edu.c...\">https://packagist.mirrors.sjtug.sjtu.edu.c...\</a><br>官方地址：<a href="https://mirrors.sjtug.sjtu.edu.cn/packagis...\">https://mirrors.sjtug.sjtu.edu.cn/packagis...\</a><br>镜像说明：上海交通大学提供的 composer 镜像，稳定、快速、现代的镜像服务，推荐使用。</p><h3 id="Laravel-China-镜像（deprecated）"><a href="#Laravel-China-镜像（deprecated）" class="headerlink" title="Laravel China 镜像（deprecated）"></a>Laravel China 镜像（deprecated）</h3><hr><p>镜像类型：全量镜像<br>更新时间：10 分钟<br>镜像地址：<a href="https://packagist.laravel-china.org">https://packagist.laravel-china.org</a><br>官方地址：镜像详情<br>镜像说明：Laravel China 社区镜像，将于 2019 年 9 月 4 号停用。详见：博客：Laravel China 镜像完成历史使命，将于两个月后停用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;加速原理&quot;&gt;&lt;a href=&quot;#加速原理&quot; class=&quot;headerlink&quot; title=&quot;加速原理&quot;&gt;&lt;/a&gt;加速原理&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;Composer 安装时候会向国外的 Packagist 服务器发送请求，因为众所周知的原因，国内请求国外服务器，
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="Composer" scheme="http://fengtianhe.cn/tags/Composer/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-图片工具-生成微信分享图片</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E5%9B%BE%E7%89%87%E5%B7%A5%E5%85%B7-%E7%94%9F%E6%88%90%E5%BE%AE%E4%BF%A1%E5%88%86%E4%BA%AB%E5%9B%BE%E7%89%87/"/>
    <id>http://fengtianhe.cn/PHP工具函数-图片工具-生成微信分享图片/</id>
    <published>2019-08-13T11:45:06.000Z</published>
    <updated>2019-11-07T01:56:39.288Z</updated>
    
    <content type="html"><![CDATA[<p>先上效果图<br><img src="/images/20190813-1.jpeg" alt="微信分享自定义图片"></p><p>用到的函数<br><code>getimagesize()</code><br><code>imagecreatetruecolor()</code><br><code>imagecreatefromjpeg()</code><br><code>imagecopyresized()</code><br><code>imagecreatefrompng()</code><br><code>imagealphablending()</code><br><code>imagesavealpha()</code><br><code>imagecopy()</code><br><code>imagecolorallocate()</code><br><code>imagettftext()</code></p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取远程图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $file</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $from</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file</span><span class="params">($file, $from)</span> </span>&#123;</span><br><span class="line">    file_put_contents(sys_get_temp_dir() . <span class="string">"/"</span> . $file, file_get_contents($from));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 合成图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_merge_image</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 将两个远程的图片存到本地临时文件夹</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;get_file(<span class="string">'egg'</span>, <span class="string">'https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'</span>);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;get_file(<span class="string">'date'</span>, <span class="string">'http://cm-images.cainiaoshicai.cn/wxminiapp/image/pricecontainer.png'</span>);</span><br><span class="line"></span><br><span class="line">    $bannerimg = sys_get_temp_dir() . <span class="string">'/egg'</span>;</span><br><span class="line">    $bottom = sys_get_temp_dir() . <span class="string">'/date'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取图片原式</span></span><br><span class="line">    <span class="keyword">list</span>($width, $height) = getimagesize($bannerimg);</span><br><span class="line">    <span class="comment">// 创建微信5:4的画布</span></span><br><span class="line">    $thumb = imagecreatetruecolor(<span class="number">800</span>, <span class="number">640</span>);</span><br><span class="line"></span><br><span class="line">    $image_1 = imagecreatefromjpeg($bannerimg);</span><br><span class="line">    <span class="comment">// 改变背景图大小 并画到画布上</span></span><br><span class="line">    imagecopyresized($thumb, $image_1, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">640</span>, $width, $height);</span><br><span class="line"></span><br><span class="line">    $image_2 = imagecreatefrompng($bottom);</span><br><span class="line"></span><br><span class="line">    imagealphablending($thumb, <span class="keyword">true</span>);</span><br><span class="line">    imagesavealpha($thumb, <span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 将底部图片 放到图片上</span></span><br><span class="line">    imagecopy($thumb, $image_2, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">160</span>, <span class="number">800</span>, <span class="number">800</span>);</span><br><span class="line"></span><br><span class="line">    $textColor = imagecolorallocate($thumb, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    $black = imagecolorallocate($thumb, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 往图片上写文字 *.otf *.ttf 都是字体文件</span></span><br><span class="line">    imagettftext($thumb, <span class="number">40</span>, <span class="number">0</span>, <span class="number">40</span>, <span class="number">600</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'￥'</span>);</span><br><span class="line">    imagettftext($thumb, <span class="number">60</span>, <span class="number">0</span>, <span class="number">90</span>, <span class="number">600</span>, $textColor, sys_get_temp_dir() . <span class="string">'b.ttf'</span>, <span class="string">'23.50'</span>);</span><br><span class="line"></span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">330</span>, <span class="number">596</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'￥'</span> . number_format(<span class="string">'23.50'</span> * <span class="number">1.2</span>, <span class="number">2</span>));</span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">335</span>, <span class="number">592</span>, $textColor, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'————'</span>);</span><br><span class="line"></span><br><span class="line">    imagettftext($thumb, <span class="number">30</span>, <span class="number">0</span>, <span class="number">570</span>, <span class="number">600</span>, $black, sys_get_temp_dir() . <span class="string">'a.otf'</span>, <span class="string">'销量20076'</span>);</span><br><span class="line">    <span class="comment">// 输出图片格式的响应</span></span><br><span class="line">    header(<span class="string">'Content-type: image/png;charset=utf-8'</span>);</span><br><span class="line">    <span class="comment">// 生成图片 第二个参数可以传本地路径</span></span><br><span class="line">    imagepng($thumb);</span><br><span class="line">    <span class="comment">// 销毁图片</span></span><br><span class="line">    imagedestroy($thumb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取图片拓展名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_image_extension</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;autoRender = <span class="keyword">false</span>;</span><br><span class="line">    print_r(getimagesize(<span class="string">'https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先上效果图&lt;br&gt;&lt;img src=&quot;/images/20190813-1.jpeg&quot; alt=&quot;微信分享自定义图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;用到的函数&lt;br&gt;&lt;code&gt;getimagesize()&lt;/code&gt;&lt;br&gt;&lt;code&gt;imagecreatetruecolor()&lt;
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="图片函数" scheme="http://fengtianhe.cn/tags/%E5%9B%BE%E7%89%87%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Android-自动编译版本号</title>
    <link href="http://fengtianhe.cn/Android-%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    <id>http://fengtianhe.cn/Android-自动编译版本号/</id>
    <published>2019-07-25T07:28:48.000Z</published>
    <updated>2019-11-07T01:56:39.277Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>又开始总结搬砖经验了:<br>在使用ReactNative开发App的时候，在编译时总忘记修改版本号，懒惰的我又开始考虑使用脚本解决我的问题😈</p></blockquote><p>首先我们要看下版本号在哪？<br>ReactNative在编译的时候会读取<code>{项目目录}/android/app/build.gradle</code>下的defaultConfig<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.xxxx"</span></span><br><span class="line">        minSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.minSdkVersion</span></span><br><span class="line">        targetSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.targetSdkVersion</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">'1.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在每次编译的时候 都要修改<code>versionCode</code>和<code>versionName</code><br>懒惰得我找了度娘，大家一致认为使用git tag 和 git commit count来自动化版本号</p><hr><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h3 id="定义获取版本号方法"><a href="#定义获取版本号方法" class="headerlink" title="定义获取版本号方法"></a>定义获取版本号方法</h3><p>在<code>{项目目录}/android/app/build.gradle</code>中android上方定义方法(前提是当前项目有git tag)<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSelfDefinedVersion</span></span>(<span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cmd</span> </span>= <span class="symbol">'git</span> describe --tags'</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gitTag</span> </span>= cmd.execute().text.trim()</span><br><span class="line"></span><br><span class="line">    <span class="type">Process</span> process = <span class="string">"git rev-list --count HEAD"</span>.execute()</span><br><span class="line">    process.waitFor()</span><br><span class="line">    int commitCount = process.getText().toInteger()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">"code"</span>.equals(<span class="class"><span class="keyword">type</span>)) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commitCount</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"name"</span>.equals(<span class="class"><span class="keyword">type</span>)) </span>&#123;</span><br><span class="line">        <span class="type">String</span> today = <span class="keyword">new</span> <span class="type">Date</span>().format(<span class="string">"yyMMdd"</span>)</span><br><span class="line">        process = <span class="string">"git describe --always"</span>.execute()</span><br><span class="line">        process.waitFor()</span><br><span class="line">        <span class="type">String</span> sha1 = process.getText().trim()</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"$gitTag.$commitCount.$today.$sha1"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="使用函数获取版本号"><a href="#使用函数获取版本号" class="headerlink" title="使用函数获取版本号"></a>使用函数获取版本号</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.xxxx"</span></span><br><span class="line">        minSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.minSdkVersion</span></span><br><span class="line">        targetSdkVersion rootProject<span class="selector-class">.ext</span><span class="selector-class">.targetSdkVersion</span></span><br><span class="line">        versionCode getSelfDefinedVersion(<span class="string">'code'</span>) <span class="comment">// 改这里</span></span><br><span class="line">        versionName getSelfDefinedVersion(<span class="string">'name'</span>) <span class="comment">// 改这里</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改输出文件名"><a href="#修改输出文件名" class="headerlink" title="修改输出文件名"></a>修改输出文件名</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">android.applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    variant.outputs.all &#123; output -&gt;</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">outputFile</span></span> = output.outputFile</span><br><span class="line">        if (outputFile != null &amp;&amp; outputFile.name.endsWith(<span class="string">'.apk'</span>)) &#123;</span><br><span class="line">            /<span class="regexp">/这里修改apk文件名</span></span><br><span class="line"><span class="regexp">            def fileName = "xxxxx-$&#123;defaultConfig.versionCode&#125;-$&#123;defaultConfig.versionName&#125;.apk"</span></span><br><span class="line"><span class="regexp">            outputFileName = fileName</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="编译结果"><a href="#编译结果" class="headerlink" title="编译结果"></a>编译结果</h3><p>在<code>android/app/build/generated/source/buildConfig/release/com/xxx/BuildConfig.java</code><br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> class BuildConfig &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">boolean</span> DEBUG = <span class="keyword">false</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> APPLICATION_ID = <span class="string">"com.cnmanager"</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> BUILD_TYPE = <span class="string">"release"</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> FLAVOR = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> VERSION_CODE = <span class="number">15</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> VERSION_NAME = <span class="string">"v1.0.15.190725.5487385"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>在有大版本更新的时候需要改git tag所以我又写了个shell脚本来确认修改git tag<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line">currGitTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"当前tag <span class="variable">$currGitTag</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'是否有大版本变更？(y/n)(默认：n):'</span></span><br><span class="line"><span class="built_in">read</span> USER_CONFIRM_VERSION</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"y"</span> ]] || [[ <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> = <span class="string">"Y"</span> ]] || [[ -z <span class="string">"<span class="variable">$USER_CONFIRM_VERSION</span>"</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"请输入git tag版本"</span></span><br><span class="line">    <span class="built_in">read</span> USER_INPUT_TAG</span><br><span class="line"></span><br><span class="line">    git tag <span class="variable">$&#123;USER_INPUT_TAG&#125;</span></span><br><span class="line">    git push --tags</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">commitCount=`git rev-list --count HEAD`</span><br><span class="line">latestTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)</span><br><span class="line">currDate=`date +%y%m%d`</span><br><span class="line"><span class="comment">#gitShort=`git describe --always`</span></span><br><span class="line">versionName=<span class="string">"<span class="variable">$latestTag</span>.<span class="variable">$commitCount</span>.<span class="variable">$currDate</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"编译版本为：<span class="variable">$versionName</span>"</span></span><br><span class="line"><span class="built_in">read</span> CONFIRM</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> android &amp;&amp; ./gradlew assembleRelease</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;又开始总结搬砖经验了:&lt;br&gt;在使用ReactNative开发App的时候，在编译时总忘记修改版本号，懒惰的我又开始考虑使用脚本解决我的问题😈&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们要看下版本号在哪？&lt;br&gt;ReactNative在编
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="项目发布" scheme="http://fengtianhe.cn/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="ReactNative" scheme="http://fengtianhe.cn/tags/ReactNative/"/>
    
      <category term="Android" scheme="http://fengtianhe.cn/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>小程序-贝塞尔曲线加入购物车动效</title>
    <link href="http://fengtianhe.cn/%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%85%A5%E8%B4%AD%E7%89%A9%E8%BD%A6%E5%8A%A8%E6%95%88/"/>
    <id>http://fengtianhe.cn/小程序-贝塞尔曲线加入购物车动效/</id>
    <published>2019-07-13T07:53:24.000Z</published>
    <updated>2019-11-07T01:56:39.309Z</updated>
    
    <content type="html"><![CDATA[<p>首先上个效果图<br><img src="/images/wx-miniprogram-bezier.gif" alt="JAVA相关环境变量"></p><p>在工具目录下创建算法文件 /utils/bezier.js</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 贝塞尔曲线</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> sx 起始点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> sy 起始点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cx 控制点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> cy 控制点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ex 结束点x坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> ey 结束点y坐标</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> part 将起始点到控制点的线段分成的份数，数值越高，计算出的曲线越精确</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 贝塞尔曲线坐标</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  bezier: <span class="function"><span class="keyword">function</span> <span class="params">(points, part)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> sx = points[<span class="number">0</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> sy = points[<span class="number">0</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">let</span> cx = points[<span class="number">1</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> cy = points[<span class="number">1</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">let</span> ex = points[<span class="number">2</span>][<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">let</span> ey = points[<span class="number">2</span>][<span class="string">'y'</span>];</span><br><span class="line">    <span class="keyword">var</span> bezier_points = [];</span><br><span class="line">    <span class="comment">// 起始点到控制点的x和y每次的增量</span></span><br><span class="line">    <span class="keyword">var</span> changeX1 = (cx - sx) / part;</span><br><span class="line">    <span class="keyword">var</span> changeY1 = (cy - sy) / part;</span><br><span class="line">    <span class="comment">// 控制点到结束点的x和y每次的增量</span></span><br><span class="line">    <span class="keyword">var</span> changeX2 = (ex - cx) / part;</span><br><span class="line">    <span class="keyword">var</span> changeY2 = (ey - cy) / part;</span><br><span class="line">    <span class="comment">//循环计算</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= part; i++) &#123;</span><br><span class="line">      <span class="comment">// 计算两个动点的坐标</span></span><br><span class="line">      <span class="keyword">var</span> qx1 = sx + changeX1 * i;</span><br><span class="line">      <span class="keyword">var</span> qy1 = sy + changeY1 * i;</span><br><span class="line">      <span class="keyword">var</span> qx2 = cx + changeX2 * i;</span><br><span class="line">      <span class="keyword">var</span> qy2 = cy + changeY2 * i;</span><br><span class="line">      <span class="comment">// 计算得到此时的一个贝塞尔曲线上的点</span></span><br><span class="line">      <span class="keyword">var</span> lastX = qx1 + (qx2 - qx1) * i / part;</span><br><span class="line">      <span class="keyword">var</span> lastY = qy1 + (qy2 - qy1) * i / part;</span><br><span class="line">      <span class="comment">// 保存点坐标</span></span><br><span class="line">      <span class="keyword">var</span> point = &#123;&#125;;</span><br><span class="line">      point[<span class="string">'x'</span>] = lastX;</span><br><span class="line">      point[<span class="string">'y'</span>] = lastY;</span><br><span class="line">      bezier_points.push(point);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(bezier_points)</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="string">'bezier_points'</span>: bezier_points</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用的页面中 定义 小圆点<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 加入购物车动态小图标 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"good_box"</span> <span class="attr">hidden</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;hide_good_box&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>  <span class="attr">style</span>=<span class="string">"left: </span></span></span><span class="template-variable">&#123;&#123;bus_x&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px; top: </span></span></span><span class="template-variable">&#123;&#123;bus_y&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">.good_box &#123;</span></span><br><span class="line"><span class="xml">width: 30rpx;</span></span><br><span class="line"><span class="xml">height: 30rpx;</span></span><br><span class="line"><span class="xml">position: fixed;</span></span><br><span class="line"><span class="xml">border-radius: 50%;</span></span><br><span class="line"><span class="xml">overflow: hidden;</span></span><br><span class="line"><span class="xml">left: 50%;</span></span><br><span class="line"><span class="xml">top: 50%;</span></span><br><span class="line"><span class="xml">z-index: 99;</span></span><br><span class="line"><span class="xml">background: #b02c41;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure></p><p>在js文件中定义data<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hide_good_box:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">bus_x:</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line"><span class="attr">bus_y:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>点击事件  bindtap 执行 touchOnGoods 就可以<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">touchOnGoods: function(e) &#123;</span><br><span class="line">    <span class="comment">// 如果good_box正在运动</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.<span class="keyword">data</span>.hide_good_box) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.finger = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 运动的终点位置</span></span><br><span class="line">    <span class="keyword">this</span>.busPos = &#123;</span><br><span class="line">      x: <span class="number">337</span>,</span><br><span class="line">      y: <span class="number">527</span></span><br><span class="line">    &#125;;</span><br><span class="line">    let topPoint = &#123;&#125;;</span><br><span class="line">    <span class="keyword">this</span>.finger[<span class="string">'x'</span>] = e.touches[<span class="string">"0"</span>].clientX;</span><br><span class="line">    <span class="keyword">this</span>.finger[<span class="string">'y'</span>] = e.touches[<span class="string">"0"</span>].clientY;</span><br><span class="line">    console.log(<span class="string">'finger =&gt; '</span>, <span class="keyword">this</span>.finger)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.finger[<span class="string">'y'</span>] &lt; <span class="keyword">this</span>.busPos[<span class="string">'y'</span>]) &#123;</span><br><span class="line">      topPoint[<span class="string">'y'</span>] = <span class="keyword">this</span>.finger[<span class="string">'y'</span>] - <span class="number">150</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      topPoint[<span class="string">'y'</span>] = <span class="keyword">this</span>.busPos[<span class="string">'y'</span>] - <span class="number">150</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    topPoint[<span class="string">'x'</span>] = Math.abs(<span class="keyword">this</span>.finger[<span class="string">'x'</span>] - <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) / <span class="number">2</span>;</span><br><span class="line">    console.log(<span class="string">'top point =&gt; '</span>, topPoint)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.finger[<span class="string">'x'</span>] &gt; <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) &#123;</span><br><span class="line">      topPoint[<span class="string">'x'</span>] = (<span class="keyword">this</span>.finger[<span class="string">'x'</span>] - <span class="keyword">this</span>.busPos[<span class="string">'x'</span>]) / <span class="number">2</span> + <span class="keyword">this</span>.busPos[<span class="string">'x'</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      topPoint[<span class="string">'x'</span>] = (<span class="keyword">this</span>.busPos[<span class="string">'x'</span>] - <span class="keyword">this</span>.finger[<span class="string">'x'</span>]) / <span class="number">2</span> + <span class="keyword">this</span>.finger[<span class="string">'x'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(<span class="string">'bus point =&gt; '</span>, <span class="keyword">this</span>.busPos)</span><br><span class="line">    <span class="keyword">this</span>.linePos = bezier.bezier([<span class="keyword">this</span>.finger, topPoint, <span class="keyword">this</span>.busPos], <span class="number">20</span>);</span><br><span class="line">    <span class="keyword">this</span>.startAnimation();</span><br><span class="line">  &#125;,</span><br><span class="line">  startAnimation: function() &#123;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="number">0</span>,</span><br><span class="line">      that = <span class="keyword">this</span>,</span><br><span class="line">      bezier_points = that.linePos[<span class="string">'bezier_points'</span>],</span><br><span class="line">      len = bezier_points.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      hide_good_box: <span class="literal">false</span>,</span><br><span class="line">      bus_x: that.finger[<span class="string">'x'</span>],</span><br><span class="line">      bus_y: that.finger[<span class="string">'y'</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.timer = setInterval(function() &#123;</span><br><span class="line">      index++;</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        bus_x: bezier_points[index][<span class="string">'x'</span>],</span><br><span class="line">        bus_y: bezier_points[index][<span class="string">'y'</span>]</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (index &gt;= len) &#123;</span><br><span class="line">        clearInterval(that.timer);</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          hide_good_box: <span class="literal">true</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">20</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>最后记得在<code>onHide</code>中销毁定时器<code>this.timer</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先上个效果图&lt;br&gt;&lt;img src=&quot;/images/wx-miniprogram-bezier.gif&quot; alt=&quot;JAVA相关环境变量&quot;&gt;&lt;/p&gt;
&lt;p&gt;在工具目录下创建算法文件 /utils/bezier.js&lt;/p&gt;
&lt;figure class=&quot;highlig
      
    
    </summary>
    
      <category term="wxminiprogram" scheme="http://fengtianhe.cn/categories/wxminiprogram/"/>
    
    
      <category term="小程序" scheme="http://fengtianhe.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="特效" scheme="http://fengtianhe.cn/tags/%E7%89%B9%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-数组工具-多字段分组</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7-%E5%A4%9A%E5%AD%97%E6%AE%B5%E5%88%86%E7%BB%84/"/>
    <id>http://fengtianhe.cn/PHP工具函数-数组工具-多字段分组/</id>
    <published>2019-03-29T10:08:35.000Z</published>
    <updated>2019-11-07T01:56:39.289Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">array_group_by</span><span class="params">($arr, $key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($arr)) &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">        $grouped = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $value) &#123;</span><br><span class="line">            $grouped[$value[$key]][] = $value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Recursively build a nested grouping if more parameters are supplied</span></span><br><span class="line">        <span class="comment">// Each grouped array value is grouped according to the next sequential key</span></span><br><span class="line">        <span class="keyword">if</span> (func_num_args() &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            $args = func_get_args();</span><br><span class="line">            <span class="keyword">foreach</span> ($grouped <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                $parms = array_merge([$value], array_slice($args, <span class="number">2</span>, func_num_args()));</span><br><span class="line">                $grouped[$key] = call_user_func_array(<span class="string">'array_group_by'</span>, $parms);</span><br><span class="line">                <span class="comment">// 上面是当前方法作为全局方法使用，下面是吧方法写在类中的使用 详见 call_user_func_array()</span></span><br><span class="line">                <span class="comment">// $grouped[$key] = call_user_func_array([$this, 'array_group_by'], $parms);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $grouped;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="数组函数" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/"/>
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Vue 项目部署</title>
    <link href="http://fengtianhe.cn/Vue-%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2/"/>
    <id>http://fengtianhe.cn/Vue-项目部署/</id>
    <published>2019-03-26T10:55:36.000Z</published>
    <updated>2019-11-07T01:56:39.305Z</updated>
    
    <content type="html"><![CDATA[<p>首先要配置服务器ssh免密登录</p><p>deploy.sh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#获取环境名</span></span><br><span class="line">env=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ x<span class="variable">$1</span> != x ];<span class="keyword">then</span></span><br><span class="line">    env=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    env=<span class="string">'prod'</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取当前分支名</span></span><br><span class="line">curr_branch=`git symbolic-ref --short -q HEAD`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'当前工作分支 =&gt; '</span><span class="variable">$&#123;curr_branch&#125;</span><span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'读取配置文件:'</span></span><br><span class="line">deploy_branch=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_branch<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_host=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_host<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_port=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_port<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_user=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_user<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_path=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_path<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_bak_path=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_bak_path<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line">deploy_script=`sed <span class="string">'/^'</span><span class="variable">$&#123;env&#125;</span>_script<span class="string">'=/!d;s/.*=//'</span> deploy.conf`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'分支 =&gt; '</span><span class="variable">$&#123;deploy_branch&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'地址 =&gt; '</span><span class="variable">$&#123;deploy_host&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'端口 =&gt; '</span><span class="variable">$&#123;deploy_port&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'用户 =&gt; '</span><span class="variable">$&#123;deploy_user&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'路径 =&gt; '</span><span class="variable">$&#123;deploy_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'备份路径 =&gt; '</span><span class="variable">$&#123;deploy_bak_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'脚本 =&gt; '</span><span class="variable">$&#123;deploy_script&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'储存当前修改'</span></span><br><span class="line">git stash</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'切换到需发布的分支 =&gt; '</span><span class="variable">$&#123;deploy_branch&#125;</span></span><br><span class="line">git checkout <span class="variable">$deploy_branch</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'编译项目'</span></span><br><span class="line">npm run <span class="variable">$&#123;deploy_script&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'备份老版本'</span></span><br><span class="line">curr_datetime=`date +%Y%m%d%H%M%S`</span><br><span class="line">ssh <span class="variable">$&#123;deploy_user&#125;</span>@<span class="variable">$&#123;deploy_host&#125;</span> -p <span class="variable">$&#123;deploy_port&#125;</span> <span class="string">"mv <span class="variable">$deploy_path</span> <span class="variable">$deploy_bak_path</span>/bak_<span class="variable">$curr_datetime</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'上传新版本'</span></span><br><span class="line">scp -P <span class="variable">$&#123;deploy_port&#125;</span> -r ./dist/ <span class="variable">$&#123;deploy_user&#125;</span>@<span class="variable">$&#123;deploy_host&#125;</span>:<span class="variable">$&#123;deploy_path&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'切回工作分支 =&gt; '</span><span class="variable">$&#123;curr_branch&#125;</span></span><br><span class="line">git checkout <span class="variable">$curr_branch</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'释放修改'</span></span><br><span class="line">git stash pop</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'\n'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'部署成功'</span></span><br></pre></td></tr></table></figure></p><p>deploy.conf<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alpha_branch</span>=alpha</span><br><span class="line"><span class="attr">alpha_host</span>=xxxx</span><br><span class="line"><span class="attr">alpha_port</span>=xxxx</span><br><span class="line"><span class="attr">alpha_user</span>=xxxx</span><br><span class="line"><span class="attr">alpha_path</span>=xxxxx</span><br><span class="line"><span class="attr">alpha_bak_path</span>=xxxxx</span><br><span class="line"><span class="attr">alpha_script</span>=build_alpha</span><br><span class="line"></span><br><span class="line"><span class="attr">test_branch</span>=测试环境分支名</span><br><span class="line"><span class="attr">test_host</span>=测试环境机器ip</span><br><span class="line"><span class="attr">test_user</span>=测试环境机器用户</span><br><span class="line"><span class="attr">test_path</span>=测试环境项目路径</span><br><span class="line"></span><br><span class="line"><span class="attr">preview_branch</span>=preview</span><br><span class="line"><span class="attr">preview_host</span>=xxxx</span><br><span class="line"><span class="attr">preview_port</span>=xxxx</span><br><span class="line"><span class="attr">preview_user</span>=xxxx</span><br><span class="line"><span class="attr">preview_path</span>=xxxx</span><br><span class="line"><span class="attr">preview_bak_path</span>=xxxx</span><br><span class="line"><span class="attr">preview_script</span>=build_preview</span><br><span class="line"></span><br><span class="line"><span class="attr">prod_branch</span>=master</span><br><span class="line"><span class="attr">prod_host</span>=xxxx</span><br><span class="line"><span class="attr">prod_port</span>=xxxx</span><br><span class="line"><span class="attr">prod_user</span>=xxxx</span><br><span class="line"><span class="attr">prod_path</span>=xxxx</span><br><span class="line"><span class="attr">prod_bak_path</span>=xxxx</span><br><span class="line"><span class="attr">prod_script</span>=build</span><br></pre></td></tr></table></figure></p><p>使用 <code>sh deploy.sh [prefix]</code></p><p>xxx_script 是在webpack中用不同的build 配置文件打包的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先要配置服务器ssh免密登录&lt;/p&gt;
&lt;p&gt;deploy.sh&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="fe" scheme="http://fengtianhe.cn/categories/fe/"/>
    
    
      <category term="项目发布" scheme="http://fengtianhe.cn/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"/>
    
      <category term="vue" scheme="http://fengtianhe.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Java工具函数-数组工具-转换成树结构.Md</title>
    <link href="http://fengtianhe.cn/Java%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7-%E8%BD%AC%E6%8D%A2%E6%88%90%E6%A0%91%E7%BB%93%E6%9E%84/"/>
    <id>http://fengtianhe.cn/Java工具函数-数组工具-转换成树结构/</id>
    <published>2019-03-15T11:25:21.000Z</published>
    <updated>2020-05-23T05:41:10.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java将原始List转为Tree"><a href="#Java将原始List转为Tree" class="headerlink" title="Java将原始List转为Tree"></a>Java将原始List转为Tree</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ListItem</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Integer id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> Integer pid;</span><br><span class="line">        <span class="keyword">private</span> List&lt;ListItem&gt; children;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListItem</span><span class="params">(Integer id, String name, Integer pid)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.pid = pid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;ListItem&gt; lists = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">1</span>, <span class="string">"部门A"</span>, <span class="number">0</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">2</span>, <span class="string">"部门b"</span>, <span class="number">0</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">3</span>, <span class="string">"部门v"</span>, <span class="number">1</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">4</span>, <span class="string">"部门d"</span>, <span class="number">1</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">5</span>, <span class="string">"部门e"</span>, <span class="number">2</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">6</span>, <span class="string">"部门f"</span>, <span class="number">3</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">7</span>, <span class="string">"部门g"</span>, <span class="number">2</span>));</span><br><span class="line">    lists.add(<span class="keyword">new</span> ListItem(<span class="number">8</span>, <span class="string">"部门h"</span>, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">    Map&lt;Integer, ListItem&gt; map = lists.stream().collect(Collectors.toMap(ListItem::getId, ListItem -&gt; ListItem));</span><br><span class="line">    List&lt;ListItem&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    lists.forEach(item -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (item.getPid() == <span class="number">0</span>) &#123;</span><br><span class="line">            res.add(item);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (map.get(item.getPid()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListItem parent = map.get(item.getPid());</span><br><span class="line">            parent.setChildren(CollectionUtils.isEmpty(parent.getChildren()) ? <span class="keyword">new</span> ArrayList&lt;&gt;() : parent.getChildren());</span><br><span class="line">            parent.getChildren().add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    System.out.println(res.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Java将原始List转为Tree&quot;&gt;&lt;a href=&quot;#Java将原始List转为Tree&quot; class=&quot;headerlink&quot; title=&quot;Java将原始List转为Tree&quot;&gt;&lt;/a&gt;Java将原始List转为Tree&lt;/h3&gt;&lt;figure class
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="Java" scheme="http://fengtianhe.cn/tags/Java/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="数组函数" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Java工具函数-数组工具-转换成树结构(优化篇).Md</title>
    <link href="http://fengtianhe.cn/Java%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%95%B0%E7%BB%84%E5%B7%A5%E5%85%B7-%E8%BD%AC%E6%8D%A2%E6%88%90%E6%A0%91%E7%BB%93%E6%9E%84(%E4%BC%98%E5%8C%96%E7%AF%87)/"/>
    <id>http://fengtianhe.cn/Java工具函数-数组工具-转换成树结构(优化篇)/</id>
    <published>2019-03-15T11:25:21.000Z</published>
    <updated>2020-12-07T09:10:20.230Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的文章提到利用红黑树将列表转为树结构，后来，我又利用反射机制将方法公共化</p><h3 id="Java将原始List转为Tree"><a href="#Java将原始List转为Tree" class="headerlink" title="Java将原始List转为Tree"></a>Java将原始List转为Tree</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String primaryKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String parentKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String childrenKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String superFlag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeHelper</span><span class="params">(String primaryKey, String parentKey, String childrenKey, String superFlag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.primaryKey = primaryKey;</span><br><span class="line">        <span class="keyword">this</span>.parentKey = parentKey;</span><br><span class="line">        <span class="keyword">this</span>.childrenKey = childrenKey;</span><br><span class="line">        <span class="keyword">this</span>.superFlag = superFlag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">covert</span><span class="params">(List&lt;T&gt; lists)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException </span>&#123;</span><br><span class="line">        Class clazz = lists.get(<span class="number">0</span>).getClass();</span><br><span class="line">        <span class="comment">// 获取到对应字段</span></span><br><span class="line">        Field field = clazz.getDeclaredField(<span class="keyword">this</span>.primaryKey);</span><br><span class="line">        Field parentField = clazz.getDeclaredField(<span class="keyword">this</span>.parentKey);</span><br><span class="line">        Field childListField = clazz.getDeclaredField(<span class="keyword">this</span>.childrenKey);</span><br><span class="line">        <span class="comment">// 使对应字段可操作</span></span><br><span class="line">        field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        parentField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        childListField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 转成map</span></span><br><span class="line">        Map&lt;String, T&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T t : lists) &#123;</span><br><span class="line">            map.put((String.valueOf(field.get(t))), t);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 利用红黑树组装树结构</span></span><br><span class="line">        List&lt;T&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (T item : lists) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((String.valueOf(parentField.get(item)).equals(<span class="keyword">this</span>.superFlag))) &#123;</span><br><span class="line">                res.add(item);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Object parent = map.get(String.valueOf(parentField.get(item)));</span><br><span class="line">            <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                List children =(List) childListField.get(parent);</span><br><span class="line">                <span class="keyword">if</span>(CollectionUtils.isEmpty(children))&#123;</span><br><span class="line">                    children = <span class="keyword">new</span> ArrayList();</span><br><span class="line">                &#125;</span><br><span class="line">                childListField.set(parent, children);</span><br><span class="line">                children.add(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchFieldException, IllegalAccessException </span>&#123;</span><br><span class="line">    List&lt;TreeItem&gt; items = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">1</span>, <span class="number">0</span>, <span class="string">"1"</span>));</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">2</span>, <span class="number">1</span>, <span class="string">"2"</span>));</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">3</span>, <span class="number">0</span>, <span class="string">"3"</span>));</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">4</span>, <span class="number">2</span>, <span class="string">"4"</span>));</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">5</span>, <span class="number">1</span>, <span class="string">"5"</span>));</span><br><span class="line">    items.add(<span class="keyword">new</span> TreeItem(<span class="number">6</span>, <span class="number">3</span>, <span class="string">"6"</span>));</span><br><span class="line"></span><br><span class="line">    TreeHelper treeHelper = <span class="keyword">new</span> TreeHelper(<span class="string">"id"</span>, <span class="string">"pid"</span>, <span class="string">"children"</span>, <span class="string">"0"</span>);</span><br><span class="line">    List&lt;TreeItem&gt; c = treeHelper.covert(items);</span><br><span class="line">    System.out.println(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer pid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> List&lt;TreeItem&gt; children;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TreeItem</span><span class="params">(Integer id, Integer pid, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPid</span><span class="params">(Integer pid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pid = pid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;TreeItem&gt; <span class="title">getChildren</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChildren</span><span class="params">(List&lt;TreeItem&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"TreeItem&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", pid="</span> + pid +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", children="</span> + children +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在之前的文章提到利用红黑树将列表转为树结构，后来，我又利用反射机制将方法公共化&lt;/p&gt;
&lt;h3 id=&quot;Java将原始List转为Tree&quot;&gt;&lt;a href=&quot;#Java将原始List转为Tree&quot; class=&quot;headerlink&quot; title=&quot;Java将原始List
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="Java" scheme="http://fengtianhe.cn/tags/Java/"/>
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="数组函数" scheme="http://fengtianhe.cn/tags/%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>PHP工具函数-时间工具-判断时间是否在同一周</title>
    <link href="http://fengtianhe.cn/PHP%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0-%E6%97%B6%E9%97%B4%E5%B7%A5%E5%85%B7-%E5%88%A4%E6%96%AD%E6%97%B6%E9%97%B4%E6%98%AF%E5%90%A6%E5%9C%A8%E5%90%8C%E4%B8%80%E5%91%A8/"/>
    <id>http://fengtianhe.cn/PHP工具函数-时间工具-判断时间是否在同一周/</id>
    <published>2019-03-15T11:25:21.000Z</published>
    <updated>2019-11-07T01:56:39.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PHP判断两个时间是否在同一周"><a href="#PHP判断两个时间是否在同一周" class="headerlink" title="PHP判断两个时间是否在同一周"></a>PHP判断两个时间是否在同一周</h3><blockquote><p>业务场景：<br>  公司需要获取上周的汇总数据，由于放到redis中需要判断数据是否过期或者可用</p></blockquote><p>想法：判断第一个时间的时间戳 是否是第二个时间所在周的时间戳的 区间内</p><blockquote><p>利用strtotime(‘monday’)方法取到下周一 strtotime(‘monday -7 day’) 则取到本周一<br>  利用strtotime(‘sunday’)方法取到本周日</p></blockquote><p>存在问题：由于php代码的每周第一天是从周日开始的 所以如果今天是周一的话 <code>strtotime(&#39;monday -7 day&#39;)</code> 获取的就是上周一<br>Fix: 利用date(‘w’) 判断今天是周一的话，开始时间就加一周</p><p>上完整代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">time_in_same_week</span><span class="params">($preDate, $afterDate)</span> </span>&#123;</span><br><span class="line">    $flag = <span class="keyword">false</span>;<span class="comment">//默认不是同一周</span></span><br><span class="line">    $preTime = strtotime($preDate);</span><br><span class="line">    $afterTime = strtotime($afterDate);</span><br><span class="line"></span><br><span class="line">    $week = date(<span class="string">'w'</span>, $afterTime);</span><br><span class="line">    <span class="comment">//        echo $week . PHP_EOL;</span></span><br><span class="line">    $mintime = strtotime(<span class="string">'monday -7 day'</span>, $afterTime) + ($week == <span class="number">1</span> ? <span class="number">7</span> * <span class="number">3600</span> * <span class="number">24</span> : <span class="number">0</span>);<span class="comment">//一周开始时间; 解决今天的下周一是今天(如果今天是周一就会出现这个情况)</span></span><br><span class="line">    <span class="comment">//        echo '一周开始时间'.date('Y-m-d', $mintime).PHP_EOL;</span></span><br><span class="line">    $maxtime = strtotime(<span class="string">'sunday'</span>, $afterTime);<span class="comment">//一周结束时间</span></span><br><span class="line">    <span class="comment">//        echo '一周结束时间'.date('Y-m-d', $maxtime).PHP_EOL;</span></span><br><span class="line">    <span class="keyword">if</span> ($preTime &gt;= $mintime &amp;&amp; $preTime &lt;= $maxtime) &#123;<span class="comment">//同一周</span></span><br><span class="line">        $flag = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PHP判断两个时间是否在同一周&quot;&gt;&lt;a href=&quot;#PHP判断两个时间是否在同一周&quot; class=&quot;headerlink&quot; title=&quot;PHP判断两个时间是否在同一周&quot;&gt;&lt;/a&gt;PHP判断两个时间是否在同一周&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;业务场景：
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="工具函数" scheme="http://fengtianhe.cn/tags/%E5%B7%A5%E5%85%B7%E5%87%BD%E6%95%B0/"/>
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="时间函数" scheme="http://fengtianhe.cn/tags/%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>分析Haproxy日志</title>
    <link href="http://fengtianhe.cn/%E5%88%86%E6%9E%90Haproxy%E6%97%A5%E5%BF%97/"/>
    <id>http://fengtianhe.cn/分析Haproxy日志/</id>
    <published>2019-03-05T11:23:33.000Z</published>
    <updated>2019-11-07T01:56:39.306Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我使用的是Ubuntu机器</p></blockquote><h3 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h3><ul><li>【可选】安装JDK <code>sudo apt install openjdk-8-jdk-headless</code>（如果本机有请跳过）（如果没有 使用java命令 ,系统会提示用什么命令安装）</li></ul><p><img src="/images/201903051953.jpg" alt="ubuntu 无 java 提示"></p><ul><li>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Elasticsearch OSS 版本</li><li><p>【可选】配置JAVA环境变量（如果本机有请跳过,就用jdk1.8 不要用其他版本）</p><pre><code>命令一：which java命令二：ls -lrt /usr/bin/java命令三：ls -lrt /etc/alternatives/java最后将会得出这样的目录 /usr/lib/jvm/java-8-openjdk-amd64(每个人不一样，以实际情况为准)</code></pre></li><li><p>【可选】配置环境变量，执行命令 vi /etc/profile；然后进入编辑模式，在文件的最后添加下面的配置</p><pre><code>JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jreCLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHPATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></pre></li><li><p>执行命令 source /etc/profile 使用环境变量生效</p></li><li><p>在 usr 下创建 elasticsearch 目录 <code>sudo mkdir /usr/elasticsearch</code></p></li><li><p>tar -zxvf 下载下来的 elasticsearch-oss-x.x.x.tar.gz 放到 /usr/elasticsearch 下</p></li><li><p>【可选】创建ES用户和组（创建elsearch用户组及elsearch用户），因为使用root用户执行ES程序，将会出现错误；所以这里需要创建单独的用户去执行ES 文件；命令如下（如果存在普通用户就不用新建了）</p><pre><code>命令一：groupadd elsearch命令二：useradd elsearch -g elsearch命令三：chown -R elsearch:elsearch /usr/elasticsearch  该命令是更改该文件夹下所属的用户组的权限</code></pre></li><li><p>在<code>/usr/elasticsearch</code>中创建ES数据文件和日志文件</p><pre><code>命令一：mkdir -p data (修改所属权限)命令二：mkdir -p logs (修改所属权限)</code></pre></li><li><p>修改 <code>/usr/elasticsearch/config/elasticsearch.yml</code> 文件 （可以使用默认）</p></li><li><p>使用 <code>/usr/elasticsearch/bin/elasticsearch -d</code> 用后台启动</p></li><li><p>测试是否启动成功</p></li></ul><p><img src="/images/201903060941.jpg" alt="测试elasticsearch是否启动成功"></p><hr><h3 id="安装Logstash"><a href="#安装Logstash" class="headerlink" title="安装Logstash"></a>安装Logstash</h3><blockquote><p>Logstash是一个开源的服务器端数据处理管道，可以同时从多个数据源获取数据，并对其进行转换，然后将其发送到你最喜欢的“存储”。（当然，我们最喜欢的是Elasticsearch）</p></blockquote><p><img src="/images/201903060941.jpg" alt="logstash 工作原理"></p><ul><li><p>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Logstash 并解压</p></li><li><p>配置logstash</p></li><li><p>在logstash下运行 <code>./bin/logstash -f 自定义配置文件路径</code> 启动logstash</p></li><li><p>tail 日志 显示Non-zero metrics in the last 30s字样就启动成功了</p></li></ul><p>ps: 无知的我一直在tail 生成的日志，其实已经写进去了，只不过没有日志，可能修改日志级别就好了</p><hr><h3 id="安装Filebeat"><a href="#安装Filebeat" class="headerlink" title="安装Filebeat"></a>安装Filebeat</h3><ul><li>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Filebeat OSS 并解压</li></ul><p>（使用<code>getconf LONG_BIT</code>查看ubuntu位数）</p><ul><li><p>修改yml配置文件，将output转为logstash的。(如果配置文件看着乱，可以自己再写一个 filebeat -e -c 配置文件路径)</p></li><li><p>启动对haproxy 和 logstash的支持</p><pre><code>./filebeat modules enable haproxy./filebeat modules enable logstash</code></pre></li></ul><hr><h3 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h3><ul><li><p>在<a href="https://www.elastic.co/downloads/past-releases">elastic.co</a>上下载 Kiana OSS 并解压</p></li><li><p>然后到kibana安装目录的config下，编辑kibana.yml配置文件，(可以使用默认)</p></li><li><p><code>./bin/kibana &amp;</code> 启动然后输入exit就后台启动了</p></li><li><p>浏览器 <code>127.0.0.1:5601</code> 打开kibana控制台</p></li></ul><hr><h3 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h3><p>GET 请求 elasticsearch服务器/_search 查看是否有数据</p><hr><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><h4 id="如何切换kibana控制台的数据源"><a href="#如何切换kibana控制台的数据源" class="headerlink" title="如何切换kibana控制台的数据源"></a>如何切换kibana控制台的数据源</h4><blockquote><p>二货的我用自带的测试数据打开了，在 左侧 Management -&gt; Index Patterns -&gt; create index pattern<br>输入index-name 下一步创建，再切回面板就好了</p></blockquote><h4 id="汉化Kibana界面"><a href="#汉化Kibana界面" class="headerlink" title="汉化Kibana界面"></a>汉化Kibana界面</h4><blockquote><p>奶奶的，不光二，英语还不好。算了 汉化吧</p></blockquote><pre><code>wget -c  https://codeload.github.com/anbai-inc/Kibana_Hanization/zip/master -O Kibana_Hanization-master.zip下载并解压执行汉化命令 `python main.py ~/kibana-6.6.1-linux-x86_64/`重启kibana(汉化只能解决部分问题，重要的还是学英语吧)</code></pre><hr><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我使用的是Ubuntu机器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装Elasticsearch&quot;&gt;&lt;a href=&quot;#安装Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;安装Elasticsearc
      
    
    </summary>
    
      <category term="server" scheme="http://fengtianhe.cn/categories/server/"/>
    
    
      <category term="Haproxy" scheme="http://fengtianhe.cn/tags/Haproxy/"/>
    
      <category term="Logstash" scheme="http://fengtianhe.cn/tags/Logstash/"/>
    
      <category term="Filebeat" scheme="http://fengtianhe.cn/tags/Filebeat/"/>
    
  </entry>
  
  <entry>
    <title>PHP扩展-Redis</title>
    <link href="http://fengtianhe.cn/PHP%E6%89%A9%E5%B1%95-Redis/"/>
    <id>http://fengtianhe.cn/PHP扩展-Redis/</id>
    <published>2019-03-04T01:39:23.000Z</published>
    <updated>2019-11-07T01:56:39.302Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h3><p>在<a href="https://redis.io/">redis.io</a>下载lts版本源码</p><p>编译源码<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf redis-xxxx.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> redis-xxxx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make PREFIX=/usr/<span class="built_in">local</span>/redis install</span></span><br></pre></td></tr></table></figure></p><p>配置文件<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /usr/<span class="built_in">local</span>/redis/etc/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp redis.conf /usr/<span class="built_in">local</span>/redis/etc/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/bin/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /usr/<span class="built_in">local</span>/redis/etc/redis.conf</span></span><br></pre></td></tr></table></figure></p><p>修改一下配置<br>redis以守护进程的方式运行<br>no表示不以守护进程的方式运行(会占用一个终端)<br><code>daemonize yes</code></p><hr><h3 id="安装php扩展"><a href="#安装php扩展" class="headerlink" title="安装php扩展"></a>安装php扩展</h3><p>我的服务器是php5.6 我选用的phpredis 是 2.2.8 版本<br>首先下载扩展<a href="http://pecl.php.net/package/redis">PECL</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf redis-2.2.8.tgz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> redis-2.2.8</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> phpize <span class="comment">#用phpize生成configure配置文件</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./configure --with-php-config=/usr/bin/php-config <span class="comment">#配置</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make  <span class="comment">#编译</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make install  <span class="comment">#安装</span></span></span><br></pre></td></tr></table></figure><h2 id="然后会提示一个目录，通过php-i-grep-php-ini-查找PHP配置文件，然后将redis-so添加到扩展列表中"><a href="#然后会提示一个目录，通过php-i-grep-php-ini-查找PHP配置文件，然后将redis-so添加到扩展列表中" class="headerlink" title="然后会提示一个目录，通过php -i | grep php.ini 查找PHP配置文件，然后将redis.so添加到扩展列表中"></a>然后会提示一个目录，通过<code>php -i | grep php.ini</code> 查找PHP配置文件，然后将redis.so添加到扩展列表中</h2><h3 id="应用php扩展"><a href="#应用php扩展" class="headerlink" title="应用php扩展"></a>应用php扩展</h3><h4 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h4><p>平滑重启apache(不会对当前启动的程序产生影响)<br><code>apachectl -k graceful</code></p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h4><p>Nginx 是通过php-fpm加载的扩展</p><p>php 5.3.3 以后的php-fpm 不再支持 php-fpm 以前具有的 /Data/apps/php7/sbin/php-fpm(start|stop|reload)等命令，所以不要再看这种老掉牙的命令了，需要使用信号控制</p><p>master进程可以理解以下信号</p><p>INT, TERM 立刻终止<br>QUIT 平滑终止<br>USR1 重新打开日志文件<br>USR2 平滑重载所有worker进程并重新载入配置和二进制模块</p><p>一个简单直接的重启方法：</p><p>先查看php-fpm的master进程号<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ ps aux|grep php-fpm</span><br><span class="line">root      1565  0.0  0.6 499908  6596 ?        Ss   Feb27   0:10 php-fpm: master process (/etc/php-fpm.conf)</span><br><span class="line">apache    1566  0.0  3.1 503588 32176 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1567  0.0  3.0 503552 31080 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1568  0.0  3.1 502880 31868 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1569  0.0  3.1 504372 32196 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1570  0.0  2.8 503556 28844 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    1963  0.0  3.0 503040 31192 ?        S    Feb27   0:03 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    5390  0.0  2.7 503540 28556 ?        S    Feb28   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    5657  0.0  2.8 503568 29400 ?        S    Mar01   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache    7421  0.0  2.6 503308 26968 ?        S    Mar01   0:02 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">root     23263  0.0  0.0 103264   844 pts/1    S+   11:28   0:00 grep php-fpm</span><br><span class="line"></span><br><span class="line">$ kill -USR2 1565 #重启php-fpm</span><br><span class="line">$ ps aux|grep php-fpm #重新看下进程号</span><br><span class="line">root     23275  0.0  0.6 499908  6560 ?        Ss   11:30   0:00 php-fpm: master process (/etc/php-fpm.conf)</span><br><span class="line">apache   23276  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23277  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23278  0.0  0.5 499908  5664 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23279  0.0  0.5 499908  5672 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">apache   23280  0.0  0.5 499908  5672 ?        S    11:30   0:00 php-fpm:<span class="built_in"> pool </span>www</span><br><span class="line">root     23282  0.0  0.0 103264   844 pts/1    S+   11:30   0:00 grep php-fpm</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装Redis&quot;&gt;&lt;a href=&quot;#安装Redis&quot; class=&quot;headerlink&quot; title=&quot;安装Redis&quot;&gt;&lt;/a&gt;安装Redis&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://redis.io/&quot;&gt;redis.io&lt;/a&gt;下载lts版本源码
      
    
    </summary>
    
      <category term="rd" scheme="http://fengtianhe.cn/categories/rd/"/>
    
    
      <category term="PHP" scheme="http://fengtianhe.cn/tags/PHP/"/>
    
      <category term="PHP扩展" scheme="http://fengtianhe.cn/tags/PHP%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
</feed>
