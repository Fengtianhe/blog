{"meta":{"title":"冯天鹤's Blog","subtitle":"「不忘初心方得始终」","description":"技术博客, 记录成长","author":"冯天鹤","url":"http://fengtianhe.cn"},"pages":[{"title":"About","date":"2018-03-06T09:22:43.000Z","updated":"2019-11-07T01:56:39.321Z","comments":true,"path":"about/index.html","permalink":"http://fengtianhe.cn/about/index.html","excerpt":"","text":"我是一个PHP程序猿 无奈，人生不如意十有八九。刚毕业我就就在我的职业方向上走叉劈了，走上了前端工程师的道路 但是在前端工程师的学习道路上并不是一帆风顺，由于公司缺少安卓工程师，并且也不想招安卓工程师，我又成为了安卓开发人员，诶！ 你们不要以为这就结束了，后端技术老大哥负伤，我担任了技术老大哥的左右手，从此， 我开始接触Java 学习，从不止步"},{"title":"友情链接","date":"2017-02-07T05:22:22.000Z","updated":"2019-11-07T01:56:39.490Z","comments":true,"path":"links/index.html","permalink":"http://fengtianhe.cn/links/index.html","excerpt":"","text":"此处不做网址导航，因此不接受以SEO为目的的友链。排序不分那啥… JS大法 阮一峰 友情链接 wuyanbin"},{"title":"标签云","date":"2017-02-04T07:37:12.000Z","updated":"2019-11-07T01:56:39.492Z","comments":true,"path":"tags/index.html","permalink":"http://fengtianhe.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"SpringCloud源码--SpringCloudConfig工作流程","slug":"SpringCloud源码-SpringCloudConfig工作流程","date":"2020-04-09T10:25:22.000Z","updated":"2020-04-09T10:25:22.600Z","comments":true,"path":"SpringCloud源码-SpringCloudConfig工作流程/","link":"","permalink":"http://fengtianhe.cn/SpringCloud源码-SpringCloudConfig工作流程/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"JS工具函数-Object工具.md","slug":"JS工具函数-Object工具","date":"2020-03-30T07:00:00.000Z","updated":"2020-03-30T06:58:54.932Z","comments":true,"path":"JS工具函数-Object工具/","link":"","permalink":"http://fengtianhe.cn/JS工具函数-Object工具/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162export default &#123; clone: function(object) &#123; return JSON.parse(JSON.stringify(object)); &#125;, /** * 返回对象的类型 * @param obj * @returns &#123;string&#125; */ toType: function(obj) &#123; return &#123;&#125;.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase(); &#125;, /** * param 将要转为URL参数字符串的对象 * key URL参数字符串的前缀 * encode true/false 是否进行URL编码,默认为true * * return URL参数字符串 */ parseParam(param, key, encode) &#123; if (param == null) return \"\"; var paramStr = \"\"; var t = typeof (param); if (t === \"string\" || t === \"number\" || t === \"boolean\") &#123; paramStr += \"&amp;\" + key + \"=\" + ((encode == null || encode) ? encodeURIComponent(param) : param); &#125; else &#123; for (var i in param) &#123; var k = key == null ? i : key + (param instanceof Array ? \"[\" + i + \"]\" : \".\" + i); paramStr += this.parseParam(param[i], k, encode); &#125; &#125; return paramStr; &#125;, /** * @author 冯天鹤 * @description 对象通过属性路径获取属性值 * @param obj example: &#123;user: &#123;name: '王二'&#125;&#125; * @param path example: user.name * @param strict * @returns &#123;*&#125; */ getPropByPath(obj, path, strict) &#123; let tempObj = obj; path = path.replace(/\\[(\\w+)\\]/g, \".$1\"); path = path.replace(/^\\./, \"\"); let keyArr = path.split(\".\"); let pathLen = keyArr.length; for (let i = 0; i &lt; pathLen; ++i) &#123; if (!tempObj &amp;&amp; !strict) break; let pathKey = keyArr[i]; if (tempObj[pathKey]) &#123; tempObj = tempObj[pathKey]; &#125; else &#123; if (strict) &#123; throw new Error(\"please transfer a valid prop path to form item!\"); &#125; break; &#125; &#125; return tempObj; &#125;&#125;;","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"JS","slug":"JS","permalink":"http://fengtianhe.cn/tags/JS/"},{"name":"工具类","slug":"工具类","permalink":"http://fengtianhe.cn/tags/工具类/"},{"name":"Object函数","slug":"Object函数","permalink":"http://fengtianhe.cn/tags/Object函数/"}]},{"title":"NodeJS-NodeSass安装下载binding.node过慢","slug":"NodeJS-NodeSass安装下载binding-node过慢","date":"2020-01-04T15:01:38.000Z","updated":"2020-03-30T06:50:38.561Z","comments":true,"path":"NodeJS-NodeSass安装下载binding-node过慢/","link":"","permalink":"http://fengtianhe.cn/NodeJS-NodeSass安装下载binding-node过慢/","excerpt":"","text":"在项目根目录下用这行命令：1node -p \"[process.platform, process.arch, process.versions.modules].join('-')\" 复制输出的结果，去 Release 列表 找到对应的版本，Ctrl+F 粘贴，找到那个文件，下载（必要的时候挂代理，浏览器下载通常都比 node 下载更快更稳定），然后文件存到一个稳定的路径，并复制路径 设置sass路径Windows:1set SASS_BINARY_PATH=D:/nodejs/.nodes/xxxxxxx_binding.node MacOS:1export SASS_BINARY_PATH=/Users/xxxx/xxxxxxx_binding.node 然后安装node-sass模块 npm i node-sass -D –verbose之后重新install就可以了","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"JS","slug":"JS","permalink":"http://fengtianhe.cn/tags/JS/"},{"name":"NodeJS","slug":"NodeJS","permalink":"http://fengtianhe.cn/tags/NodeJS/"},{"name":"node_modules","slug":"node-modules","permalink":"http://fengtianhe.cn/tags/node-modules/"},{"name":"node-sass","slug":"node-sass","permalink":"http://fengtianhe.cn/tags/node-sass/"}]},{"title":"JS工具函数-Cookie工具.md","slug":"JS工具函数-Cookie工具","date":"2020-01-03T02:00:00.000Z","updated":"2020-01-03T02:25:41.658Z","comments":true,"path":"JS工具函数-Cookie工具/","link":"","permalink":"http://fengtianhe.cn/JS工具函数-Cookie工具/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960export default &#123; /*** *读取指定的Cookie值 readCookie(\"id\"); *@param &#123;string&#125; cookieName Cookie名称 */ get: (cookieName) =&gt; &#123; var theCookie = \"\" + document.cookie; var ind = theCookie.indexOf(cookieName); if (ind == -1 || cookieName == \"\") return \"\"; var ind1 = theCookie.indexOf(\";\", ind); if (ind1 == -1) ind1 = theCookie.length; /* 读取Cookie值 */ return unescape(theCookie.substring(ind + cookieName.length + 1, ind1)); &#125;, /*** * 设置Cookie值 setCookie(\"id\",1); * @param &#123;string&#125; cookieName Cookie名称 * @param &#123;string&#125; cookieValue Cookie值 * @param &#123;number&#125; nDays Cookie过期天数 */ set: (cookieName, cookieValue) =&gt; &#123; /* 当前日期 */ var today = new Date(); /* Cookie过期时间 */ var expire = new Date(); /* 如果未设置nDays参数或者nDays为0，取默认值1 */ // if(nDays == null || nDays == 0) nDays = 1; /* 计算Cookie过期时间【 3600000 * 24 为一天】 */ expire.setTime(today.getTime() + 400000); // 5分钟 document.cookie = cookieName + \"=\" + escape(cookieValue) + \";expires=\" + expire.toGMTString(); &#125;, /*** * 删除cookie中指定变量函数 * @param &#123;string&#125; $name Cookie名称 */ delete: ($name) =&gt; &#123; var myDate = new Date(); myDate.setTime(-1000);// 设置时间 document.cookie = $name + \"=''; expires=\" + myDate.toGMTString(); &#125;, /*** * 删除cookie中所有定变量函数 * @param &#123;string&#125; cookieName Cookie名称 * @param &#123;string&#125; cookieValue Cookie值 * @param &#123;number&#125; nDays Cookie过期天数 */ clear: () =&gt; &#123; var myDate = new Date(); myDate.setTime(-1000);// 设置时间 var data = document.cookie; var dataArray = data.split(\"; \"); for (var i = 0; i &lt; dataArray.length; i++) &#123; var varName = dataArray[i].split(\"=\"); document.cookie = varName[0] + \"=''; expires=\" + myDate.toGMTString(); &#125; &#125;&#125;;","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"JS","slug":"JS","permalink":"http://fengtianhe.cn/tags/JS/"},{"name":"工具类","slug":"工具类","permalink":"http://fengtianhe.cn/tags/工具类/"},{"name":"Cookie函数","slug":"Cookie函数","permalink":"http://fengtianhe.cn/tags/Cookie函数/"}]},{"title":"Javascript Text Different","slug":"Javascript-textDifferent","date":"2019-11-07T02:18:37.000Z","updated":"2020-01-03T02:05:54.065Z","comments":true,"path":"Javascript-textDifferent/","link":"","permalink":"http://fengtianhe.cn/Javascript-textDifferent/","excerpt":"","text":"实现工商信息变更样式 效果图： 12345678910111213141516171819 function diff()&#123; let oldStr = '技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售新鲜蔬菜、新鲜水果、文化用品、工艺品、日用品、厨房用具；零售电子产品。依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。' let newStr = '销售食品。技术开发、技术推广、技术咨询、技术服务；软件开发；组织文化艺术交流活动（不含演出）；承办展览展示；销售文化用品、工艺品、日用品、厨房用具、销售食品以及依法须经批准的项目，经相关部门批准后依批准的内容开展经营活动。' // 通过符号分割成数组 let oldStrArr = oldStr.split(/[、；，。]/) let diffNewStr = newStr // 将完全相同的部分替换掉 for(let key of oldStrArr)&#123; diffNewStr = diffNewStr.replace(key, '') &#125; // 去除新字符串中替换掉的空字符串 let diffNewArr = diffNewStr.split(/[、；，。]/).filter(item =&gt; &#123;return !!item&#125;) let strWithDiff = '' // 将新的字符串中不同的部分标红 for(let addStr of diffNewArr)&#123; strWithDiff = newStr.replace(addStr, `&lt;span style=\"color:red\"&gt;$&#123;addStr&#125;&lt;/span&gt;`) &#125; return strWithDiff&#125;","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://fengtianhe.cn/tags/Javascript/"}]},{"title":"ReactNative-组件React-Native-Camera","slug":"ReactNative-组件react-native-camera","date":"2019-09-09T03:28:27.000Z","updated":"2019-11-07T01:56:39.303Z","comments":true,"path":"ReactNative-组件react-native-camera/","link":"","permalink":"http://fengtianhe.cn/ReactNative-组件react-native-camera/","excerpt":"","text":"ReactNative版本 &lt; 0.60.01.1、安装 `react-native-camera@2.9.0` 版本将 missingDimensionStrategy &#39;react-native-camera&#39;, &#39;general&#39; 加入到 android/app/build.gradle 中12345678android &#123; ... defaultConfig &#123; ... missingDimensionStrategy 'react-native-camera', 'mlkit' &#125; ...&#125; 1.2、修改 android/build.gradle 中的 classpath1234567891011121314151617181920212223242526272829303132buildscript &#123; ext &#123; buildToolsVersion = \"28.0.3\" minSdkVersion = 16 compileSdkVersion = 28 targetSdkVersion = 28 supportLibVersion = \"28.0.0\" &#125; repositories &#123; google() jcenter() &#125; dependencies &#123; // 注意这里的版本 classpath('com.android.tools.build:gradle:3.3.0') // NOTE: Do not place your application dependencies here; they belong // in the individual module build.gradle files &#125;&#125;allprojects &#123; repositories &#123; mavenLocal() google() jcenter() maven &#123; // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm url \"$rootDir/../node_modules/react-native/android\" &#125; &#125;&#125; 1.3、修改 android/gradle/wrapper/gradle-wrapper.properties 中的 gradle version1distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.1-all.zip 1.4、修改打包配置 app/build.gradle123456android &#123; ... packagingOptions &#123; exclude 'META-INF/proguard/androidx-annotations.pro' &#125;&#125; 使用react-native-camera扫码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147import React from 'react'import &#123;RNCamera&#125; from \"react-native-camera\";import &#123;Animated, Easing, Modal, Platform, StyleSheet, Text, Vibration, View&#125; from 'react-native'import PropType from 'prop-types'var Sound = require('react-native-sound');Sound.setCategory('Playback');class Scanner extends React.Component &#123; static propTypes = &#123; visible: PropType.bool.isRequired, onClose: PropType.func.isRequired, onScanSuccess: PropType.func &#125; constructor (props) &#123; super(props); this.state = &#123; moveAnim: new Animated.Value(0), code: '' &#125;; &#125; componentDidMount () &#123; this.startAnimation(); &#125; startAnimation = () =&gt; &#123; this.state.moveAnim.setValue(0); Animated.timing( this.state.moveAnim, &#123; toValue: -200, duration: 5000, easing: Easing.linear &#125; ).start(() =&gt; this.startAnimation()); &#125;; // 识别二维码 onBarCodeRead = (result) =&gt; &#123; const &#123;data&#125; = result; if (data &amp;&amp; !this.state.code) &#123; this.setState(&#123;code: data&#125;) // 扫码提示音 var whoosh = new Sound('scanner.mp3', Sound.MAIN_BUNDLE, (error) =&gt; &#123; if (error) &#123; console.log('failed to load the sound', error); return; &#125; // loaded successfully console.log('duration in seconds: ' + whoosh.getDuration() + 'number of channels: ' + whoosh.getNumberOfChannels()); // Play the sound with an onEnd callback whoosh.play((success) =&gt; &#123; if (success) &#123; whoosh.pause() console.log('scan qr result =&gt; ', data) this.props.onScanSuccess &amp;&amp; this.props.onScanSuccess(data) &#125; else &#123; console.log('playback failed due to audio decoding errors'); &#125; &#125;); &#125;); whoosh.setNumberOfLoops(1); whoosh.release(); //手机振动 if (Platform.OS === 'ios') &#123; Vibration.vibrate(100, false) &#125; else &#123; Vibration.vibrate([0, 100], false) &#125; &#125; &#125;; render () &#123; return ( &lt;Modal visible=&#123;this.props.visible&#125; onRequestClose=&#123;this.props.onClose&#125; &gt; &lt;View style=&#123;styles.container&#125;&gt; &lt;RNCamera ref=&#123;ref =&gt; &#123; this.camera = ref; &#125;&#125; style=&#123;styles.preview&#125; type=&#123;RNCamera.Constants.Type.back&#125; flashMode=&#123;RNCamera.Constants.FlashMode.on&#125; onBarCodeRead=&#123;this.onBarCodeRead&#125; &gt; &lt;View style=&#123;styles.rectangleContainer&#125;&gt; &lt;View style=&#123;styles.rectangle&#125;/&gt; &lt;Animated.View style=&#123;[ styles.border, &#123;transform: [&#123;translateY: this.state.moveAnim&#125;]&#125;]&#125;/&gt; &lt;Text style=&#123;styles.rectangleText&#125;&gt;将二维码/条码放入框内，即可自动扫描&lt;/Text&gt; &lt;/View&gt; &lt;/RNCamera&gt; &lt;/View&gt; &lt;/Modal&gt; ); &#125;&#125;const styles = StyleSheet.create(&#123; container: &#123; flex: 1, flexDirection: 'row', width: '100%', height: '100%' &#125;, preview: &#123; flex: 1, justifyContent: 'flex-end', alignItems: 'center' &#125;, rectangleContainer: &#123; flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'transparent' &#125;, rectangle: &#123; height: 200, width: 200, borderWidth: 1, borderColor: '#00FF00', backgroundColor: 'transparent' &#125;, rectangleText: &#123; flex: 0, color: '#fff', marginTop: 10 &#125;, border: &#123; flex: 0, width: 200, height: 2, backgroundColor: '#00FF00', &#125;&#125;);export default Scanner","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"ReactNative","slug":"ReactNative","permalink":"http://fengtianhe.cn/tags/ReactNative/"},{"name":"node_modules","slug":"node-modules","permalink":"http://fengtianhe.cn/tags/node-modules/"}]},{"title":"PHP-Composer国内镜像","slug":"PHP-Composer国内镜像","date":"2019-08-14T03:31:26.000Z","updated":"2019-11-07T01:56:39.286Z","comments":true,"path":"PHP-Composer国内镜像/","link":"","permalink":"http://fengtianhe.cn/PHP-Composer国内镜像/","excerpt":"","text":"加速原理 Composer 安装时候会向国外的 Packagist 服务器发送请求，因为众所周知的原因，国内请求国外服务器，有时会出现不稳定甚至不可用的情况。 镜像加速就是把国外的数据缓存到国内的服务器上，Composer 客户端只需配置服务器为国内的服务器，即可从国内服务器上下载，稳定性会有很高的提升。 要点一：全量与非全量镜像 Composer 安装扩展包的时候，一般会发起两种请求： JSON 请求 —— 扩展包元信息，包括 zip 包的下载链接；Zip 包请求 —— 扩展包源码压缩包。全量镜像指的是以上两种请求都使用国内服务器加速。而非全量服务器一般只缓存 JSON 数据。 要点二、更新时间 当一个 PHP 扩展包从 GitHub 上发布新版本的时候，Packagist.org 上会接收到回调并记录新版本的信息。与 GitHub 的回调相比，国内镜像只能通过主动请求 Packagist.org 的方式来获取更新的扩展包版本。 更新时间指的是国内镜像服务器更新请求的频率，意味着当你在 GitHub 上发布了新版本，此新版本需要多长时间才能在国内的镜像服务器上出现。 故更新时间越短越好。 阿里云 Composer 全量镜像（推荐） 镜像类型：全量镜像更新时间：1 分钟镜像地址：https://mirrors.aliyun.com/composer/官方地址：https://developer.aliyun.com/composer镜像说明：阿里云 CDN 加速，更新速度快，推荐使用 安畅网络镜像 镜像类型：全量镜像更新时间：1 分钟镜像地址：https://php.cnpkg.org官方地址：https://php.cnpkg.org/镜像说明：此 Composer 镜像由安畅网络赞助，目前支持元数据、下载包全量代理。 交通大学镜像 镜像类型：非全量镜像镜像地址：https://packagist.mirrors.sjtug.sjtu.edu.c...\\官方地址：https://mirrors.sjtug.sjtu.edu.cn/packagis...\\镜像说明：上海交通大学提供的 composer 镜像，稳定、快速、现代的镜像服务，推荐使用。 Laravel China 镜像（deprecated） 镜像类型：全量镜像更新时间：10 分钟镜像地址：https://packagist.laravel-china.org官方地址：镜像详情镜像说明：Laravel China 社区镜像，将于 2019 年 9 月 4 号停用。详见：博客：\bLaravel China 镜像完成历史使命，将于两个月后停用","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://fengtianhe.cn/tags/PHP/"},{"name":"Composer","slug":"Composer","permalink":"http://fengtianhe.cn/tags/Composer/"}]},{"title":"PHP工具函数-图片工具-生成微信分享图片","slug":"PHP工具函数-图片工具-生成微信分享图片","date":"2019-08-13T11:45:06.000Z","updated":"2019-11-07T01:56:39.288Z","comments":true,"path":"PHP工具函数-图片工具-生成微信分享图片/","link":"","permalink":"http://fengtianhe.cn/PHP工具函数-图片工具-生成微信分享图片/","excerpt":"","text":"先上效果图 用到的函数getimagesize()imagecreatetruecolor()imagecreatefromjpeg()imagecopyresized()imagecreatefrompng()imagealphablending()imagesavealpha()imagecopy()imagecolorallocate()imagettftext() 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162/** * 获取远程图片 * @param $file * @param $from */function get_file($file, $from) &#123; file_put_contents(sys_get_temp_dir() . \"/\" . $file, file_get_contents($from));&#125;/** * 合成图片 */public function test_merge_image() &#123; // 将两个远程的图片存到本地临时文件夹 $this-&gt;get_file('egg', 'https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'); $this-&gt;get_file('date', 'http://cm-images.cainiaoshicai.cn/wxminiapp/image/pricecontainer.png'); $bannerimg = sys_get_temp_dir() . '/egg'; $bottom = sys_get_temp_dir() . '/date'; // 获取图片原式 list($width, $height) = getimagesize($bannerimg); // 创建微信5:4的画布 $thumb = imagecreatetruecolor(800, 640); $image_1 = imagecreatefromjpeg($bannerimg); // 改变背景图大小 并画到画布上 imagecopyresized($thumb, $image_1, 0, 0, 0, 0, 800, 640, $width, $height); $image_2 = imagecreatefrompng($bottom); imagealphablending($thumb, true); imagesavealpha($thumb, true); // 将底部图片 放到图片上 imagecopy($thumb, $image_2, 0, 0, 0, 160, 800, 800); $textColor = imagecolorallocate($thumb, 255, 255, 255); $black = imagecolorallocate($thumb, 0, 0, 0); // 往图片上写文字 *.otf *.ttf 都是字体文件 imagettftext($thumb, 40, 0, 40, 600, $textColor, sys_get_temp_dir() . 'a.otf', '￥'); imagettftext($thumb, 60, 0, 90, 600, $textColor, sys_get_temp_dir() . 'b.ttf', '23.50'); imagettftext($thumb, 30, 0, 330, 596, $textColor, sys_get_temp_dir() . 'a.otf', '￥' . number_format('23.50' * 1.2, 2)); imagettftext($thumb, 30, 0, 335, 592, $textColor, sys_get_temp_dir() . 'a.otf', '————'); imagettftext($thumb, 30, 0, 570, 600, $black, sys_get_temp_dir() . 'a.otf', '销量20076'); // 输出图片格式的响应 header('Content-type: image/png;charset=utf-8'); // 生成图片 第二个参数可以传本地路径 imagepng($thumb); // 销毁图片 imagedestroy($thumb);&#125;/** * 获取图片拓展名 */public function test_image_extension() &#123; $this-&gt;autoRender = false; print_r(getimagesize('https://goods-image.qiniu.cainiaoshicai.cn/Fg1pPDcuBpeSqA1L7OOyIjY4b470'));&#125;","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://fengtianhe.cn/tags/PHP/"},{"name":"工具函数","slug":"工具函数","permalink":"http://fengtianhe.cn/tags/工具函数/"},{"name":"图片函数","slug":"图片函数","permalink":"http://fengtianhe.cn/tags/图片函数/"}]},{"title":"Android-自动编译版本号","slug":"Android-自动编译版本号","date":"2019-07-25T07:28:48.000Z","updated":"2019-11-07T01:56:39.277Z","comments":true,"path":"Android-自动编译版本号/","link":"","permalink":"http://fengtianhe.cn/Android-自动编译版本号/","excerpt":"","text":"又开始总结搬砖经验了:在使用ReactNative开发App的时候，在编译时总忘记修改版本号，懒惰的我又开始考虑使用脚本解决我的问题😈 首先我们要看下版本号在哪？ReactNative在编译的时候会读取{项目目录}/android/app/build.gradle下的defaultConfig1234567891011android &#123; ... defaultConfig &#123; applicationId \"com.xxxx\" minSdkVersion rootProject.ext.minSdkVersion targetSdkVersion rootProject.ext.targetSdkVersion versionCode 1 versionName '1.0' &#125; ...&#125; 我们在每次编译的时候 都要修改versionCode和versionName懒惰得我找了度娘，大家一致认为使用git tag 和 git commit count来自动化版本号 步骤定义获取版本号方法在{项目目录}/android/app/build.gradle中android上方定义方法(前提是当前项目有git tag)123456789101112131415161718def getSelfDefinedVersion(type) &#123; def cmd = 'git describe --tags' def gitTag = cmd.execute().text.trim() Process process = \"git rev-list --count HEAD\".execute() process.waitFor() int commitCount = process.getText().toInteger() if (\"code\".equals(type)) &#123; return commitCount &#125; else if (\"name\".equals(type)) &#123; String today = new Date().format(\"yyMMdd\") process = \"git describe --always\".execute() process.waitFor() String sha1 = process.getText().trim() return \"$gitTag.$commitCount.$today.$sha1\" &#125;&#125; 使用函数获取版本号1234567891011android &#123; ... defaultConfig &#123; applicationId \"com.xxxx\" minSdkVersion rootProject.ext.minSdkVersion targetSdkVersion rootProject.ext.targetSdkVersion versionCode getSelfDefinedVersion('code') // 改这里 versionName getSelfDefinedVersion('name') // 改这里 &#125; ...&#125; 修改输出文件名12345678910android.applicationVariants.all &#123; variant -&gt; variant.outputs.all &#123; output -&gt; def outputFile = output.outputFile if (outputFile != null &amp;&amp; outputFile.name.endsWith('.apk')) &#123; //这里修改apk文件名 def fileName = \"xxxxx-$&#123;defaultConfig.versionCode&#125;-$&#123;defaultConfig.versionName&#125;.apk\" outputFileName = fileName &#125; &#125;&#125; 编译结果在android/app/build/generated/source/buildConfig/release/com/xxx/BuildConfig.java12345678public final class BuildConfig &#123; public static final boolean DEBUG = false; public static final String APPLICATION_ID = \"com.cnmanager\"; public static final String BUILD_TYPE = \"release\"; public static final String FLAVOR = \"\"; public static final int VERSION_CODE = 15; public static final String VERSION_NAME = \"v1.0.15.190725.5487385\";&#125; 在有大版本更新的时候需要改git tag所以我又写了个shell脚本来确认修改git tag12345678910111213141516171819202122232425#!/usr/bin/env bashcurrGitTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)echo \"当前tag $currGitTag\"echo '是否有大版本变更？(y/n)(默认：n):'read USER_CONFIRM_VERSIONif [[ \"$USER_CONFIRM_VERSION\" = \"y\" ]] || [[ \"$USER_CONFIRM_VERSION\" = \"Y\" ]] || [[ -z \"$USER_CONFIRM_VERSION\" ]];then echo \"请输入git tag版本\" read USER_INPUT_TAG git tag $&#123;USER_INPUT_TAG&#125; git push --tagsficommitCount=`git rev-list --count HEAD`latestTag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)currDate=`date +%y%m%d`#gitShort=`git describe --always`versionName=\"$latestTag.$commitCount.$currDate\"echo \"编译版本为：$versionName\"read CONFIRMcd android &amp;&amp; ./gradlew assembleRelease","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://fengtianhe.cn/tags/项目发布/"},{"name":"ReactNative","slug":"ReactNative","permalink":"http://fengtianhe.cn/tags/ReactNative/"},{"name":"Android","slug":"Android","permalink":"http://fengtianhe.cn/tags/Android/"}]},{"title":"小程序-贝塞尔曲线加入购物车动效","slug":"小程序-贝塞尔曲线加入购物车动效","date":"2019-07-13T07:53:24.000Z","updated":"2019-11-07T01:56:39.309Z","comments":true,"path":"小程序-贝塞尔曲线加入购物车动效/","link":"","permalink":"http://fengtianhe.cn/小程序-贝塞尔曲线加入购物车动效/","excerpt":"","text":"首先上个效果图 在工具目录下创建算法文件 /utils/bezier.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748module.exports = &#123; /** * 贝塞尔曲线 * @param sx 起始点x坐标 * @param sy 起始点y坐标 * @param cx 控制点x坐标 * @param cy 控制点y坐标 * @param ex 结束点x坐标 * @param ey 结束点y坐标 * @param part 将起始点到控制点的线段分成的份数，数值越高，计算出的曲线越精确 * @return 贝塞尔曲线坐标 */ bezier: function (points, part) &#123; let sx = points[0]['x']; let sy = points[0]['y']; let cx = points[1]['x']; let cy = points[1]['y']; let ex = points[2]['x']; let ey = points[2]['y']; var bezier_points = []; // 起始点到控制点的x和y每次的增量 var changeX1 = (cx - sx) / part; var changeY1 = (cy - sy) / part; // 控制点到结束点的x和y每次的增量 var changeX2 = (ex - cx) / part; var changeY2 = (ey - cy) / part; //循环计算 for (var i = 0; i &lt;= part; i++) &#123; // 计算两个动点的坐标 var qx1 = sx + changeX1 * i; var qy1 = sy + changeY1 * i; var qx2 = cx + changeX2 * i; var qy2 = cy + changeY2 * i; // 计算得到此时的一个贝塞尔曲线上的点 var lastX = qx1 + (qx2 - qx1) * i / part; var lastY = qy1 + (qy2 - qy1) * i / part; // 保存点坐标 var point = &#123;&#125;; point['x'] = lastX; point['y'] = lastY; bezier_points.push(point); &#125; //console.log(bezier_points) return &#123; 'bezier_points': bezier_points &#125;; &#125;&#125; 在使用的页面中 定义 小圆点1234567891011121314&lt;!-- 加入购物车动态小图标 --&gt;&lt;view class=\"good_box\" hidden=\"&#123;&#123;hide_good_box&#125;&#125;\" style=\"left: &#123;&#123;bus_x&#125;&#125;px; top: &#123;&#123;bus_y&#125;&#125;px;\"&gt;&lt;/view&gt;.good_box &#123;width: 30rpx;height: 30rpx;position: fixed;border-radius: 50%;overflow: hidden;left: 50%;top: 50%;z-index: 99;background: #b02c41;&#125; 在js文件中定义data123hide_good_box: true,bus_x: 0,bus_y: 0 点击事件 bindtap 执行 touchOnGoods 就可以12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455touchOnGoods: function(e) &#123; // 如果good_box正在运动 if (!this.data.hide_good_box) return; this.finger = &#123;&#125;; // 运动的终点位置 this.busPos = &#123; x: 337, y: 527 &#125;; let topPoint = &#123;&#125;; this.finger['x'] = e.touches[\"0\"].clientX; this.finger['y'] = e.touches[\"0\"].clientY; console.log('finger =&gt; ', this.finger) if (this.finger['y'] &lt; this.busPos['y']) &#123; topPoint['y'] = this.finger['y'] - 150; &#125; else &#123; topPoint['y'] = this.busPos['y'] - 150; &#125; topPoint['x'] = Math.abs(this.finger['x'] - this.busPos['x']) / 2; console.log('top point =&gt; ', topPoint) if (this.finger['x'] &gt; this.busPos['x']) &#123; topPoint['x'] = (this.finger['x'] - this.busPos['x']) / 2 + this.busPos['x']; &#125; else &#123; topPoint['x'] = (this.busPos['x'] - this.finger['x']) / 2 + this.finger['x']; &#125; console.log('bus point =&gt; ', this.busPos) this.linePos = bezier.bezier([this.finger, topPoint, this.busPos], 20); this.startAnimation(); &#125;, startAnimation: function() &#123; var index = 0, that = this, bezier_points = that.linePos['bezier_points'], len = bezier_points.length - 1; this.setData(&#123; hide_good_box: false, bus_x: that.finger['x'], bus_y: that.finger['y'] &#125;) this.timer = setInterval(function() &#123; index++; that.setData(&#123; bus_x: bezier_points[index]['x'], bus_y: bezier_points[index]['y'] &#125;) if (index &gt;= len) &#123; clearInterval(that.timer); that.setData(&#123; hide_good_box: true, &#125;) &#125; &#125;, 20); &#125; 最后记得在onHide中销毁定时器this.timer","categories":[{"name":"wxminiprogram","slug":"wxminiprogram","permalink":"http://fengtianhe.cn/categories/wxminiprogram/"}],"tags":[{"name":"小程序","slug":"小程序","permalink":"http://fengtianhe.cn/tags/小程序/"},{"name":"特效","slug":"特效","permalink":"http://fengtianhe.cn/tags/特效/"}]},{"title":"PHP工具函数-数组工具-多字段分组","slug":"PHP工具函数-数组工具-多字段分组","date":"2019-03-29T10:08:35.000Z","updated":"2019-11-07T01:56:39.289Z","comments":true,"path":"PHP工具函数-数组工具-多字段分组/","link":"","permalink":"http://fengtianhe.cn/PHP工具函数-数组工具-多字段分组/","excerpt":"","text":"12345678910111213141516171819202122function array_group_by($arr, $key) &#123; if (empty($arr)) &#123; return []; &#125; $grouped = []; foreach ($arr as $value) &#123; $grouped[$value[$key]][] = $value; &#125; // Recursively build a nested grouping if more parameters are supplied // Each grouped array value is grouped according to the next sequential key if (func_num_args() &gt; 2) &#123; $args = func_get_args(); foreach ($grouped as $key =&gt; $value) &#123; $parms = array_merge([$value], array_slice($args, 2, func_num_args())); $grouped[$key] = call_user_func_array('array_group_by', $parms); // 上面是当前方法作为全局方法使用，下面是吧方法写在类中的使用 详见 call_user_func_array() // $grouped[$key] = call_user_func_array([$this, 'array_group_by'], $parms); &#125; &#125; return $grouped; &#125;","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://fengtianhe.cn/tags/PHP/"},{"name":"工具函数","slug":"工具函数","permalink":"http://fengtianhe.cn/tags/工具函数/"},{"name":"数组函数","slug":"数组函数","permalink":"http://fengtianhe.cn/tags/数组函数/"}]},{"title":"Vue 项目部署","slug":"Vue-项目部署","date":"2019-03-26T10:55:36.000Z","updated":"2019-11-07T01:56:39.305Z","comments":true,"path":"Vue-项目部署/","link":"","permalink":"http://fengtianhe.cn/Vue-项目部署/","excerpt":"","text":"首先要配置服务器ssh免密登录 deploy.sh1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#!/bin/sh#获取环境名env=''if [ x$1 != x ];then env=$1else env='prod'fi#获取当前分支名curr_branch=`git symbolic-ref --short -q HEAD`echo '当前工作分支 =&gt; '$&#123;curr_branch&#125;'\\n'echo '读取配置文件:'deploy_branch=`sed '/^'$&#123;env&#125;_branch'=/!d;s/.*=//' deploy.conf`deploy_host=`sed '/^'$&#123;env&#125;_host'=/!d;s/.*=//' deploy.conf`deploy_port=`sed '/^'$&#123;env&#125;_port'=/!d;s/.*=//' deploy.conf`deploy_user=`sed '/^'$&#123;env&#125;_user'=/!d;s/.*=//' deploy.conf`deploy_path=`sed '/^'$&#123;env&#125;_path'=/!d;s/.*=//' deploy.conf`deploy_bak_path=`sed '/^'$&#123;env&#125;_bak_path'=/!d;s/.*=//' deploy.conf`deploy_script=`sed '/^'$&#123;env&#125;_script'=/!d;s/.*=//' deploy.conf`echo '分支 =&gt; '$&#123;deploy_branch&#125;echo '地址 =&gt; '$&#123;deploy_host&#125;echo '端口 =&gt; '$&#123;deploy_port&#125;echo '用户 =&gt; '$&#123;deploy_user&#125;echo '路径 =&gt; '$&#123;deploy_path&#125;echo '备份路径 =&gt; '$&#123;deploy_bak_path&#125;echo '脚本 =&gt; '$&#123;deploy_script&#125;echo '\\n'echo '储存当前修改'git stashecho '\\n'echo '切换到需发布的分支 =&gt; '$&#123;deploy_branch&#125;git checkout $deploy_branchecho '\\n'echo '编译项目'npm run $&#123;deploy_script&#125;echo '\\n'echo '备份老版本'curr_datetime=`date +%Y%m%d%H%M%S`ssh $&#123;deploy_user&#125;@$&#123;deploy_host&#125; -p $&#123;deploy_port&#125; \"mv $deploy_path $deploy_bak_path/bak_$curr_datetime\"echo '上传新版本'scp -P $&#123;deploy_port&#125; -r ./dist/ $&#123;deploy_user&#125;@$&#123;deploy_host&#125;:$&#123;deploy_path&#125;echo '\\n'echo '切回工作分支 =&gt; '$&#123;curr_branch&#125;git checkout $curr_branchecho '\\n'echo '释放修改'git stash popecho '\\n'echo '部署成功' deploy.conf12345678910111213141516171819202122232425262728alpha_branch=alphaalpha_host=xxxxalpha_port=xxxxalpha_user=xxxxalpha_path=xxxxxalpha_bak_path=xxxxxalpha_script=build_alphatest_branch=测试环境分支名test_host=测试环境机器iptest_user=测试环境机器用户test_path=测试环境项目路径preview_branch=previewpreview_host=xxxxpreview_port=xxxxpreview_user=xxxxpreview_path=xxxxpreview_bak_path=xxxxpreview_script=build_previewprod_branch=masterprod_host=xxxxprod_port=xxxxprod_user=xxxxprod_path=xxxxprod_bak_path=xxxxprod_script=build 使用 sh deploy.sh [prefix] xxx_script 是在webpack中用不同的build 配置文件打包的","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://fengtianhe.cn/tags/项目发布/"},{"name":"vue","slug":"vue","permalink":"http://fengtianhe.cn/tags/vue/"}]},{"title":"PHP工具函数-时间工具-判断时间是否在同一周","slug":"PHP工具函数-时间工具-判断时间是否在同一周","date":"2019-03-15T11:25:21.000Z","updated":"2019-11-07T01:56:39.290Z","comments":true,"path":"PHP工具函数-时间工具-判断时间是否在同一周/","link":"","permalink":"http://fengtianhe.cn/PHP工具函数-时间工具-判断时间是否在同一周/","excerpt":"","text":"PHP判断两个时间是否在同一周 业务场景： 公司需要获取上周的汇总数据，由于放到redis中需要判断数据是否过期或者可用 想法：判断第一个时间的时间戳 是否是第二个时间所在周的时间戳的 区间内 利用strtotime(‘monday’)方法取到下周一 strtotime(‘monday -7 day’) 则取到本周一 利用strtotime(‘sunday’)方法取到本周日 存在问题：由于php代码的每周第一天是从周日开始的 所以如果今天是周一的话 strtotime(&#39;monday -7 day&#39;) 获取的就是上周一Fix: 利用date(‘w’) 判断今天是周一的话，开始时间就加一周 上完整代码 12345678910111213141516public function time_in_same_week($preDate, $afterDate) &#123; $flag = false;//默认不是同一周 $preTime = strtotime($preDate); $afterTime = strtotime($afterDate); $week = date('w', $afterTime); // echo $week . PHP_EOL; $mintime = strtotime('monday -7 day', $afterTime) + ($week == 1 ? 7 * 3600 * 24 : 0);//一周开始时间; 解决今天的下周一是今天(如果今天是周一就会出现这个情况) // echo '一周开始时间'.date('Y-m-d', $mintime).PHP_EOL; $maxtime = strtotime('sunday', $afterTime);//一周结束时间 // echo '一周结束时间'.date('Y-m-d', $maxtime).PHP_EOL; if ($preTime &gt;= $mintime &amp;&amp; $preTime &lt;= $maxtime) &#123;//同一周 $flag = true; &#125; return $flag;&#125;","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://fengtianhe.cn/tags/PHP/"},{"name":"工具函数","slug":"工具函数","permalink":"http://fengtianhe.cn/tags/工具函数/"},{"name":"时间函数","slug":"时间函数","permalink":"http://fengtianhe.cn/tags/时间函数/"}]},{"title":"分析Haproxy日志","slug":"分析Haproxy日志","date":"2019-03-05T11:23:33.000Z","updated":"2019-11-07T01:56:39.306Z","comments":true,"path":"分析Haproxy日志/","link":"","permalink":"http://fengtianhe.cn/分析Haproxy日志/","excerpt":"","text":"我使用的是Ubuntu机器 安装Elasticsearch 【可选】安装JDK sudo apt install openjdk-8-jdk-headless（如果本机有请跳过）（如果没有 使用java命令 ,系统会提示用什么命令安装） 在elastic.co上下载 Elasticsearch OSS 版本 【可选】配置JAVA环境变量（如果本机有请跳过,就用jdk1.8 不要用其他版本） 命令一：which java 命令二：ls -lrt /usr/bin/java 命令三：ls -lrt /etc/alternatives/java 最后将会得出这样的目录 /usr/lib/jvm/java-8-openjdk-amd64(每个人不一样，以实际情况为准) 【可选】配置环境变量，执行命令 vi /etc/profile；然后进入编辑模式，在文件的最后添加下面的配置 JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 JRE_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH 执行命令 source /etc/profile 使用环境变量生效 在 usr 下创建 elasticsearch 目录 sudo mkdir /usr/elasticsearch tar -zxvf 下载下来的 elasticsearch-oss-x.x.x.tar.gz 放到 /usr/elasticsearch 下 【可选】创建ES用户和组（创建elsearch用户组及elsearch用户），因为使用root用户执行ES程序，将会出现错误；所以这里需要创建单独的用户去执行ES 文件；命令如下（如果存在普通用户就不用新建了） 命令一：groupadd elsearch 命令二：useradd elsearch -g elsearch 命令三：chown -R elsearch:elsearch /usr/elasticsearch 该命令是更改该文件夹下所属的用户组的权限 在/usr/elasticsearch中创建ES数据文件和日志文件 命令一：mkdir -p data (修改所属权限) 命令二：mkdir -p logs (修改所属权限) 修改 /usr/elasticsearch/config/elasticsearch.yml 文件 （可以使用默认） 使用 /usr/elasticsearch/bin/elasticsearch -d 用后台启动 测试是否启动成功 安装Logstash Logstash是一个开源的服务器端数据处理管道，可以同时从多个数据源获取数据，并对其进行转换，然后将其发送到你最喜欢的“存储”。（当然，我们最喜欢的是Elasticsearch） 在elastic.co上下载 Logstash 并解压 配置logstash 在logstash下运行 ./bin/logstash -f 自定义配置文件路径 启动logstash tail 日志 显示Non-zero metrics in the last 30s字样就启动成功了 ps: 无知的我一直在tail 生成的日志，其实已经写进去了，只不过没有日志，可能修改日志级别就好了 安装Filebeat 在elastic.co上下载 Filebeat OSS 并解压 （使用getconf LONG_BIT查看ubuntu位数） 修改yml配置文件，将output转为logstash的。(如果配置文件看着乱，可以自己再写一个 filebeat -e -c 配置文件路径) 启动对haproxy 和 logstash的支持 ./filebeat modules enable haproxy ./filebeat modules enable logstash 安装Kibana 在elastic.co上下载 Kiana OSS 并解压 然后到kibana安装目录的config下，编辑kibana.yml配置文件，(可以使用默认) ./bin/kibana &amp; 启动然后输入exit就后台启动了 浏览器 127.0.0.1:5601 打开kibana控制台 验证数据GET 请求 elasticsearch服务器/_search 查看是否有数据 遇到的问题如何切换kibana控制台的数据源 二货的我用自带的测试数据打开了，在 左侧 Management -&gt; Index Patterns -&gt; create index pattern输入index-name 下一步创建，再切回面板就好了 汉化Kibana界面 奶奶的，不光二，英语还不好。算了 汉化吧 wget -c https://codeload.github.com/anbai-inc/Kibana_Hanization/zip/master -O Kibana_Hanization-master.zip 下载并解压 执行汉化命令 `python main.py ~/kibana-6.6.1-linux-x86_64/` 重启kibana(汉化只能解决部分问题，重要的还是学英语吧) 相关文章","categories":[{"name":"server","slug":"server","permalink":"http://fengtianhe.cn/categories/server/"}],"tags":[{"name":"Haproxy","slug":"Haproxy","permalink":"http://fengtianhe.cn/tags/Haproxy/"},{"name":"Logstash","slug":"Logstash","permalink":"http://fengtianhe.cn/tags/Logstash/"},{"name":"Filebeat","slug":"Filebeat","permalink":"http://fengtianhe.cn/tags/Filebeat/"}]},{"title":"PHP扩展-Redis","slug":"PHP扩展-Redis","date":"2019-03-04T01:39:23.000Z","updated":"2019-11-07T01:56:39.302Z","comments":true,"path":"PHP扩展-Redis/","link":"","permalink":"http://fengtianhe.cn/PHP扩展-Redis/","excerpt":"","text":"安装Redis在redis.io下载lts版本源码 编译源码1234$ tar -zxvf redis-xxxx.tar.gz$ cd redis-xxxx$ make$ make PREFIX=/usr/local/redis install 配置文件12345$ mkdir /usr/local/redis/etc/$ cp redis.conf /usr/local/redis/etc/$ cd /usr/local/redis/bin/$ vim /usr/local/redis/etc/redis.conf 修改一下配置redis以守护进程的方式运行no表示不以守护进程的方式运行(会占用一个终端)daemonize yes 安装php扩展我的服务器是php5.6 我选用的phpredis 是 2.2.8 版本首先下载扩展PECL 123456$ tar -zxvf redis-2.2.8.tgz$ cd redis-2.2.8$ phpize #用phpize生成configure配置文件$ ./configure --with-php-config=/usr/bin/php-config #配置$ make #编译$ make install #安装 然后会提示一个目录，通过php -i | grep php.ini 查找PHP配置文件，然后将redis.so添加到扩展列表中应用php扩展Apache平滑重启apache(不会对当前启动的程序产生影响)apachectl -k graceful NginxNginx 是通过php-fpm加载的扩展 php 5.3.3 以后的php-fpm 不再支持 php-fpm 以前具有的 /Data/apps/php7/sbin/php-fpm(start|stop|reload)等命令，所以不要再看这种老掉牙的命令了，需要使用信号控制 master进程可以理解以下信号 INT, TERM 立刻终止QUIT 平滑终止USR1 重新打开日志文件USR2 平滑重载所有worker进程并重新载入配置和二进制模块 一个简单直接的重启方法： 先查看php-fpm的master进程号12345678910111213141516171819202122$ ps aux|grep php-fpmroot 1565 0.0 0.6 499908 6596 ? Ss Feb27 0:10 php-fpm: master process (/etc/php-fpm.conf)apache 1566 0.0 3.1 503588 32176 ? S Feb27 0:03 php-fpm: pool wwwapache 1567 0.0 3.0 503552 31080 ? S Feb27 0:03 php-fpm: pool wwwapache 1568 0.0 3.1 502880 31868 ? S Feb27 0:03 php-fpm: pool wwwapache 1569 0.0 3.1 504372 32196 ? S Feb27 0:03 php-fpm: pool wwwapache 1570 0.0 2.8 503556 28844 ? S Feb27 0:03 php-fpm: pool wwwapache 1963 0.0 3.0 503040 31192 ? S Feb27 0:03 php-fpm: pool wwwapache 5390 0.0 2.7 503540 28556 ? S Feb28 0:02 php-fpm: pool wwwapache 5657 0.0 2.8 503568 29400 ? S Mar01 0:02 php-fpm: pool wwwapache 7421 0.0 2.6 503308 26968 ? S Mar01 0:02 php-fpm: pool wwwroot 23263 0.0 0.0 103264 844 pts/1 S+ 11:28 0:00 grep php-fpm$ kill -USR2 1565 #重启php-fpm$ ps aux|grep php-fpm #重新看下进程号root 23275 0.0 0.6 499908 6560 ? Ss 11:30 0:00 php-fpm: master process (/etc/php-fpm.conf)apache 23276 0.0 0.5 499908 5664 ? S 11:30 0:00 php-fpm: pool wwwapache 23277 0.0 0.5 499908 5664 ? S 11:30 0:00 php-fpm: pool wwwapache 23278 0.0 0.5 499908 5664 ? S 11:30 0:00 php-fpm: pool wwwapache 23279 0.0 0.5 499908 5672 ? S 11:30 0:00 php-fpm: pool wwwapache 23280 0.0 0.5 499908 5672 ? S 11:30 0:00 php-fpm: pool wwwroot 23282 0.0 0.0 103264 844 pts/1 S+ 11:30 0:00 grep php-fpm","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://fengtianhe.cn/tags/PHP/"},{"name":"PHP扩展","slug":"PHP扩展","permalink":"http://fengtianhe.cn/tags/PHP扩展/"}]},{"title":"Git命令","slug":"Git命令","date":"2019-02-26T15:49:37.000Z","updated":"2019-11-07T01:56:39.278Z","comments":true,"path":"Git命令/","link":"","permalink":"http://fengtianhe.cn/Git命令/","excerpt":"","text":"Git大小写默认git忽略大小写git config core.ignorecase false //当前仓库关闭忽略git config core.ignorecase false --global //全局仓库关闭忽略","categories":[{"name":"others","slug":"others","permalink":"http://fengtianhe.cn/categories/others/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://fengtianhe.cn/tags/Git/"}]},{"title":"Android 发布部署限制","slug":"Android-发布部署限制","date":"2019-02-25T09:11:30.000Z","updated":"2019-11-07T01:56:39.276Z","comments":true,"path":"Android-发布部署限制/","link":"","permalink":"http://fengtianhe.cn/Android-发布部署限制/","excerpt":"","text":"由于进入创业公司，没有一套完整的开发流程，每个人都有不同的开发方式，导致线上出线bug Bug原因：由于android项目，发布部署的分支没有被限制导致用户使用了开发分支的版本。 解决：在编译脚本中添加限制 脚本中使用git 的 tag 和appVersionName 限制了编译版本，以供参考，具体业务具体修改 123456789101112131415161718192021222324252627282930313233343536373839404142echo \"编译正式版本！编译过程中会出现很多信息，请确认：\"curr_branch=`git symbolic-ref --short -q HEAD`echo \"当前分支：$curr_branch\"build_branch='master'if [[ \"$curr_branch\" != \"$build_branch\" ]];then echo \"当前不是master分支，不编译\" exitfi#xargs 实现 trim 功能latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` | xargs)#读取AndroidManifest文件第6行versionName配置app_version=`sed -n \"6p\" ./CainiaoCRM/src/main/AndroidManifest.xml | sed -e 's/android:versionName=\\\"\\(.*\\)\\\"&gt;/\\1/' | xargs`echo \"最新tag：$latest_tag\"echo \"当前app编译版本：$app_version\"if [[ \"$latest_tag\" != \"$app_version\" ]];then #确认版本号 echo \"当前App编译版本和Tag版本不同，是否继续编译(y/n)：\" read USER_CONFIRM_VERSION if [[ \"$USER_CONFIRM_VERSION\" = \"n\" ]] || [[ \"$USER_CONFIRM_VERSION\" = \"N\" ]] || [[ -z \"$USER_CONFIRM_VERSION\" ]];then echo \"结束编译\" exit fi #创建Tag echo \"当前App编译版本和Tag版本不同，是否创建新版本Tag(y/n)：\" read USER_CONFIRM_CREATE_TAG if [[ \"$USER_CONFIRM_CREATE_TAG\" = \"n\" ]] || [[ \"$USER_CONFIRM_CREATE_TAG\" = \"N\" ]] || [[ -z \"$USER_CONFIRM_CREATE_TAG\" ]];then echo \"结束编译\" exit else git push origin $&#123;app_version&#125; fifiecho \"开始编译....\"","categories":[{"name":"fe","slug":"fe","permalink":"http://fengtianhe.cn/categories/fe/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://fengtianhe.cn/tags/项目发布/"},{"name":"ReactNative","slug":"ReactNative","permalink":"http://fengtianhe.cn/tags/ReactNative/"},{"name":"Android","slug":"Android","permalink":"http://fengtianhe.cn/tags/Android/"}]},{"title":"开发工具-Terminal配色方案","slug":"开发工具-terminal配色方案","date":"2018-06-12T09:49:05.000Z","updated":"2019-11-07T01:56:39.310Z","comments":true,"path":"开发工具-terminal配色方案/","link":"","permalink":"http://fengtianhe.cn/开发工具-terminal配色方案/","excerpt":"","text":"MAC下Iterm2配色方案1.编辑bash_profile文件vim ~/.bash_profile 2.带有 git 分支形式的123456789101112131415161718192021222324find_git_branch () &#123; local dir=. head until [ \"$dir\" -ef / ]; do if [ -f \"$dir/.git/HEAD\" ]; then head=$(&lt; \"$dir/.git/HEAD\") if [[ $head = ref:\\ refs/heads/* ]]; then git_branch=\" ($&#123;head#*/*/&#125;)\" elif [[ $head != '' ]]; then git_branch=\" → (detached)\" else git_branch=\" → (unknow)\" fi return fi dir=\"../$dir\" done git_branch=''&#125;PROMPT_COMMAND=\"find_git_branch; $PROMPT_COMMAND\"green=$'\\[\\033[01;32m\\]'grey=$'\\[\\033[00m\\]'blue=$'\\[\\033[01;36m\\]'red=$'\\[\\e[1;31m\\]'PS1=\"$green\\u@\\h$grey:$blue\\W$red\\$git_branch$grey\\$ \" 3.没有 git 分支形式的12345678910#enables colorin the terminal bash shell exportexport CLICOLOR=1#setsup thecolor scheme for list exportexport LSCOLORS=gxfxcxdxbxegedabagacad#sets up theprompt color (currently a green similar to linux terminal)#export PS1='\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;36m\\]\\w\\[\\033[00m\\]\\$ '#enables colorfor iTermexport TERM=xterm-256color 4.生效配置source ~/.bash_profile 5.效果图","categories":[{"name":"others","slug":"others","permalink":"http://fengtianhe.cn/categories/others/"}],"tags":[{"name":"开发工具","slug":"开发工具","permalink":"http://fengtianhe.cn/tags/开发工具/"}]},{"title":"Let's Encrypt，免费好用的 HTTPS 证书","slug":"服务器配置--免费好用的HTTPS","date":"2018-05-22T04:21:38.000Z","updated":"2019-11-07T01:56:39.319Z","comments":true,"path":"服务器配置--免费好用的HTTPS/","link":"","permalink":"http://fengtianhe.cn/服务器配置--免费好用的HTTPS/","excerpt":"","text":"本文转自Jerry Qu 的 Let’s Encrypt，免费好用的 HTTPS 证书。如果需要查看评论和解决方案，请点击 1.创建账号首先创建一个目录，例如 ssl，用来存放各种临时文件和最后的证书文件。进入这个目录，创建一个 RSA 私钥用于 Let’s Encrypt 识别你的身份： 1openssl genrsa 4096 &gt; account.key 2.创建 CSR 文件接着就可以生成 CSR（Certificate Signing Request，证书签名请求）文件了。在这之前，还需要创建域名私钥（一定不要使用上面的账户私钥），根据证书不同类型，域名私钥也可以选择 RSA 和 ECC 两种不同类型。以下两种方式请根据实际情况二选一。1）创建 RSA 私钥（兼容性好）： 1openssl genrsa 4096 &gt; domain.key 2）创建 ECC 私钥（部分老旧操作系统、浏览器不支持。优点是证书体积小）： 12345#secp256r1openssl ecparam -genkey -name secp256r1 | openssl ec -out domain.key#secp384r1openssl ecparam -genkey -name secp384r1 | openssl ec -out domain.key 有关 ECC 证书的更多介绍，请点击这里。 有了私钥文件，就可以生成 CSR 文件了。在 CSR 中推荐至少把域名带 www 和不带 www 的两种情况都加进去，其它子域可以根据需要添加（目前一张证书最多可以包含 100 个域名）： 1openssl req -new -sha256 -key domain.key -subj \"/\" -reqexts SAN -config &lt;(cat /etc/ssl/openssl.cnf &lt;(printf \"[SAN]\\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com\")) &gt; domain.csr 执行这一步时，如果提示找不到 /etc/ssl/openssl.cnf 文件，请看看 /usr/local/openssl/ssl/openssl.cnf 是否存在。如果还是不行，也可以使用交互方式创建 CSR（需要注意 Common Name 必须为你的域名）： 1openssl req -new -sha256 -key domain.key -out domain.csr 3.配置验证服务我们知道，CA 在签发 DV（Domain Validation）证书时，需要验证域名所有权。传统 CA 的验证方式一般是往 `admin@yoursite.com` 发验证邮件，而 Let’s Encrypt 是在你的服务器上生成一个随机验证文件，再通过创建 CSR 时指定的域名访问，如果可以访问则表明你对这个域名有控制权。 首先创建用于存放验证文件的目录，例如： 1mkdir ~/www/challenges/ 然后配置一个 HTTP 服务，以 Nginx 为例： 123456789101112server &#123; server_name www.yoursite.com yoursite.com; location ^~ /.well-known/acme-challenge/ &#123; alias /home/xxx/www/challenges/; try_files $uri =404; &#125; location / &#123; rewrite ^/(.*)$ https://yoursite.com/$1 permanent; &#125;&#125; 以上配置优先查找 ~/www/challenges/ 目录下的文件，如果找不到就重定向到 HTTPS 地址。这个验证服务以后更新证书还要用到，建议一直保留。 4.获取网站证书先把 acme-tiny 脚本保存到之前的 ssl 目录：1wget https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py 指定账户私钥、CSR 以及验证目录，执行脚本：1python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir ~/www/challenges/ &gt; ./signed.crt 如果一切正常，当前目录下就会生成一个 signed.crt，这就是申请好的证书文件。 如果你把域名 DNS 解析放在国内，这一步很可能会遇到类似这样的错误：1ValueError: Wrote file to /home/xxx/www/challenges/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg, but couldn't download http://www.yoursite.com/.well-known/acme-challenge/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg 这是因为你的域名很可能在国外无法解析，可以找台国外 VPS 验证下。我的域名最近从 DNSPod 换到了阿里云解析，最后又换到了 CloudXNS，就是因为最近前两家在国外都很不稳定。如果你也遇到了类似情况，可以暂时使用国外的 DNS 解析服务商，例如 dns.he.net。如果还是搞不定，也可以试试「Neilpang/le」这个工具的 DNS Mode。 搞定网站证书后，还要下载 Let’s Encrypt 的中间证书。我在之前的文章中讲过，配置 HTTPS 证书时既不要漏掉中间证书，也不要包含根证书。在 Nginx 配置中，需要把中间证书和网站证书合在一起：12wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pemcat signed.crt intermediate.pem &gt; chained.pem 为了后续能顺利启用 OCSP Stapling，我们再把根证书和中间证书合在一起：12wget -O - https://letsencrypt.org/certs/isrgrootx1.pem &gt; root.pemcat intermediate.pem root.pem &gt; full_chained.pem 最终，修改 Nginx 中有关证书的配置并 reload 服务即可：12ssl_certificate ~/www/ssl/chained.pem;ssl_certificate_key ~/www/ssl/domain.key; Nginx 中与 HTTPS 有关的配置项很多，这里不一一列举了。如有需要，请参考本站配置 5.配置自动更新Let’s Encrypt 签发的证书只有 90 天有效期，推荐使用脚本定期更新。例如我就创建了一个 renew_cert.sh 并通过 chmod a+x renew_cert.sh 赋予执行权限。文件内容如下： 1234567#!/bin/bashcd /home/xxx/www/ssl/python acme_tiny.py --account-key account.key --csr domain.csr --acme-dir /home/xxx/www/challenges/ &gt; signed.crt || exitwget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pemcat signed.crt intermediate.pem &gt; chained.pemservice nginx reload crontab 中使用绝对路径比较保险，crontab -e 加入以下内容：10 0 1 * * /home/xxx/shell/renew_cert.sh &gt;/dev/null 2&gt;&amp;1 这样以后证书每个月都会自动更新，一劳永逸。实际上，Let’s Encrypt 官方将证书有效期定为 90 天一方面是为了更安全，更重要的是鼓励用户采用自动化部署方案。","categories":[{"name":"server","slug":"server","permalink":"http://fengtianhe.cn/categories/server/"}],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://fengtianhe.cn/tags/服务器/"}]},{"title":"MySQL数据库优化【4】分析有问题的sql语句","slug":"MySQL数据库优化【4】分析有问题的sql语句","date":"2018-03-21T07:22:38.000Z","updated":"2019-11-07T01:56:39.285Z","comments":true,"path":"MySQL数据库优化【4】分析有问题的sql语句/","link":"","permalink":"http://fengtianhe.cn/MySQL数据库优化【4】分析有问题的sql语句/","excerpt":"","text":"通过慢查日志分析有问题的语句1、查询次数多切每次查询占用时间长的SQL通常为pt-qeury-digest分析的前几个查询，查看pt-query-digest 第三部分 Exec time 项为占用时间 2、IO大的SQL注意pt-query-digest分析中Rows examine项，扫描的行数多，也就表示占的IO大 3、未命中索引的SQL注意pt-query-digest中Rows examine 和 Rows Send 的对比 如果Rows examine &gt;&gt; Rows Send，就说明想要的数据少， 但是扫描到了大量的数据 使用explain查询SQL的执行计划eg:mysql&gt; explain select customer_id,first_name,last_name from customer mysql&gt; explain select customer_id,first_name,last_name from customer; +----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+ | 1 | SIMPLE | customer | NULL | ALL | NULL | NULL | NULL | NULL | 599 | 100.00 | NULL | +----+-------------+----------+------------+------+---------------+------+---------+------+------+----------+-------+ 1 row in set, 1 warning (0.01 sec) table：显示查询的哪张表 partitions: 表示给定表所使用的区域使用expain partitions才会有值 type：这是重要的列，显示连接使用了哪种类型，从最好到最差的连接类型为const、eq_reg、ref、range、index、ALL const为常数查找,基本上用到主键查询或者唯一索引查询； eq_reg为范围查找 ref为基于索引的查找 range为基于索引的范围查找 index为对于索引的扫描 ALL为表扫描 possible_keys: 显示可能应用在这张表中的索引。如果为空，没有可能的索引。 key：实际使用的索引，如果为空，则没有使用索引 key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好。 ref：显示索引的哪一列被使用了，如果可能的话，是一个常数。 rows：MYSQL认为必须检查的用来放回请求数据的行数。 filtered：显示了通过条件过滤出的行数的百分比估计值 extra：额外的属性值。需要注意的返回值 Using filesort：[使用文件排序]看到这个的时候，查询就需要优化了，MYSQL需要进行额外的步骤来发现如何对放回的行排序。他根据连接类型及存储排序键值和匹配条件的全部行的指针来排序全部行 Using temporary：[查询用到临时表]看到这个的时候，查询就需要优化了，这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上 上一章:MySQL数据库优化【3】慢查日志分析工具","categories":[{"name":"db","slug":"db","permalink":"http://fengtianhe.cn/categories/db/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://fengtianhe.cn/tags/MySQL/"},{"name":"数据库优化","slug":"数据库优化","permalink":"http://fengtianhe.cn/tags/数据库优化/"}]},{"title":"MySQL数据库优化【3】慢查日志分析工具","slug":"MySQL数据库优化【3】慢查日志分析工具","date":"2018-03-19T07:19:46.000Z","updated":"2019-11-07T01:56:39.284Z","comments":true,"path":"MySQL数据库优化【3】慢查日志分析工具/","link":"","permalink":"http://fengtianhe.cn/MySQL数据库优化【3】慢查日志分析工具/","excerpt":"","text":"mysqldumpslow用于查看并格式化慢查日志 如果系统中没有mysqldumpslow这个命令， 那么到mysql的安装目录下的bin目录下找这个命令，window可以设置环境变量， linux和mac用户可以设置软连接 Usage: mysqldumpslow [OPTS...] [LOGS...] Pares and summarize the MySQL slow query log. Options are --verbose verbose --debug debug --help write this text to standard output -v verbose -d debug -s ORDER what to sort by (al, at, ar, c, l, r, t), &apos;at&apos; is default al: average lock time ar: average rows sent at: average query time c: count l: lock time r: rows sent t: query time -r reverse the sort order (largest last instead of first) -t NUM just show the top n queries -a don&apos;t abstract all numbers to N and strings to &apos;S&apos; -n NUM abstract numbers with at least n digits within names -g PATTERN grep: only consider stmts that include this string -h HOSTNAME hostname of db server for *-slow.log filename (can be wildcard),default is &apos;*&apos;, i.e. match all -i NAME name of server instance (if using mysql.server startup script) -l don&apos;t subtract lock time from total time 例：mysqldumpslow -t 3 mysql-slow.log | more 输出： Reading mysql slow query log from mysql-slow.log Count: 1 Time=0.00s (0s) Lock=0.00s (0s) Rows=1.0 (1), root[root]@localhost show variables like &apos;S&apos; Count: 1 Time=0.00s (0s) Lock=0.00s (0s) Rows=200.0 (200), root[root]@localhost select * from actor Count: 1 Time=0.00s (0s) Lock=0.00s (0s) Rows=9.0 (9), root[root]@localhost show databases 由于演示，我们把慢查超时时间改成了0，所以前三条列出了以上这些，另外慢查日志中记录的是这个服务器所有的慢查语句， 而不是一个数据库的慢查日志 以上数据显示了数据执行的次数、执行时间、加锁时间、影响行数、执行角色和执行地址 pt-query-digest由于这是第三方工具，安装请自行查询 建议安装， 毕竟pt-query-digest比mysqldumpslow更强大 上一章:MySQL数据库优化【2】SQL及索引优化下一章:MySQL数据库优化【4】分析有问题的sql语句","categories":[{"name":"db","slug":"db","permalink":"http://fengtianhe.cn/categories/db/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://fengtianhe.cn/tags/MySQL/"},{"name":"数据库优化","slug":"数据库优化","permalink":"http://fengtianhe.cn/tags/数据库优化/"}]},{"title":"MySQL数据库优化【2】SQL及索引优化","slug":"MySQL数据库优化【2】SQL及索引优化","date":"2018-03-15T08:40:18.000Z","updated":"2019-11-07T01:56:39.282Z","comments":true,"path":"MySQL数据库优化【2】SQL及索引优化/","link":"","permalink":"http://fengtianhe.cn/MySQL数据库优化【2】SQL及索引优化/","excerpt":"","text":"准备数据首先我们需要大量的数据进行分析，这里我们可以使用MySQL官方提供的sakila数据库： http://dev.mysql.com/doc/index-other.html sakila数据库的安装使用过程： http://dev.mysql.com/doc/sakila/en/sakila-installation.html 安装数据下载好数据，依次倒入Schama和Data，显示如下则为成功 USE sakila; Database changed SHOW TABLES; +----------------------------+ | Tables_in_sakila | +----------------------------+ | actor | | address | | category | | city | | country | | customer | | customer_list | | film | | film_actor | | film_category | | film_list | | film_text | | inventory | | language | | nicer_but_slower_film_list | | payment | | rental | | sales_by_film_category | | sales_by_store | | staff | | staff_list | | store | +----------------------------+ 22 rows in set (0.00 sec) SELECT COUNT(*) FROM film; +----------+ | COUNT(*) | +----------+ | 1000 | +----------+ 1 row in set (0.02 sec) SELECT COUNT(*) FROM film_text; +----------+ | COUNT(*) | +----------+ | 1000 | +----------+ 1 row in set (0.00 sec) MySQL慢查询日志的开启方式和储存格式通过慢查询日志我们可以看到那些sql是应该优化的，那我们如何发现有问题的SQL呢？答案就是 使用MySQL慢查日志对效率问题的SQL进行监控 设置慢查询日志路径(设置权限) set global slow_query_log_file= &#39;/Users/fengtianhe/Log/mysql/mysql-slow.log&#39;; 设置没有索引的记录到慢查询日志 set global log_queries_not_using_indexes=on; 查看mysql是否开启慢查询日志 show variables like &#39;slow_query_log&#39;; 开启慢查询日志 set global slow_query_log=on; 查看超过多长时间的sql进行记录到慢查询日志 show variables like &#39;long_query_time&#39;; 设置sql执行长时间(如果没发现生效， 就退出数据库重新链接) set global long_query_time=0; 试一试设置慢查日志之后的你们一定迫不及待了吧，让我们试试吧 use sakila; select * from actor; 这时我们可以看看日志，就记录了我们这次查询的记录由于演示我们把超时设置为0，所以日志中会记录所有的信息,也记录了我们执行的语句 那么让我们看看慢查询日志都记录了些什么 执行SQL的主机信息 # User@Host: root[root] @ localhost [] SQL的执行信息 # Query_time: 0.000461 Lock_time: 0.000064 Rows_sent: 200 Rows_examined: 200 SET timestamp=1521105352; SQL的执行时间 SET timestamp=1521105352; SQL的内容 select * from actor; 上一章:MySQL数据库优化【1】简介下一章:MySQL数据库优化【3】慢查日志分析工具","categories":[{"name":"db","slug":"db","permalink":"http://fengtianhe.cn/categories/db/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://fengtianhe.cn/tags/MySQL/"},{"name":"数据库优化","slug":"数据库优化","permalink":"http://fengtianhe.cn/tags/数据库优化/"}]},{"title":"MySQL数据库优化【1】简介","slug":"MySQL数据库优化【1】简介","date":"2018-03-14T09:30:56.000Z","updated":"2019-11-07T01:56:39.280Z","comments":true,"path":"MySQL数据库优化【1】简介/","link":"","permalink":"http://fengtianhe.cn/MySQL数据库优化【1】简介/","excerpt":"","text":"数据库优化是一个初中级开发人员必须要了解而且会的东西，并且这个技能在每个后端开发的面试中都会问到的。那么为什么数据库优化这么重要，我们就用这一系列文章看一看 数据库优化的目的避免出现页面访问错误 由于数据库链接timeout产生的5xx错误 由于慢查询造成的页面无法加载 由于阻塞造成的数据无法提交增加数据库的稳定性 很多数据库问题都是由于低效的查询引起的优化用户体验 流畅页面的访问速度 良好的网站功能体验 数据库优化方式按成本排序(由低到高)SQL及索引 -&gt; 数据库表结构 -&gt; 系统配置 -&gt; 硬件 按效果排序(由低到高)硬件 -&gt; 系统配置 -&gt; 数据库表结构 -&gt; SQL及索引 sql及索引优化。索引应该适量，不应太多，否则会影响查询和写的速度； 数据库表结构，根据数据设计查询最优的表结构。 系统配置优化，对打开文件数和安全的限制。 硬件，选择最适合数据库的cpu，更快的IO,更大的内存，cpu不是越多越好， IO并不能减少锁的机制，所以说硬件的优化成本越高，效果最差。 下一章 MySQL数据库优化【2】SQL及索引优化","categories":[{"name":"db","slug":"db","permalink":"http://fengtianhe.cn/categories/db/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://fengtianhe.cn/tags/MySQL/"},{"name":"数据库优化","slug":"数据库优化","permalink":"http://fengtianhe.cn/tags/数据库优化/"}]},{"title":"各大主要应用市场上架地址","slug":"各大主要应用市场上架地址","date":"2018-03-12T09:03:20.000Z","updated":"2019-11-07T01:56:39.307Z","comments":true,"path":"各大主要应用市场上架地址/","link":"","permalink":"http://fengtianhe.cn/各大主要应用市场上架地址/","excerpt":"","text":"1、腾讯应用宝 腾讯开放平台地址：http://open.qq.com 注册开发者帐号地址：https://ssl.zc.qq.com/v3/index-chs.html 重要提示：开发者QQ号码一旦注册不能变更，建议使用公司老板或法人的QQ号码而不是员工私人号码注册，以免遇到员工离职等情况造成不必要的麻烦。2017年9月18日以后应用上架要提交软件著作权证明（原件扫描）或者该应用PC官网ICP备案截图+官网地址+2个以上的应用宝以外市场上线后台状态截图代替，软著后续补上。如果APP在应用宝搜索不到（不能外显），则必须提供软著+版号。 注册开发者帐号方法： http://wiki.open.qq.com/wiki/%E6%B3%A8%E5%86%8C%E5%BC%80%E5%8F%91%E8%80%85%E5%B8%90%E5%8F%B7 应用提交方法：http://wiki.open.qq.com/wiki/%E5%88%9B%E5%BB%BA%E6%96%B0%E5%BA%94%E7%94%A8 2、360手机助手 360开放平台地址：http://dev.360.cn 注册开发者帐号地址：http://dev.360.cn 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，要提供身份证号，银行卡号及预留的手机验证码验证。应用上架必须要提交360的保证函。 注册开发者帐号方法：http://dev.360.cn/wiki 应用提交方法：http://dev.360.cn/wiki/index/id/21 3、百度手机助手/安卓市场/91助手 百度开发者平台地址：http://app.baidu.com 重要提示：百度手机助手、91助手 和安卓市场是联盟平台，在百度开发平台中上传APP通过审核后，在其它两个平台也可以搜索到自己的APP。这里只需要注册一个百度开发者帐号即可。 开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交百度的保证函。 注册开发者帐号方法：http://app.baidu.com/docs?id=2&amp;frompos=401003 应用提交方法：http://app.baidu.com/docs?id=5&amp;frompos=401007 4、小米应用商店 小米开放平台网站：https://dev.mi.com 注册开发者帐号地址：https://account.xiaomi.com/pass/register 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，要提供身份证号，银行卡号及预留的手机验证码验证。该认证将调用“小米支付”服务，在该小米账号下绑定银行卡进行实名认证。 注册开发者帐号方法：https://dev.mi.com/docs/appsmarket/distribution/account_register/ 应用提交方法：https://dev.mi.com/docs/appsmarket/distribution/app_submit/ 5、华为应用市场 华为开发者联盟地址：http://developer.huawei.com/consumer/cn 注册开发者帐号地址：https://hwid1.vmall.com/CAS/portal/userRegister/regbyphone.html 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交华为的免责函。 注册开发者帐号方法： http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95 应用提交方法： http://developer.huawei.com/consumer/cn/wiki/index.php?title=%E5%88%9B%E5%BB%BA%E5%B9%B6%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8 6、阿里应用商店/豌豆荚/PP助手 阿里开发者平台地址：http://open.uc.cn 重要提示：阿里应用分发 整合了 豌豆荚、阿里九游、PP助手、UC应用商店、神马搜索，并联合YunOS应用商店等应用分发平台，实现全流量矩阵布局。这里只需要注册一个阿里开发者帐号即可。 注册开发者帐号地址：https://reg.taobao.com/member/reg/fill_mobile.htm 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。企业操作人要进行实名认证，用支付宝扫描二维码进行实名认证。应用上架必须要提交阿里的保证函。 注册开发者帐号方法：http://aliapp.open.uc.cn/wiki/?p=35 应用提交方法：http://aliapp.open.uc.cn/wiki/?p=40 7、三星应用商店 三星开发者平台地址：http://support-cn.samsung.com/App/DeveloperChina/Home/Index 重要提示：全球开发者:只有当您与 Samsung Electronics Co. 有合作关系，才应选择全球开发者类型。完成卖家注册后：请联系您的三星对手方以批准三星应用商店的合作伙伴关系请求。如果无法确认您的合作关系，您必须重新注册会员资格。 主题开发者: 主题开发者类型的卖家只能使用三星SDK注册应用程序，但可以将应用程序销售到所有国家/地区。 中国开发者: 中国开发者类型的卖家可注册不使用三星SDK的应用程序，但只可将应用程序出售到中国。 注册开发者帐号地址：https://seller.samsungapps.com/join/joinNow.as 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。法人和联系人要双手持身份证拍照，要露出双臂，照片不能用软件处理。 注册开发者帐号方法： http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=38 应用提交方法：（需要下载三星应用商店上传手册） http://support-cn.samsung.com/App/DeveloperChina/home/list?parentid=11&amp;newsid=11 8、OPPO应用商店 OPPO开发者联盟地址：http://open.oppomobile.com 注册开发者帐号地址：http://open.oppomobile.com/newuser/signup 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。必须要软件著作权，没有软著则可以试着在后台补交（华为、小米、应用宝）三家中的两家后台上架截图作为辅助依据上架，碰碰运气。应用上架必须要提交OPPO的免责函。 注册开发者帐号方法：http://open.oppomobile.com/doc/index?idx=0&amp;item=39 应用提交方法：http://jingyan.baidu.com/article/d169e186656065436611d897.html 9、ViVO应用商店 ViVO开发者联盟地址：https://dev.vivo.com.cn 注册开发者帐号地址： https://id.vivo.com.cn/?callback=http://dev.vivo.com.cn&amp;registerSource=1&amp;_201707171541#!/access/register 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。要记得填写联系人信息。 注册开发者帐号方法：https://dev.vivo.com.cn/doc/document/info 应用提交方法：https://dev.vivo.com.cn/doc/document/info?id=52 10、联想应用商店 联想开发者联盟地址：http://open.lenovo.com 注册开发者帐号地址：https://passport.lenovo.com/wauthen2/wauth/jsp/register.jsp 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交联想的免责函。 注册开发者帐号方法：http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/zhzc/ 应用提交方法： http://open.lenovo.com/developer/adp/helpData/database_detail.jsp?url=http://open.lenovo.com/sdk/?p=796 11、魅族应用商店 魅族开发者联盟地址：http://open.flyme.cn 注册开发者帐号地址：https://i.flyme.cn/register 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交魅族的免责函。 注册开发者帐号方法： http://open-wiki.flyme.cn/index.php?title=%E6%96%B0%E6%89%8B%E6%8C%87%E5%8D%97 应用提交方法： http://open-wiki.flyme.cn/index.php?title=%E5%BA%94%E7%94%A8%E5%8F%91%E5%B8%83 12、金立应用商店 金立开发者联盟地址：https://open.appgionee.com 注册开发者帐号地址：https://open.appgionee.com/cp/register 重要提示：开发者帐号，建议使用公司老板或法人的邮箱或手机，而不是员工私人邮箱或手机注册，以免遇到员工离职等情况造成不必要的麻烦。应用上架必须要提交金立的承诺书。 注册开发者帐号方法： https://open.appgionee.com/cp/help 应用提交方法： https://open.appgionee.com/cp/help 感觉华为、小米对资料的要求是最严格的；然后是360、魅族、阿里，如果你的应用程序是批量制作的，使用单一或几个模板生成的，或用简单文字、图片打包而成的话，它可以检测出来，并且不会让你通过审核。 联想和vivo应该算是最好通过的。 百度、小米、华为、魅族的开发者帐号审核相对慢一点，阿里、360跟腾讯还算比较快的，上架应用审核时间也相对比较快。只要资料全，其实很容易通过的。 应用审核，OPPO要求要软著，审核上架不易。","categories":[{"name":"others","slug":"others","permalink":"http://fengtianhe.cn/categories/others/"}],"tags":[]},{"title":"快速开发基于AndroidWebView的WebApp[2]----显示一个Baidu","slug":"快速开发基于AndroidWebView的WebApp-2-显示一个baidu","date":"2018-03-08T10:07:17.000Z","updated":"2019-11-07T01:56:39.318Z","comments":true,"path":"快速开发基于AndroidWebView的WebApp-2-显示一个baidu/","link":"","permalink":"http://fengtianhe.cn/快速开发基于AndroidWebView的WebApp-2-显示一个baidu/","excerpt":"","text":"在上一节中我们只新建了一个项目， 在这一节中， 我们要显示一个baidu 来达到webview的效果 1.允许联网允许网络权限！允许网络权限！允许网络权限！没网还玩个蛋 在src/main/res下的AndroidManifest.xml中添加 &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt; 2.创建一个layout显示webview的区域在src/main/res下有个layout目录(没有则手动创建)加一个activity_main.xml 123456789101112131415161718&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\" android:id=\"@+id/activity_main\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" tools:context=\"com.example.fengtianhe.webviewdemo.MainActivity\"&gt; &lt;!-- 这里的tools:context要和你项目包保持一致 --&gt; &lt;WebView android:id=\"@+id/webView1\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:scrollbars=\"vertical\" android:layout_below=\"@+id/action_bar\" /&gt;&lt;/LinearLayout&gt; 3.创建Activity类在你的src/main/java/com..下创建一个继承AppCompatActivity的类123456package com.example.fengtianhe.webviewdemo;import android.support.v7.app.AppCompatActivity;public class MainActivity extends AppCompatActivity &#123;&#125; 在类中定义一个webview变量，并且复写一个oncreate的类WebView mWebview;123456789101112131415161718package com.example.fengtianhe.webviewdemo;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.webkit.WebView;public class MainActivity extends AppCompatActivity &#123; WebView mWebview; @Override protected void onCreate(Bundle savedInstanceState)&#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mWebview = (WebView) findViewById(R.id.webView1); //获取窗口 mWebview.loadUrl(\"http://www.baidu.com/\"); //加载网址 &#125;&#125; 修改AndroidManifest.xml设置主activity123456789101112131415&lt;application android:allowBackup=\"true\" android:icon=\"@mipmap/ic_launcher\" android:label=\"@string/app_name\" android:roundIcon=\"@mipmap/ic_launcher_round\" android:supportsRtl=\"true\" android:theme=\"@style/AppTheme\" &gt; &lt;activity android:name=\"com.example.fengtianhe.webviewdemo.MainActivity\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; &lt;/application&gt; 运行项目提示如下, 这就很操蛋了， 我们想做一个app，这又让用浏览器打开。 不行，我们得用自己的窗口打开，搞他 1234567891011121314151617181920212223242526import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.webkit.WebView;import android.webkit.WebViewClient;public class MainActivity extends AppCompatActivity &#123; WebView mWebview; @Override protected void onCreate(Bundle savedInstanceState)&#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); mWebview = (WebView) findViewById(R.id.webView1); mWebview.setWebViewClient(new WebViewClient()&#123; @Override public boolean shouldOverrideUrlLoading(WebView view, String url) &#123; view.loadUrl(url); return true; &#125; &#125;); mWebview.loadUrl(\"http://www.baidu.com/\"); &#125;&#125; 搞定","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://fengtianhe.cn/tags/Android/"}]},{"title":"快速开发基于AndroidWebView的WebApp[1]----初始化项目","slug":"快速开发基于AndroidWebView的WebApp-1-初始化项目","date":"2018-03-08T09:15:46.000Z","updated":"2019-11-07T01:56:39.316Z","comments":true,"path":"快速开发基于AndroidWebView的WebApp-1-初始化项目/","link":"","permalink":"http://fengtianhe.cn/快速开发基于AndroidWebView的WebApp-1-初始化项目/","excerpt":"","text":"本文章仅献给一点毫无Android基础的开发人员快速开发webview项目 1.准备工作1.1 安装环境下载java 并配置环境变量 因为操作系统不同 请自找度娘求教这是我在mac上的配置 1.2 安装开发环境android studio 官网 由于我本地已经搭建好开发环境，我已经忘了当时出什么坑爹的bug了， 自行搜索吧 2. 创建项目 打开android studio 点击 start a new Android Studio project 填写公司名和项目名， 对应关系见两个图， 这些保证软件的唯一性，比如腾讯公司的软件一般都是com.tencent.** 第二步，选择手机api，这个以目前大多数手机为准，现在（2018年03月）大多手机都是android7.0+ 所以我选择API24 第三步，也是最后一步，因为我们用的是webview，header和footer都可以写在页面中，所以我们不需要activity， 点击finish 下一章快速开发基于AndroidWebView的WebApp[2]—-显示一个baidu","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://fengtianhe.cn/tags/Android/"}]},{"title":"快速入门SpringBoot(四)----数据库操作","slug":"快速入门SpringBoot-四-数据库操作","date":"2018-03-06T11:05:36.000Z","updated":"2019-11-07T01:56:39.315Z","comments":true,"path":"快速入门SpringBoot-四-数据库操作/","link":"","permalink":"http://fengtianhe.cn/快速入门SpringBoot-四-数据库操作/","excerpt":"","text":"安装依赖说到数据库的操作, 我们需要两个依赖,分别是123456789&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;&lt;/dependency&gt; 修改配置文件在配置文件中设置数据库配置 创建Model类然后创建一个类,定义字段和构造方法以及getter和setter方法, idea的快捷键是control+回车 然后运行会发现数据库自动创建了一个表 ddl-auto其他的属性值 数据库创建完毕然后进行数据库操作吧先建一个RestfulApi的类 请求类型 请求路径 功能 GET /girls 获取列表 POST /girls 创建一条数据 GET /girls/{id} 通过id查询一条记录 PUT /girls/{id} 通过id修改一条记录 DELETE /girls/{id} 通过id删除一条记录 创建一个JPA的接口类 也可以通过字段去查询 jpa命名规则http://blog.csdn.net/sbin456/article/details/53304148","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://fengtianhe.cn/tags/Java/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://fengtianhe.cn/tags/SpringBoot/"}]},{"title":"快速入门SpringBoot(三)----Controller的使用","slug":"快速入门SpringBoot-三-controller的使用","date":"2018-03-06T11:04:50.000Z","updated":"2019-11-07T01:56:39.312Z","comments":true,"path":"快速入门SpringBoot-三-controller的使用/","link":"","permalink":"http://fengtianhe.cn/快速入门SpringBoot-三-controller的使用/","excerpt":"","text":"controller层是现在框架必不可少的一层,在springBoot中controller的使用需要三个很重要的注解 注解 描述 @controller 处理http请求 @RestController 返回json数据 等同于@Controller 和 @ResponseBody同时使用 @RequestMapping 映射url 我们先写一个控制器,在控制器中返回一个模版名 这时候我们使用spring官方的模版 , 在pom.xml中添加依赖1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;&lt;/dependency&gt; 重新加载maven库 右键pom.xml-&gt;maven-&gt;reimport 这时我们在src/main/resources/templates/下新建一个index.html文件在里面随便写点东西 启动项目看下效果 @RequestMapping(value = {&quot;/hello&quot;,&quot;/hi&quot;}, method = RequestMethod.GET)如果想多个路径都映射到这个方法可以用这个方式 而在有些做接口的时候我们需要同一个controller有同一个路由的前缀, 那么我们就在类的地方加上注解@RequestMapping(value=”/demo”) 这时候我们再访问http://localhost:8080/hello就报404了 这时,我们访问http://localhost:8080/hello/say试试 可以正常使用了 在请求controller的时候, 我们会用到一些注解 注解 描述 @PathVeriable 获取url中数据 @RequestParams 获取请求参数的值 @GetMapping 组合注解 等同于@RequesMapping(method=RequesMethod.GET), 当然还有其他的PostMapping,PutMapping 等等 说多了都是泪, 让我们先写一个小例子🌰看看@PathVeriable 和 @RequestParams的作用","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://fengtianhe.cn/tags/Java/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://fengtianhe.cn/tags/SpringBoot/"}]},{"title":"快速入门SpringBoot(二)----项目的配置文件","slug":"快速入门SpringBoot-二-项目的配置文件","date":"2018-03-06T11:03:14.000Z","updated":"2019-11-07T01:56:39.314Z","comments":true,"path":"快速入门SpringBoot-二-项目的配置文件/","link":"","permalink":"http://fengtianhe.cn/快速入门SpringBoot-二-项目的配置文件/","excerpt":"","text":"项目都会有配置文件的, 配置数据库, redis 等等….那么这个文件在哪藏着呢?项目目录下src/main/resource下有个application.properties文件,这个就是配置文件,当然也有人用 yaml 做配置文件, 这个都是按照个人喜好相同的配置文件properties 和 yaml 写法有些区别 yaml写法key 和value中间的空格一定不能少 配置完了,如何使用,那就要归功于spring强大的注解功能了配置文件没有变量类型, 我们只需要在定义的时候加上类型就可以了 这时候问题又出现了我们如果在每个类文件中一个一个去定义很麻烦, 那么我们需要写个公共获取配置文件的类component和ConfigurationProperties注解很关键 component是在类中使用需要打开浏览器查看效果","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://fengtianhe.cn/tags/Java/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://fengtianhe.cn/tags/SpringBoot/"}]},{"title":"快速入门SpringBoot(一)----使用IDEA快速创建SpringBoot Web项目","slug":"快速入门SpringBoot-一-使用IDEA快速创建SpringBoot Web项目","date":"2018-03-02T06:50:47.000Z","updated":"2019-11-07T01:56:39.311Z","comments":true,"path":"快速入门SpringBoot-一-使用IDEA快速创建SpringBoot Web项目/","link":"","permalink":"http://fengtianhe.cn/快速入门SpringBoot-一-使用IDEA快速创建SpringBoot Web项目/","excerpt":"","text":"这里推荐使用 IntelliJ IDEA 编译器, 有人会问为什么不是使用Eclipse, 答案是IDEA可以快速的创建SpringBoot项目,不需要繁琐的创建过程 言归正传,首先我们需要有个IDEA编译器 下载地址 https://www.jetbrains.com/idea/下载旗舰版,因为只有旗舰版才能创建SpringBoot项目功能下载下来的是30免费使用期的,所以破解就用这个吧 http://idea.lanyus.com/ 下一步就是创建项目了第二个界面确认项目名和包名下一步继续第三个界面,由于是web项目,所以选择web就可以下一步了最后确定项目名和项目目录完成创建项目 #启动项目启动src/main/java目录下的主文件, 右键run ‘XXXApplication’访问浏览器http://localhost:8080显示如下这是因为我们没写任何东西, 按照国际惯例, 我们来写一个hello world 我们新建一个HelloController的类然后搞一些事情(注解是spring框架至关重要的,一个都别丢哈!)访问浏览器localhost:8080/hello瞅瞅我们最亲近的 hello world 大叔吧!!","categories":[{"name":"rd","slug":"rd","permalink":"http://fengtianhe.cn/categories/rd/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://fengtianhe.cn/tags/Java/"},{"name":"SpringBoot","slug":"SpringBoot","permalink":"http://fengtianhe.cn/tags/SpringBoot/"}]}]}